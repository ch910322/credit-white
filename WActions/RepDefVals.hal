external inner procedure In2Period(var string,var Date,var Date);

global
procedure CreditAgreementsRClassReportDefaults(Integer wn)
BEGIN
  record RcVc RepSpec;
  
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  ReportDefaults(RepSpec,"CreditAgreementsRClass");  
  RepSpec.Scaling = 0;
  RepSpec.BaseWidth = 1400;
  PutWindowRecord(wn,RepSpec);
  SelectWindow(wn);
  RETURN;
END;

global
function Boolean CreditAgreementsRClassAfterEditField(Integer wn,string fieldname,Integer fn,Integer rownr,Integer changed)
begin
  Boolean res;
  record RcVc RepSpec;
  Date d1,d2;
  string 255 tstr;
  
  res = false;
  switch (fieldname) begin
    case "Stext":
      GetWindowRecord(wn,RepSpec);
      In2Period(RepSpec.Stext,d1,d2);
      tstr = d1;
      tstr = tstr & ":";
      tstr = tstr & d2;
      RepSpec.Stext = tstr;
      PutWindowRecord(wn,RepSpec);
  end;
  CreditAgreementsRClassAfterEditField = res;
  return;
end;

global
procedure DblCredManTypeVc(string dblstr,string l,Integer currepwn)
begin
  record CredManTypeVc CMTr;
  Integer wn;
  
  CMTr.Code = dblstr;
  if (ReadFirstMain(CMTr,1,true)) then begin
    wn = OpenWindow("CredManTypeDClass",1,0,"","",CMTr);
  end;
  return;
end;


global
procedure LoanApplicationListRClassReportDefaults(Integer wn)
BEGIN
  record RcVc RepSpec;
  
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  ReportDefaults(RepSpec,"LoanApplicationListRClass");  
  RepSpec.Scaling = 0;
  RepSpec.BaseWidth = 1240;
  PutWindowRecord(wn,RepSpec);
  SelectWindow(wn);
  RETURN;
END;

global
procedure CMInvoiceableContractsRClassReportDefaults(Integer wn)
BEGIN
  record RcVc RepSpec;
  
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  ReportDefaults(RepSpec,"CMInvoiceableContractsRClass");  
  RepSpec.d1 = AddDay(CurrentDate,1);
  PutWindowRecord(wn,RepSpec);
  SelectWindow(wn);
  RETURN;
END;


global
function Boolean MailTextRegisterSClassOnOpenWindow(Integer wn)
begin
  Array string 255 astr;
  Integer i,acnt;
  Boolean res;
  
  SetListString(wn,len("Credit Note"),"Credit Note",false);
  SetListString(wn,len("Loan Application"),"Loan Application",false);
  res = inner.MailTextRegisterSClassOnOpenWindow(wn);   
  MailTextRegisterSClassOnOpenWindow = false;
  return;
end;

function Boolean MailTextDClassRegisterEFAfter(Integer wn,Boolean changedf)
begin
  Boolean res;
  record MailTextVc MailTextr;
  
  res = true;
  if (changedf) then begin
    DeselectWindow(wn,false);
    GetWindowRecord(wn,MailTextr);
    switch(MailTextr.Register)begin
      case "Credit Note": MailTextr.FileName = "IVCreditVc";
      case "Loan Application": MailTextr.FileName = "B2BLoanApplicationVc";
      otherwise
      MailTextr.FileName = StringSetFromString(-3,MailTextr.Register);
    end;
    PutWindowRecord(wn,MailTextr);
  end;
  MailTextDClassRegisterEFAfter = res;
  return;
end;

global
function Boolean MailTextDClassAfterEditField(Integer wn,string fieldname,Integer fn,Integer rownr,Integer changed)
begin
  Boolean res;
  
  res = true;
  switch (fieldname) begin
    case "Register": res = MailTextDClassRegisterEFAfter(wn,changed!=0);
    otherwise
      res = inner.MailTextDClassAfterEditField(wn,fieldname,fn,rownr,changed);
  end;
  MailTextDClassAfterEditField = res;
  return;
end;

global
function Boolean CreditAgreementsRClassOnOKWindow(Integer wn)
begin
  record RcVc RepSpec;
  boolean res;

  GetWindowRecord(wn, RepSpec);
  LogText(1,"CreditAgreementsRClassOnOKWindow");
  res = true;

  if (RepSpec.ArtMode == 1) then begin
    RepSpec.BaseWidth = 1400;
  end else begin
    RepSpec.BaseWidth = 750;
  end;

  PutWindowRecord(wn,RepSpec);

  LogText(1,"onok RepSpec.BaseWidth " & RepSpec.BaseWidth);

  CreditAgreementsRClassOnOKWindow = res;
  return;
end;
