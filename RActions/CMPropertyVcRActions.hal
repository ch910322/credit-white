//<halrule>server-only</halrule>


global
function LongInt CMPropertyVcRecordDefaults(var record CMPropertyVc Propr,record CMPropertyVc Prop2r,LongInt long3,LongInt long4)
begin
  LongInt res;
  
  res = 1;  

  if (SingleUserMode) then begin
    Propr.SerNr = NextSerNr("CMPropertyVc",CurrentDate,-1,false,"");
  end;
  
  CMPropertyVcRecordDefaults = res; 
  return;
end;

global
function LongInt CMPropertyVcRecordDuplicate(var record CMPropertyVc Propr,record CMPropertyVc Prop2r,LongInt long3,LongInt long4)
begin
  LongInt res; 
  res = 1;  

  Propr.SerNr = -1;

  CMPropertyVcRecordDuplicate = res; 
  return;
end;

global
updating function LongInt CMPropertyVcRecordCheck(var record CMPropertyVc Propr,record CMPropertyVc Prop2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  record CMPropertyVc tPropr;
  record CMPropertyTypeVc PTr;
  Boolean TrHs;

  res = 0;
  if (Propr.SerNr<=0) then begin
    Propr.SerNr = NextSerNr("CMPropertyVc",CurrentDate,-1,false,"");
  end;

  PTr.Code = Propr.Type;
  if (ReadFirstMain(PTr,1,true)) then begin
    if (PTr.UniqueSerNr==1 and nonblank(Propr.SerialNo)) then begin
      TrHs = true;
      tPropr.SerialNo = Propr.SerialNo;
      while (LoopKey("SerialNo",tPropr,1,TrHs)) begin
        if (tPropr.SerialNo!=Propr.SerialNo) then begin
          TrHs = false;
        end else begin
          if (tPropr.SerNr!=Propr.SerNr) then begin
            RecordCheckError(1243,"",-1,"SerialNo");
            res = -1;
            goto LCMPropertyVcRecordCheck;
          end;
        end;
      end;
    end;
  end;

LCMPropertyVcRecordCheck:;
  CMPropertyVcRecordCheck = res;
  return;
end;


global
updating function LongInt CredManPropertiesVcRecordCheck(var record CredManPropertiesVc Propr,record CredManPropertiesVc Prop2r,LongInt stat,LongInt long4)
begin
  LongInt res;
  integer i,rwcnt;
  row CredManPropertiesVc Proprw;
  record PlegListDataVc PlegListDatar;
  boolean TrHs, testf;
  
  res = 0;
  rwcnt = matrowcnt(Propr);
  
  PlegListDatar.CredManNr = Propr.CredManNr;
  PlegListDatar.RecordType = Propr.RecordType;
  PlegListDatar.RowNr = 0;
  TrHs = true;
  while(loopmain(PlegListDatar,3,TrHs))begin
    if(PlegListDatar.CredManNr!=Propr.CredManNr)then begin TrHs = false; end;
    if(PlegListDatar.RecordType!=Propr.RecordType)then begin TrHs = false; end;
    
    if(TrHs)then begin
      if(PlegListDatar.RowNr>=rwcnt)then begin
        recorddelete(PlegListDatar);
        stepback(PlegListDatar);
      end else begin
        matrowget(Propr,PlegListDatar.RowNr,Proprw);
          Proprw.PledgeType = 1;
        matrowput(Propr,PlegListDatar.RowNr,Proprw);
      end;
    end;
  end;


LCredManPropertiesVcRecordCheck:;
  CredManPropertiesVcRecordCheck = res;
  return;
end;

