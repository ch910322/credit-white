//<halrule>server-only</halrule>

global updating procedure EvaluateSpiderWebExecutorData(record B2BLoanApplicationVc LAr, string id,var boolean DebtsCount, var boolean hasArrests, var boolean hasClaims, var boolean hasLawsuits, var boolean hasBankruptcy)
begin
  record SWExecListVc SWExecListr;
  record SWExecPersonDataVc SWExecPersonDatar;
  row SWExecPersonDataVc SWExecPersonDatarw;
  boolean TrHs,TrHs2,hasnote,testf;
  integer i,pos;
  record SWBankruptcyStatusesBlock SWBankruptcyStatusesb;
  row SWBankruptcyStatusesBlock SWBankruptcyStatusesrw;
  vector boolean vbankruptcystr;
  record NotepadVc Noter;
  record RLinkVc RLr;
  record CreditinfoBlock CIb;
  
  blockload(SWBankruptcyStatusesb);
  blockload(CIb);
  
  RecordNew(Noter);
  Noter.SerNr = NextSerNr("NotePadVc",CurrentDate,-1,false,"");
  
  for(i=0;i<matrowcnt(SWBankruptcyStatusesb);i=i+1)begin
    matrowget(SWBankruptcyStatusesb,i,SWBankruptcyStatusesrw);
    vbankruptcystr[SWBankruptcyStatusesrw.Status] = true;
  end;
  
  SWExecListr.MainID = id;
  TrHs = true;
  while(loopmain(SWExecListr,1,TrHs))begin
    testf = true;
    if(SWExecListr.MainID!=id)then begin
      TrHs = false;
      testf = false;
    end;
    if(CIb.EvalExecutives==1)then begin
      if(!setinset("EXECUTIVE",SWExecListr.Type))then begin
        testf = false;
      end;
    end;
    if(CIb.EvalShareholders==1)then begin
      if(!setinset("SHAREHOLDER",SWExecListr.Type))then begin
        testf = false;
      end;
    end;
    if(CIb.EvalBoards==1)then begin
      if(!setinset("BOARD",SWExecListr.Type))then begin
        testf = false;
      end;
    end;
    
    
    if(testf)then begin
      SWExecPersonDatar.ExecId = SWExecListr.ExecId;
      if(readfirstmain(SWExecPersonDatar,1,true))then begin
        for(i=0;i<matrowcnt(SWExecPersonDatar);i=i+1)begin
          matrowget(SWExecPersonDatar,i,SWExecPersonDatarw);
          if(vbankruptcystr[SWExecPersonDatarw.Status])then begin hasBankruptcy = true; LineTextPut(Noter,0,SWExecListr.ExecId & " has bankruptcy on " & SWExecPersonDatarw.CompanyID & "  " & SWExecPersonDatarw.CompanyName); hasnote = true; end;
          if(stringtoval(SWExecPersonDatarw.UnpaidDebtsCount,m4val)>0)then begin DebtsCount = true; LineTextPut(Noter,0,SWExecListr.ExecId & " has unpaid debts on " & SWExecPersonDatarw.CompanyID & "  " & SWExecPersonDatarw.CompanyName); hasnote = true; end;
          if(SWExecPersonDatarw.HasArrests=="true")then begin hasArrests = true; LineTextPut(Noter,0,SWExecListr.ExecId & " has arests on " & SWExecPersonDatarw.CompanyID & "  " & SWExecPersonDatarw.CompanyName); hasnote = true; end;
          if(SWExecPersonDatarw.HasClaims=="true")then begin hasClaims = true; LineTextPut(Noter,0,SWExecListr.ExecId & " has claims on " & SWExecPersonDatarw.CompanyID & "  " & SWExecPersonDatarw.CompanyName); hasnote = true; end;
          if(SWExecPersonDatarw.HasLawsuits=="true")then begin hasLawsuits = true; LineTextPut(Noter,0,SWExecListr.ExecId & " has lawsuits on " & SWExecPersonDatarw.CompanyID & "  " & SWExecPersonDatarw.CompanyName); hasnote = true; end;
        end;
      end;
    end;
  
  end;
  
  if (hasnote)then begin
    if (RecordStore(Noter,true)) then begin
      CreateRecordLink(LAr,CurrentCompany,Noter,CurrentCompany);
      CreateRecordLink(Noter,CurrentCompany,LAr,CurrentCompany);
      pos = 1;
      while(ReadRecordLink(LAr,pos,Noter,RLr)) begin
        pos = pos + 1;
      end;
      RLr.Comment = "Spider Web Executives Check List";
      RecordStore(RLr,true);
    end;
    
  end;
  
return;
end;

global
updating function LongInt LoanAppEvaluationVcRecordCheck(var record LoanAppEvaluationVc LAEr,record LoanAppEvaluationVc LAE2r,LongInt stat,LongInt long4)
BEGIN
	LongInt res;
	integer i,j,rwcnt,rwcnt2;
	string 255 vatcode;
	row LoanAppEvaluationVc LAErw,LAE2rw;
	record CredManTypeVc CredManTyper;

	res = 0;
	
	if(nonblank(LAEr.Code))then begin
	  CredManTyper.Code = LAEr.Code;
	  if(readfirstmain(CredManTyper,1,true))then begin
	    LAEr.Comment = CredManTyper.Comment;
	  end;
	end;
	rwcnt = matrowcnt(LAEr);
	for(i=0;i<rwcnt;i=i+1) begin
		matrowget(LAEr,i,LAErw);	
		if(nonblank(LAErw.Argument))then begin
			for(j=0;j<rwcnt;j=j+1)begin
				matrowget(LAEr,j,LAE2rw);	
				if(LAE2rw.Argument==LAErw.Argument)then begin
					if(j!=i)then begin  
						RecordCheckError(23512,LAE2rw.Argument,j,"Argument");
						res = -1;
						goto LAEVcRecordCheck;
					end;
				end;
			end;
		end;
		if(LAErw.Type==1 and blank(LAErw.Argument))then begin
			RecordCheckError(1854,"",i,"Argument");
			res = -1;
			goto LAEVcRecordCheck;
		end;
		if(LAErw.Type==0 and blank(LAErw.RangeTo) and blank(LAErw.RangeFrom) and blankdate(LAErw.RangeFromDate) and blankdate(LAErw.RangeToDate))then begin
			RecordCheckError(1854,"",i,"RangeTo");
			res = -1;
			goto LAEVcRecordCheck;
		end;
		/*if(LAErw.Type==0 and blank(LAErw.RangeFrom))then begin
			RecordCheckError(1854,"",i,"RangeFrom");
			res = -1;
			goto LAEVcRecordCheck;
		end;*/
	end;
	
LAEVcRecordCheck:;
	LoanAppEvaluationVcRecordCheck = res;
	RETURN;
END;