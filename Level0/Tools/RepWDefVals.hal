external function Boolean IsEnterprise();
external function Boolean HasLocalMachines();
external procedure In2Period(var string,var Date,var Date);
external function Boolean UserHasLimitedAccess(var string,var string);

external outer function Boolean ShowCredManNrInvoiceJournal();

global
procedure IVJRClassReportDefaults(Integer wn)
begin
  record RcVc RepSpec;
  string 255 tstr;
  
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  ReportDefaults(RepSpec,"IVJRClass");  
  RepSpec.ArtMode = 0;
  RepSpec.flags[1] = 0;
  RepSpec.flags[2] = 1;
  RepSpec.flags[3] = 1;
  RepSpec.flags[4] = 1;
  RepSpec.flags[5] = 1;
  RepSpec.flags[6] = 1;
  if (HasLocalization("ITA") and IsStandardProduct) then begin
    RepSpec.flags[15] = 1;
    RepSpec.flags[16] = 1;
  end;
  //CUST-BEGIN
  if (ShowCredManNrInvoiceJournal()) then begin
    RepSpec.flags[24] = 1;
  end;
  //CUST-END
  if (UserHasLimitedAccess(RepSpec.AccStr,RepSpec.f14)) then begin
  end;
  PutWindowRecord(wn,RepSpec);
  SelectWindow(wn);
  return;
end;

global
procedure IVInfoRClassReportDefaults(Integer wn)
begin
  record RcVc RepSpec;
  
  DeselectWindow(wn,false);
  GetWindowRecord(wn,RepSpec);
  ReportDefaults(RepSpec,"IVInfoRClass");  
  RepSpec.flags[10] = 1;
  PutWindowRecord(wn,RepSpec);
  SelectWindow(wn);
  return;
end;

global
procedure IVInfoIVDsm()
begin
  record IVVc IVr;
  record RcVc RepSpec;
  Integer wn;

  wn = CurWindow;
  GetWindowRecord(wn,IVr);
  RepSpec.repname = "IVInfoRn";
  RepSpec.flags[10] = 1;//CUST
  RepSpec.long1 = IVr.SerNr;
  RepSpec.Media = mtScreen;
  RunReport(RepSpec,0);
  return;
end;

global
procedure IVInfoIVLsm()
BEGIN
  Integer wn;
  record IVVc IVr;
  record RcVc RepSpec;
  
  wn = CurWindow;  
//      RLGetSelectionIDs(wn,&ridh);
  if (ReadMarkedRecord(wn,IVr)) then begin
    RepSpec.long1 = IVr.SerNr;
    RepSpec.Media = mtScreen;
    RepSpec.repname = "IVInfoRn";
    RepSpec.flags[10] = 1;//CUST
    RunReport(RepSpec,0);
  end;
  RETURN
END;
