global
updating procedure PrintCredManDocument(string docname,string fn,record CredManVc CredManr,Integer type,Boolean maxmonthlyf,string langcode)
begin

  SetDocumentFilename(fn);
  SetMedia(mtPdf);
  PrintDocument(CredManr,docname,false);
  SetDocumentFIleName("");

  return;
end;

function Boolean FindInvoicePdf(record IVVc IVr,var record Attach2Vc Attachr)
begin
  Boolean res;
  Integer i;
  record RLinkVc RLr;

  i = 1;
  while (ReadRecordLink(IVr,i,Attachr,RLr)) begin
    if (right(Attachr.FileName,4)==".pdf") then begin
      res = true;
      goto LFindInvoicePdf;
    end;
    i = i + 1;
  end;

LFindInvoicePdf:;
  FindInvoicePdf = res;
  return;
end;

global
updating function Boolean Ext_AddPreCreatedDocument(record IVVc IVr,record MailVc Mailr)
begin
  record CMInvoicingBlock CIb;
  Boolean res;
  record Attach2Vc Attachr;

  BlockLoad(CIb);

  if (CIb.UsePreCreatedInvoicePdf==1) then begin
    if (FindInvoicePdf(IVr,Attachr)) then begin
      CreateRecordLink(Mailr,CurrentCompany,Attachr,CurrentCompany);
      res = true;
    end;
  end;
 
  Ext_AddPreCreatedDocument = res;
  return;
end;

global
function Boolean Ext_CreateInvoiceHeader(record IVVc IVr,row MailTextVc MTrw,record IVMailBlock IVMailr,var record MailVc Mailr)
begin
  string 255 sernr;

  if (nonblank(MTrw.Header)) then begin  
    Mailr.Header = MTrw.Header;
  end else begin
    if (nonblank(IVMailr.Header)) then begin
      Mailr.Header = IVMailr.Header & " ";
    end;
    Mailr.Header = Mailr.Header;
  end;
  if (right(Mailr.Header,1)!=" ") then begin
    Mailr.Header = Mailr.Header & " ";
  end;
  switch (IVr.InvType) begin
    case kInvoiceTypeCredit:
      Mailr.Header = Mailr.Header & USetStr(1805) & " ";
    case kInvoiceTypeCreditSpecialSales:
      Mailr.Header = Mailr.Header & USetStr(1805) & " ";
    otherwise
      Mailr.Header = Mailr.Header & USetStr(1803) & " ";
  end;
  if (nonblank(IVr.OfficialSerNr)) then begin
    sernr = IVr.OfficialSerNr;
  end else begin
    sernr = IVr.SerNr;
  end;
  if (right(Mailr.Header,1)!=" ") then begin
    Mailr.Header = Mailr.Header & " ";
  end;
  Mailr.Header = Mailr.Header & sernr;

  Ext_CreateInvoiceHeader = true;
  return;
end;

global
function Boolean OuterGetExternalDocMatrix(string docname,var string type)
begin
  
  if (docname=="CredManForm") then begin
    MatCol(1,24,"Language",0,LangCode,false,LangSClass);
    MatCol(1,140,"Template",0,TemplateName,false,ExternalFormDefImgSClass);
    MatCol(1,-300,"Table's Field",0,FirstField,false,0); 
    MatCol(1,-200,"Table's Field 2",0,FirstField2,false,0); 
    MatCol(1,-100,"Table's Field 3",0,FirstField3,false,0); 
    res = true;    
  end;

  OuterGetExternalDocMatrix = res;
  return;
end;