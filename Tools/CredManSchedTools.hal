//<halrule>server-only</halrule>
external function val GetRateAmount(record CredManVc,val,Integer,Date,Date,val,Boolean,Boolean);
external procedure TestInvoiceBasedOnScheduleRow(record CredManSchedVc,row CredManSchedVc,var record IVVc);

global
procedure CredManSchedRecalcInterestRemote(var record CredManSchedVc CSr,var val calcbal)
begin
  Integer i,rwcnt,monthtype;
  record CredManVc CredManr;
  row CredManSchedVc CSrw;
  record IVVc IVr;
  
  CredManr.SerNr = CSr.CredManNr;
  if (ReadFirstMain(CredManr,1,true)) then begin
    rwcnt = MatRowCnt(CSr);
    for (i=0;i<rwcnt;i=i+1) begin
      MatRowGet(CSr,i,CSrw);
      if (CSrw.InvDate==CredManr.FirstInvDate) then begin
        monthtype = 0;
      end else begin
        if (rwcnt-1) then begin
          monthtype = 2;
        end else begin
          monthtype = 1;
        end;
      end;
      if (CredManr.ChargeMethod==1) then begin
        monthtype = 2;
      end;
      CSrw.Interest = GetRateAmount(CredManr,CredManr.IntRate,monthtype,CSrw.FromDate,CSrw.ToDate,calcbal,false,true);    
      calcbal = calcbal - CSrw.Principle;
      RecordClear(IVr);
      TestInvoiceBasedOnScheduleRow(CSr,CSrw,IVr);

      CSrw.Total = IVr.Sum4;

      MatRowPut(CSr,i,CSrw);
    end;
  end;


  return;
end;