external inner procedure M4PadString(string,Integer,string,Boolean,var string);
external inner function string 50 NextLegalSerNr(string,LongInt,Date,string,string,string);
external inner procedure NextOfficialSerNr(string,LongInt,Date,string,var string);

global
function string 255 FindNextCredLegalSerNr(string filename,string sernr,string agrtype,string agrclass)
BEGIN
  string 255 res,tstr;
  record CredLegalInvNrBlock LegalInvNrRec;
  row CredLegalInvNrBlock LegalInvNrrw;
  Integer i,rwcnt,pages;
  Boolean testf;
  LongInt invnr;
  Date invdate;  
  record OffSerNrIVVc OffSerNrIVr;
  
  invnr = sernr;
  invdate = CurrentDate;//fix
  NextOfficialSerNr(filename,sernr,invdate,"",res);
  if (blank(res)) then begin

    BlockLoad(LegalInvNrRec);  
    rwcnt = MatRowCnt(LegalInvNrRec);
    if (rwcnt>0) then begin    
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(LegalInvNrRec,i,LegalInvNrrw);
        testf = true;
        if (nonblank(LegalInvNrrw.CredManType)) then begin
          if (nonblank(agrtype)) then begin
            if (SetInSet(LegalInvNrrw.CredManType,agrtype)==false) then begin testf = false; end;
          end;
        end;
        if (nonblank(LegalInvNrrw.CredManClass)) then begin
          if (nonblank(agrtype)) then begin
            if (SetInSet(LegalInvNrrw.CredManClass,agrclass)==false) then begin testf = false; end;
          end;
        end;
        if (nonblankdate(LegalInvNrrw.EndDate)) then begin
          if (invdate>LegalInvNrrw.EndDate) then begin testf = false; end;
        end;
        if (testf) then begin
          res = NextLegalSerNr("CredManVc",,invdate,LegalInvNrrw.Serie,LegalInvNrrw.TSerStart,LegalInvNrrw.TSerEnd);
          if (nonblank(res)) then begin 
            i = rwcnt;
          end;
        end;
      end;
    end;   
  end;
LFindNextLegalSerNr:;  
  FindNextCredLegalSerNr = res;
  RETURN;
END;
