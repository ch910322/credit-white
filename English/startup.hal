event startup
begin
  record CMInterfaceSetBlock ISb;

  BlockLoad(ISb);

  SetLangMode(LangEnglish,"ENG",0);

/* modCredMan */  
  Register("B2B Loan Applications","B2B Loan Applications",B2BLoanApplicationVc,modCredMan);
  Register("Agreement Schedules","Agreement Schedules",CredManSchedVc,modCredMan);
  Register("Properties","Properties",CMPropertyVc,modCredMan);
  Register("Agreement Tests","Agreement Tests",CredManTestVc,modCredMan);
  Register("Agreement Changes","Agreement Changes",CredManChangeVc,modCredMan);
 
  Setting("Number Series - B2B Loan Applications",B2BLoanAppSerTClass,modCredMan);
  Setting("Credit Management Settings",CMApplicationSetTClass,modCredMan);
  Setting("Invoicing Settings",CMInvoicingTClass,modCredMan);
  
  Setting("Scoring Support",ScoringSupLClass,modCredMan);
  Setting("Order Classes",OrderClassLClass,modCredMan);
  Setting("Order Class Colors",OrderClassColorTClass,modCredMan);
  Setting("Item Priority",ItemPriorityTClass,modCredMan);
  Setting("Item Priority List",CMItemPriorityLClass,modCredMan);
  Setting("Agreement Interface Settings",CMInterfaceSetTClass,modCredMan);
  
  Setting("Credit History Support",CredHistLClass,modCredMan);
  Setting("Reminders",SMSReminderLClass,modCredMan);
  Setting("Factoring Invoices",CredManFactInvoiceLClass,modCredMan);
  //Setting("Seller's Reports",CredManGrntReportsLClass,modCredMan);
  Setting("Agreement Documents",AgreementDocLClass,modCredMan);
  //Setting("Factoring Invoice Settings",CreditalInvoiceTClass,modCredMan);
  Setting("Automatic Tasks",CredManAutoTaskTClass,modCredMan);
  Setting("Automatically Closed Tasks",CredManCloseTaskTClass,modCredMan);
  Setting("Invitation Requests",InvitationRequestLClass,modCredMan);
  Setting("Document Signing Reminders",DocumentReminderLClass,modCredMan);
  Setting("Automatic Order Classes",CMOrderClassTClass,modCredMan);
  Setting("Receipt Entry",ReceiptEntryWClass,modSL);
  Setting("Agreement Classifications",CredManClassLClass,modCredMan);
  Setting("Agreement Classification Types",CredManClassTypeLClass,modCredMan);
  Setting("Prolong Sessions",ProlongSessionLClass,modCredMan);
  Setting("Legal Record Numbers",CredLegalInvNrTClass,modCredMan);
  Setting("Property Types",CMPropertyTypeLClass,modCredMan);
  Setting("Insurance Types",CMInsuranceTypeLClass,modCredMan);
  Setting("Loan Agreements",CredMan2LClass,modCredMan);
  Setting("Leasing Agreements",CredMan3LClass,modCredMan);
  Setting("Invega Fund Report Settings",InvegaReportTClass,modCredMan);
  Setting("Agreement Type Accounts",CredManAccLClass,modCredMan);
  Setting("Date in Text",CMDateTextTClass,modSY);
  Setting("Printout Constants",CMPrintConstantsTClass,modCredMan);
  
  Setting("Payment Condition Text",PaymentConditionTextWClass,modCredMan);
  Setting("Other Condition Text",PaymentConditionTextWClass,modCredMan);



	Report("Credit Agreements",CreditAgreementsRClass,CreditAgreementsRn,0,modCredMan);
	Report("Application Overview",LoanApplicationListRClass,LoanApplicationListRn,0,modCredMan);
	Report("Governmental Fund Report",InvegaFundRClass,InvegaFundRn,0,modCredMan);

	Report("Income Analysis",EBSIncomeAnalysisRClass,EBSIncomeAnalysisRn,0,modCredMan);
	Report("Income Forecast",CMIncomeForecastRClass,CMIncomeForecastRn,0,modCredMan);
	Report("Check Schedule Periods",CheckCMSchedRClass,CheckCMSchedRn,0,modCredMan);
	Report("Test Credit Agreements",CredManTestRClass,CredManTestRn,0,modCredMan);
	Report("Late to be invoiced Contracts",CMInvoiceableContractsRClass,CMInvoiceableContractsRn,0,modCredMan);


  Maintenance("Create Agreement Invoices",GenLoanInvoicesVClass,GenLoanInvoicesMn,modCredMan);
  Maintenance("Create Payment Guarantee Invoices",PmtGrntInvoiceVClass,PmtGrntInvoiceMn,modCredMan);
  Maintenance("Create Overdue Invoices",GenOverdueInvVClass,GenOverdueInvMn,modCredMan);
  Maintenance("Fix Credit History",CredManRedoCredHistVClass,CredManRedoCredHistMn,modCredMan);
  Maintenance("Generate Agreement Schedules",CreateCredManScheduleVClass,CreateCredManScheduleMn,modCredMan);
  Maintenance("Create Mails from Schedules",SendScheduleEmailsVClass,SendScheduleEmailsMn,modCredMan);
  Maintenance("Generate Agreement Changes",CreateCredManChangeVClass,CreateCredManChangeMn,modCredMan);

  Maintenance("Account Balance Transfer",CMBalanceTransferVClass,CMBalanceTransferMn,modCredMan);

  Maintenance("Recreate Invoices with Prolong months",CredManRecreateDocsVClass,CredManRecreateDocsMn,modCredMan);

  Maintenance("Create Agreement Test from Agreement",CredManCreateTestVClass,CredManCreateTestMn,modCredMan);

  Document("Credit Agreement Schedule",CredManScheduleRClass,CredManScheduleForm,CredManScheduleFClass,modCredMan);
  Document("B2B Loan Application",LoanAppRClass,LoanAppForm,LoanAppFClass,modCredMan);
  //Document("Combined Application",LoanAppRClass,CombinedAgreementForm,CombinedAgreementFClass,modCredMan);
  Document("Surety Agreement",SuretyAgreementRClass,SuretyAgreementForm,SuretyAgreementFClass,modCredMan);
  Document("Surety Application",SuretyApplicationRClass,SuretyApplicationForm,SuretyApplicationFClass,modCredMan);
  Document("Vekselis",VekselisRClass,VekselisForm,VekselisFClass,modCredMan);

/*DB Maint*/

  Setting("Reminder Queue",SMSReminderQueueLClass,modDBMain);
  Setting("Legal Record Numbers",OffSerNrLClass,modDBMain);

  Maintenance("Delete not used Attachments",ClearAttachmentsVClass,ClearAttachmentsMn,modDBMain);

/* Sales ledger */
	Report("Income Analysis",EBSIncomeAnalysisRClass,EBSIncomeAnalysisRn,0,modSL);

/*CRM */

	Report("News Letter List",MailingListRClass,MailingListRn,0,modCRM);

/* Integration modInteg */
  Setting("PayLink",PayLinkTClass,modInteg);
  Setting("Payment Gateways",CCAccountIDLClass,modInteg);
  Setting("Merchant ID",CCMerchantIDLClass,modInteg);


  SString(200000,"Evaluation report");
  SString(200001,"Company");
  SString(200002,"Name: ");
  SString(200003,"Reg. No.: ");
  SString(200004,"Customer not found: ");
  SString(200005,"Evaluation Date: ");
  SString(200006,"Company Bankruptcy Rating: ");
  SString(200007,"Surety provider late rating: ");
  SString(200008,"Company Owned Assets: ");
  SString(200009,"Surety provider with the best risk class: ");
  SString(200010,"Loan");
  SString(200011,"Maximum recommended amount: ");
  SString(200012,"Recommended value based on surety provider: ");
  SString(200013,"From companies assets (50%) and income (20%): ");
  SString(200014,"Creditable?: ");
  SString(200015,"Company date");
  SString(200016,"Existing customer?: ");
  SString(200017,"Requested Loan Amount: ");
  SString(200018,"Months: ");
  SString(200019,"Company type: ");
  SString(200020,"Not having bankruptcy / liquidation or court cases: ");
  SString(200021,"Company's age: ");
  SString(200022,"Year");
  SString(200023,"Years");
  SString(200024,"Month");
  SString(200025,"Months");
  SString(200026,"Company's credit history");
  SString(200027,"Company's bankruptcy rating: ");
  SString(200028,"Has the company had court cases or debts in last 6 months?: ");
  SString(200029,"Company Ownership Changes?: ");
  SString(200030,"Balance Sheet and P/L Report: ");
  SString(200031,"Equity: ");
  SString(200032,"Receivables minus payable: ");
  SString(200033,"Assets (Estates, cars): ");
  SString(200034,"Revenue: ");
  SString(200035,"Profit: ");
  SString(200036,"Surety provider data");
  SString(200037,"Surety Providers: ");
  SString(200038,"Surety provider is majority owner: ");
  SString(200039,"Does not have any asset arrests, bankruptcy and is not included in Not Creditable list: ");
  SString(200040,"Majority owner surety provider age: ");
  SString(200041,"No Majority owner");
  SString(200042,"Surety Provider Credit History: ");
  SString(200043,"Surety Provider Late Rating: ");
  SString(200044,"Have there being any debts in last half a year: ");
  SString(200045,"Being respondant in court cases: ");
  SString(200046,"Surety Provider Historical Income: ");
  SString(200047,"SoDra reported historical income: ");
  SString(200048,"Is the surety provider entrepreneur or professional: ");
  SString(200049,"Receiving income from other sources?: ");
  SString(200050,"Overall monthly Obligation Payment: ");
  SString(200051,"Assets: ");
  SString(200052,"Other");
  //CustPSRn
  SString(200060,"B2B Loan Applications");
  SString(200061,"Appl. No.");
  SString(200062,"Appl. Date");
  SString(200063,"Customer");
  SString(200064,"Product");
  SString(200065,"Start Date");
  SString(200066,"End Date");
  SString(200067,"Amount");
  SString(200068,"Rate");
  SString(200069,"Credit Agreements");
  SString(200070,"Agr. No.");
  SString(200071,"Agr. Date");
  SString(200072,"Instalm.");

  SString(200080,"Agreement No.: ");
  SString(200081,"Period: ");

/*CredManInfoRn*/
  SString(200090,"Date");
  SString(200091,"Type");
  SString(200092,"Instalment");
  SString(200093,"Interest");
  SString(200094,"Fees");
  SString(200095,"Penalties");
  SString(200096,"Total");
  SString(200097,"Balance");
  SString(200098,"VAT");
  SString(200099,"Downpayment");

  SString(200100,"Invoice Number already used");
  SString(200101,"Amount is more than specified in Credit Agreement");
  SString(200102,"Customer must be specified in the Buyer's list");
  SString(200103,"Credit Limit can't be lower than Currently Open Invoices");
  SString(200104,"Credit Limit can't be lower than Currently Open Invoices. Current open Amount: ");
  SString(200105,"Maximum Monthly Payment can't be less than Monthly Interest and Service Fees");
  SString(200106,"Paysera Payment");
  SString(200107,"Invitation sent successfully");

  SString(200108,"These Changes require Server Restart");
  SString(200109,"Can't pause becauce there is an Invoice already created");
  SString(200110,"Wrong Type for Credit Limit");
  SString(200111,"Amount covers only due Invoices. Nothing left for Buyout");
  SString(200112,"Credit Limit reached");
  SString(200113,"Payment Date later than Disburse Until Date");
  SString(200114,"Bill of Exchange");
  SString(200115,"Invoice already created with Number ");
  SString(200116,"Importing of Bank Account Statement from an unrecognized Account is not allowed");

/*Web Codes 200200-200230*/
  SString(200200,"Banner with this type already registered in these days");
  SString(200201,"Content with this URL already exists");
  SString(200202,"URL contains restricted Characters");

  SString(200210,"Application Overview");
  SString(200211,"Number");
  SString(200212,"Date");
  SString(200213,"Status");
  SString(200214,"Product");
  SString(200215,"Manager");
  SString(200216,"Reg. Nr.");
  SString(200217,"Name");
  SString(200218,"Sum");
  SString(200219,"Months");
  SString(200220,"Source");
  SString(200221,"Interface");
  SString(200222,"OS");
  SString(200223,"Bank Acc.");

  SString(200230,"Mailing List");
  SString(200231,"Email");
  SString(200232,"Date");
  SString(200233,"Another Prolongation Pending");

/*IncomeForecatRn*/
  SString(200240,"No");
  SString(200241,"Type");
  SString(200242,"Customer");
  SString(200243,"Reg. No");
  SString(200244,"Rate");
  SString(200245,"Start Date");
  SString(200246,"End Date");
  SString(200247,"Value");
  SString(200248,"Balance");
  SString(200249,"Principle");
  SString(200250,"Interest");
  SString(200251,"Fees");
  SString(200252,"VAT");
  SString(200253,"Total");
  SString(200254,"Due Date");
  SString(200255,"Remaining");
  SString(200256,"Income Forecast");


  SString(200260,"Sum doesn't match with Bank Transaction");
  SString(200261,"Total Principle repayment not the same as in agreement");
  SString(200262,"Legal No. doesn't match Legal Record Numbers");
  SString(200263,"Periods not correct");
  SString(200264,"Invoice Required");
  SString(200265,"Agreement must be Active");

  SString(200266,"Invega Fund Report");
  SString(200267,"Can't delete receipt with linked bank transaction without having access rights");
  SString(200268,"Interest exceeds Max Monthly Payment");
  SString(200269,"Amount is different than specified in Credit Agreement");

  SString(200270,"Schedule Type");
  SString(200271,"Can't update becauce there is an Invoice already created");
  SString(200272,"Agreement schedule is not matching with Fixed schedule");
  SString(200273,"Schedule doesn't exist");
  SString(200274,"Date can't be blank or earlier than last Invoice Date");
  SString(200275,"Netaikomas");
  SString(200276,"proc.");

/*CreditAgreementsRn*/
  SString(200280,"Credit Agreements");
  SString(200281,"No.");
  SString(200282,"Agr. Type");
  SString(200285,"Not Approved");
  SString(200286,"Not OK");
  SString(200287,"Finished");
  SString(200288,"Customer");
  SString(200289,"Reg. No.");
  SString(200290,"Name");
  SString(200291,"Start Date");
  SString(200292,"End Date");
  SString(200293,"Total");
  SString(200294,"Email");
  SString(200295,"Downp.");
  SString(200296,"Downp. %");
  SString(200297,"Months");
  SString(200298,"Rate");
  SString(200299,"Monthly p.");
  SString(200300,"Balance");
  SString(200301,"Buy-out");

  StrSetAdd(584);
  StrSetText(CredManVc,"Credit Agreements");
  StrSetText(B2BLoanApplicationVc,"B2B Loan Applications");
  EndStrSet;

  StrSetAdd(3);
  StrSetText(CredManNoDelete,"Don't allow removing Credit Agreement");
  StrSetText(CredManChangeManager,"Don't allow changing Manager on Credit Agreement");
  StrSetText(LoanAppNoDelete,"Don't allow removing Loan Application");
  StrSetText(LoanAppChangeManager,"Don't allow changing Manager on Loan Application");
  StrSetText(RemoveAgreementDocAgreementAttach,"Allow removing Agreement document Attachments");
  StrSetText(RemoveAgreementDocSchedAttach,"Allow removing Schedule Attachments");
  StrSetText(RemoveAgreementDocSuretyAgreementAttach,"Allow removing Surety Agreement Attachments");
  StrSetText(RemoveAgreementDocVekselisAttach,"Allow removing Vekselis Attachments");
  StrSetText(RemoveCredManAttach,"Allow removing Agreement Attachments");
  StrSetText(RemoveLoanAppAttach,"Allow removing Loan Application Attachments");
  StrSetText(ReceiptBankTRDiffAmounts,"Allow saving Receipt with different Total than Bank Transaction");
  StrSetText(CredManChangeTransferDate,"Allow changing Money Transfer Date");
  StrSetText(CredManChangeInvoicedMonths,"Allow changing Credit Agreement Months when invoiced");
  StrSetText(AllowDifferentCredManSched,"Allow OKing Credit Agreement with different Agreement Schedule");
  EndStrSet;

  SetBegin(2000);
  SetText(kRowColorNone,"None");
  SetText(kRowColorGreen,"Green");
  SetText(kRowColorLime,"Lime");
  SetText(kRowColorRed,"Red");
  SetText(kRowColorOrange,"Orange");
  SetText(kRowColorYellow,"Yellow");
  SetText(kRowColorGold,"Gold");
  SetText(kRowColorGray,"Gray");
  SetText(kRowColorBeige,"Beige");
  SetText(kRowColorBlue,"Blue");
  SetText(kRowColorSkyBlue,"Sky Blue");
  SetText(kRowColorViolet,"Violet");
  SetText(kRowColorPeriwinkle,"Periwinkle");
  EndSet;

  SetBegin(2001);
  SetText(-1,"-");
  SetText(0,"Annuity");
  SetText(1,"Linear");
//  SetText(2,"Linear with Service Fee");
  SetText(3,"Bullet Loan");
  if (ISb.ShowLoanType4==1) then begin
    SetText(4,"Factoring");
  end;
  if (ISb.ShowLoanType5==1) then begin
    SetText(5,"Payment Guarantee");
  end;
  if (ISb.ShowLoanType6==1) then begin
    SetText(6,"Balloon");
  end;
//  SetText(6,"Linear with Delay");
//  SetText(7,"Annuity with Delay");
  EndSet;

  SetBegin(2002);
  SetText(0,"One Time fixed Fee");
  SetText(1,"Monthly fixed Fee");
  SetText(2,"One Time calculated Fee");
  SetText(3,"Monthly calculated Fee");
  EndSet;

  SetBegin(2003);
  SetText(0,"No");
  SetText(1,"Mortgage");
  SetText(2,"Ownership <20k");
  SetText(3,"Ownership of 20+k or 3+ Assets");
  EndSet;

  SetBegin(2004);
  SetText(0,"Not Calculated");
  SetText(1,"Yes A");
  SetText(2,"Yes B");
  SetText(3,"4-eyes");
  SetText(4,"No");
  EndSet;
 
  SetBegin(2005);
  SetText(0,"Active");
  SetText(1,"Problematic");
  EndSet;

  SetBegin(2006);
  SetText(0,"Not changed during last year");
  SetText(1,"Changed during last year");
  EndSet;

  SetBegin(2007);
  SetText(0,"Usable");
  SetText(1,"Problematic");
  EndSet;

  SetBegin(2008);
  SetText(0,"Under 21");
  SetText(1,"21-27");
  SetText(2,"28-64");
  SetText(3,"4-eyes");
  SetText(4,"65+");
  EndSet;

  SetBegin(2009);
  SetText(0,"Entrepreneur");
  SetText(1,"Specialist");
  EndSet;

  SetBegin(2010);
  SetText(0,"-");
  SetText(1,"- Wrong value (Invoice should be unOKed and OKed)");
  SetText(2,"- Wrong value (Invoice should be unOKed and OKed)");
  SetText(3,"- Wrong value (Invoice should be unOKed and OKed)");
  SetText(4,"- Wrong value (Invoice should be unOKed and OKed)");
  SetText(5,"Invoiced Instalment");
  SetText(6,"Invoiced Interest");
  SetText(7,"Invoiced Deposit");
  SetText(8,"Invoiced Fees");
  SetText(9,"Invoices Late Fees");
  SetText(10,"Paid Invoice");
  SetText(11,"Partial Buy-out");
//new types should be added to function MapChargeTypes
  EndSet;

  SetBegin(2011);
  SetText(0,"Invoice");
  SetText(1,"Receipt");
  SetText(2,"Prepayment");
  SetText(3,"Credit Note");
  SetText(4,"Partial Buy-out");
  SetText(5,"Made Payment");
  EndSet;

  SetBegin(2012);
  SetText(0,"Invoice");
  SetText(1,"Due Invoice");
  SetText(2,"Oldest Overdue Invoice");
  EndSet;

  SetBegin(2013);
  SetText(-1,"-");
  SetText(0,"Business Loan with Schedule");
  SetText(3,"Loan with Late Payment");
  SetText(4,"Loan with Residual Value");
  SetText(1,"Factoring");
  SetText(2,"Invoice Guarantee");
  EndSet;

  SetBegin(2014);
  SetText(0,"Cooperation partner");
  SetText(1,"Media Partner");
  EndSet;

  SetBegin(2015);
  SetText(0,"Closed");
  SetText(1,"Open");
  EndSet;

  SetBegin(2016);
  SetText(0,"New");
  SetText(1,"Existing");
  EndSet;

//when adding to 2017 set new things, add to 2023 as well
  SetBegin(2017);
  SetText(0,"-");
  SetText(1,"Agreement");
  SetText(2,"Schedule");
  SetText(3,"Surety Provider Agreement");
  SetText(6,"Vekselis");
  SetText(7,"Loan Application");
  SetText(8,"Payment Certificate");
  SetText(9,"Surety Provider Agreement 1");
  SetText(10,"Surety Provider Agreement 2");
  SetText(12,"Surety Provider Agreement 3");
  SetText(12,"Surety Provider Agreement 4");
  SetText(13,"Surety Provider Agreement 5");
  SetText(14,"Surety Provider Agreement 6");
  EndSet;

  SetBegin(2018);
  SetText(0,"Not Signed");
  SetText(1,"Signed");
  EndSet;

  SetBegin(2020);
  SetText(0,"Credit Agreement");
  SetText(1,"Loan Application");
  EndSet;

  SetBegin(2021);
  SetText(0,"Manager from Record");
  SetText(1,"Specified Person");
  EndSet;

  SetBegin(2022);
  SetText(0,"Extended");
  SetText(1,"Not Extended");
  EndSet;

  SetBegin(2023);
  SetText(0,"-");
  SetText(1,"Agreement Documents");
  SetText(7,"Loan Application");
  SetText(8,"Payment Certificate");
  EndSet;

  SetBegin(2024);
  SetText(0,"SMS");
  SetText(1,"Email");
  EndSet;

  StrSetBegin(2025);
  StrSetText("","-");
  StrSetText(green,"Green");
  StrSetText(orange,"Orange");
  StrSetText(blue,"Blue");
  EndStrSet;

  SetBegin(2026);
  SetText(0,"Check");
  SetText(1,"Don't check");
  EndSet;

  SetBegin(2027);
  SetText(0,"Invoice");
  SetText(4,"Buy-out");
  EndSet;

  SetBegin(2028);
  SetText(0,"Credit Agreement");
  SetText(1,"B2B Loan Applications");
  EndSet;

  SetBegin(2029);
  SetText(0,"Manual");
  SetText(1,"At Insert");
  SetText(2,"At OK");
  SetText(3,"At Printout");
  EndSet;

  SetBegin(2030);
  SetText(0,"First");
  SetText(1,"Second");
  EndSet;

  SetBegin(2031);
  SetText(3,"Bullet Loan");
  if (ISb.ShowLoanType6==1) then begin
    SetText(6,"Balloon");
  end;
  EndSet;

  return;
end;