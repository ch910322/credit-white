external function string 60 UserDefined(string,string);
external function Boolean HasCustomerSearchKey();
external function Boolean HasCategories();
external function Boolean HasDepartments();
external function Boolean HasStandardCommunicator();
external function Boolean CUVATNrColumn;
external function Boolean HasLimitedAccess();
external function Boolean HasCustomerStatusReport();
external outer function Boolean HasB2BCreateOffer();
external outer function Boolean UseCredManStatus();
external outer function Boolean SimplifiedSureties();
external outer function Boolean ShowBuyOutFee();
external outer function Boolean HasBalloonLoanType();
external outer function Boolean IsNovitiCustomer;
external outer function Boolean UseCompensationInvoices();
external outer function Boolean UseBuyoutSummary();
external outer function Boolean ShowPartialBuyoutOptions();

procedure ShowCredManLClassWindow(Integer type)
begin
  real v,h;
  record CMInterfaceSetBlock ISb;
  string 255 wstr;

  BlockLoad(ISb);
  
  SetWRect(10,80,820,298);
  Sizeable(-1,-1,0,0);
  switch (type) begin
    case 1: SpawnClass(CredMan1DClass);
    case 2: SpawnClass(CredMan2DClass);
    case 3: SpawnClass(CredMan3DClass);
    case 4: SpawnClass(CredMan4DClass);
    case 5: SpawnClass(CredMan5DClass);
    case 6: SpawnClass(CredMan6DClass);
    case 7: SpawnClass(CredMan7DClass);
    case 8: SpawnClass(CredMan8DClass);
    otherwise
      switch (ISb.DefCredManLoanType) begin
        case 1: SpawnClass(CredMan1DClass);
        case 2: SpawnClass(CredMan2DClass);
        case 3: SpawnClass(CredMan3DClass);
        case 4: SpawnClass(CredMan4DClass);
        case 5: SpawnClass(CredMan5DClass);
        case 6: SpawnClass(CredMan6DClass);
        case 7: SpawnClass(CredMan7DClass);
        case 8: SpawnClass(CredMan8DClass);
        otherwise
          SpawnClass(CredManDClass);
      end;
  end;
  UseView(CredManVc);
  if (ISb.ShowLoanType1==1) then begin
    HalPushButton(h=5,v=5,h+=100,v+=20,"CredManLClass1Btn","Loans");
  end;
  if (ISb.ShowLoanType2==1) then begin
    HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClass2Btn","Lease");
  end;
  if (ISb.ShowLoanType3==1) then begin
    HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClass3Btn","Mortgage");
  end;
  if (ISb.ShowLoanType4==1) then begin
    HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClass4Btn","Factoring");
  end;
  if (ISb.ShowLoanType5==1) then begin
    HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClass5Btn","Paymnt. Grnt.");
  end;
  if (ISb.ShowLoanType6==1) then begin
    HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClass6Btn","Balloon");
  end;
  if (ISb.ShowLoanType7==1) then begin
    HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClass7Btn","Credit Line");
  end;
  if (ISb.ShowLoanType8==1) then begin
    HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClass8Btn","Credit Limit");
  end;
  HalPushButton(h+=10,v=5,h+=100,v+=20,"CredManLClassBtn","All");
  RecordList(4,v+=20,-21,-39);
  RlColKey(4,2,"N_o.",SerNr,false,TypeSerNr);
  RlColKey(90,90,"Legal No.",OfficialSerNr,false,OfficialSerNr);
  RlColKeyTL(200,200,"OK",M4Mark,OKFlag,false,TypeOKFlag);
  RlColKeyTL(250,250,"Approved",M4Mark,Approved,false,TypeApproved);
  RlColKey(310,310,"Cust.",CustCode,false,TypeCustCode);
  RlColKey(380,380,"Name",Addr0,false,TypeName);
  RlColKey(-270,-270,"Start",startDate,false,TypestartDate);
  RlColKey(-180,-180,"End",endDate,false,TypeendDate);
  RlColKey(-90,-90,"Sum",InvSum4,false,TypeInvSum4);
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Receipt",'r',1,"ReceiptCredManLsm");
  SearchField("Search");

  return;
end;


event DefineWindows
begin
  real v,vs,h,h2,h3,t,tilenr,vm,pos;
  vs = 20;
 
  SetLangMode(LangEnglish,"ENG",0);

  WindowBegin("Loan Applications",B2BLoanApplicationLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,800,298);
  SpawnClass(B2BLoanApplicationDClass);
  UseView(B2BLoanApplicationVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlColKey(101,101,"Date",TransDate,false,TransDate);
  RlColKey(181,181,"Start Date",StartDate,false,StartDate);
  RlColKey(260,260,"Customer",CustName,false,CustName);
  RlColKey(-240,-240,"Class",OrderClass,false,OrderClass);
  RlCol   (-200,-200,"Type",Type,false);
  RlCol   (-120,-120,"Rate %",InterestRate,true);
  RlCol   (-70,-70,"Total Sum",Sum,true);
  SpecialMenu("Customer status",'e',1,"CUStatusB2BLoanAppLsm");
  SpecialMenu("Evaluation report",' ',2,"DoEvalReportLsm");
  SearchField("Search");
  EndWindow;

  WindowBegin("Paste Loan Application",B2BLoanApplicationSClass,CGsList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,800,298);
  SpawnClass(B2BLoanApplicationDClass);
  UseView(B2BLoanApplicationVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlColKey(101,101,"Date",TransDate,false,TransDate);
  RlColKey(181,181,"Start Date",StartDate,false,StartDate);
  RlColKey(260,260,"Customer",CustName,false,CustName);
  RlColKey(-240,-240,"Class",OrderClass,false,OrderClass);
  RlCol   (-200,-200,"Type",Type,false);
  RlCol   (-120,-120,"Rate %",InterestRate,true);
  RlCol   (-70,-70,"Total Sum",Sum,true);
  SpecialMenu("Customer status",'e',1,"CUStatusB2BLoanAppLsm");
  SpecialMenu("Evaluation report",' ',2,"");
  EndWindow;

  WindowBegin("Number Series - Loan Applications",B2BLoanAppSerTClass,CGHbl,HBlRecType);
  SetBlid(B2BLoanAppSerBlock);
  SetWRect(20,80,600,351);
  Sizeable(-1,-1,0,0);
  MatrixBegin(h,v,-31,-20,-,199);
  MatCol(1,24,"From No.",0,TSerStart,false,0);
  MatCol(1,104,"To No.",0,TSerEnd,false,0);
  MatCol(1,184,"From Date",0,StartDate,false,PasteCurDate);
  MatCol(1,264,"To Date",0,EndDate,false,PasteCurDate);
  MatCol(1,344,"Comment",0,TSerCom,false,0);
  EndMatrix;
  EndWindow;
  
  WindowBegin("Credit Management Settings",CMApplicationSetTClass,CGSbl,SRType);
  SetBlid(CMApplicationSetBlock);
  SetWRect(20,80,670,298);
  Sizeable(-1,-1,0,0);
  EditField(h=180,v=6,100,"Owner Title",Normal,OwnerTitle,false,JobTitleSClass);
  EditField(h,v+=vs,100,"Ownership Years",Normal,OwnershipYears,false,0);

  EditField(h,v+=vs,100,"CEO Title",Normal,CEOTitle,false,JobTitleSClass);
  EditField(h,v+=vs,100,"CFO Title",Normal,CFOTitle,false,JobTitleSClass);
  EditField(h,v+=vs,100,"Years to access private data",Normal,PrivateDataYears,false,0);

  EditField(h,v+=vs,100,"Request Signature Class",Normal,SignOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Active Agreement Order Class",Normal,ActiveCredOrderClass,false,OrderClassSClass);

  EditField(h,v+=vs,100,"Surety Email",Normal,SuretyLetter,false,0);
  EditField(h,v+=vs,100,"Surety Email without Password",Normal,NoPassSuretyLetter,false,0);
  EditField(h,v+=vs,100,"New Customer Email",Normal,NewCustLetter,false,0);
  EditField(h,v+=vs,100,"Surety Invitation Email",Normal,SuretyInviteLetter,false,0);
  EditField(h,v+=vs,100,"New User Invitation Email",Normal,ContactInviteLetter,false,0);
  if (HasB2BCreateOffer) then begin  
    EditField(h,v+=vs,100,"Offer Email Text",Normal,EmailOfferText,false,LTxtSClass);
    EditField(h,v+=vs,100,"Offer Email Row Text",Normal,EmailOfferTextRow,false,LTxtSClass);
  end;
  EditField(h,v+=vs,100,"Schudule Text",Normal,ScheduleText,false,LTxtSClass);
  EditField(h,v+=vs,100,"Mailing List",Normal,MailingList,false,PersColSClass);
  EditField(h,v+=vs,100,"Mailing List 2",Normal,MailingList2,false,PersColSClass);
  EditField(h,v+=vs,100,"City Classification Type",Normal,CityAgreementClassType,false,CredManClassTypeSClass);
  EditField(h,v+=30,100,"Document Signer",Normal,DocumentSigner,false,UserSClass);
  EditField(h,v+=vs,100,"Signer's Job Description",Normal,DocumentSignerPosition,false,0);
  EditField(h,v+=30,100,"Invoice Signer",Normal,InvoiceSigner,false,UserSClass);
  EditField(h,v+=30,100,"Language for Numbers",Normal,NumberLangCode,false,LangSClass);

  if (UseCredManStatus) then begin
    CheckBox(h,v+=30,0,"Automatically pause Agreements",AutoPauseCredMan);
    EditField(h,v+=20,100,"Time",Normal,AutoPauseCredManTime,false,PasteCurTime);
  end;

  if (UseBuyoutSummary) then begin
    EditField(h,v+=vs,100,"Buyout Summary Text",Normal,BuyoutText,false,LTxtSClass);
//    EditField(h,v+=vs,100,"Buyout Summary Language",Normal,BuyoutLangCode,false,LangSClass);
  end;  
  h = 360; v = 0;
  h2 = 380;
  ButtonFrame(h2,v+=40,150,2,"Surety Provider by default");
  RadioButton(h2,v,0,0,"Contact",ContactPasteSpecial);
  RadioButton(h2,v+=16,1,0,"Contact Person",ContactPasteSpecial);  
  
  ButtonFrame(h2,v+=40,150,2,"Credit Agreement Info Report Date");
  RadioButton(h2,v,1,0,"Due date",CMInfoReportDate);
  RadioButton(h2,v+=16,0,0,"Invoice date",CMInfoReportDate);  


  EditField(h2,v+=40,100,"Days in Year",Normal,DaysInYear,false,0);
  ButtonFrame(h2,v+=40,150,2,"Days in Month");
  RadioButton(h2,v,0,0,"30",DaysInMonth);
  RadioButton(h2,v+=16,1,0,"Actual",DaysInMonth); 
  
  if (SimplifiedSureties) then begin
    EditField(h2,v+=30,50,"",Normal,AutoSuretySerie,false,0);
    StaticText(h2+60,v+13,"Surety Legal No. Serie",false);
    CheckBox(h2,v+=20,0,"Automatically insert Surety Legal Number",AutoSuretyOfficalNr);
    v = v + 16;
  end else begin
    v = v + 30;
  end;  
  CheckBox(h2,v,0,"Automatically create Tags/Objects on Agreement",AutoCreateObject);
  EditField(h2,v+=30,50,"Object Type",Normal,AutoOTCode,false,OTSClass);
  EndWindow;

  WindowBegin("Scoring",ScoringSupLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  //Sizeable(-1,-1,0,0);
  SpawnClass(ScoringSupDClass);
  UseView(ScoringSupVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"SerNr",SerNr,false,SerNr);
  SearchField("Search");
  EndWindow;

  WindowBegin("Agreement Properties",CredManPropertiesLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  //Sizeable(-1,-1,0,0);
  UseView(CredManPropertiesVc);
  SpawnClass(CredManPropertiesDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Agreement",CredManNr,false,CredManNr);
  SearchField("Search");
  EndWindow;



  WindowBegin("Scoring",ScoringSupDClass,CGView,-);
  SetWRect(20,80,730,539);
  UseView(ScoringSupVc);
  AutoSizeWindow(false);  
  vs = 20; h=135; h2=375; h3=575;
  EditField(h,v=6,100,"Risk Class",Normal,RiskClass,false,0);
  EditField(h2,v,100,"Debts",Normal,Debts,false,0);
  CheckBox(h3,v,0,"Credit History",CreditHistory);
  EditField(h,v+=vs,100,"Debt-free Months",Normal,DebtFreeMonths,false,0);
  EditField(h2,v,100,"6 Months Salary",Normal,Salary6Months,false,0);
  EditField(h3,v,100,"Date Employed",Normal,DateEmployed,false,PasteCurDate);
  EditField(h,v+=vs,100,"Company",Normal,Company,false,0);
  EditField(h2,v,100,"Position",Normal,Position,false,0);
 
  EditField(h,v+=vs,100,"Late Credits",Normal,LateCredits,false,0);
  EditField(h2,v,100,"Late Days",Normal,LateDays,false,0);
  
  EditField(h2,v+=vs,100,"Overall monthly Obligation Payment",Normal,MonthlyOblPayment,false,0);
  EditField(h2,v+=vs,100,"Total monthly Income from other Companies",Normal,TotIncomeFromCompanies,false,0);

  vm = v+40;
  ButtonFrame(h,v=vm,190,4,"Assets");
  RadioButton(h,v,0,0,"No",AssetsType);
  RadioButton(h,v+=16,1,0,"Mortgage",AssetsType);  
  RadioButton(h,v+=16,2,0,"Ownership <20k",AssetsType);  
  RadioButton(h,v+=16,3,0,"Ownership of 20+k or 3+ Assets",AssetsType);
    
  ButtonFrame(h2,v=vm,150,2,"Sex");
  RadioButton(h2,v,0,0,"Male",SexType);
  RadioButton(h2,v+=16,1,0,"Female",SexType);  
  
  ButtonFrame(h3,v=vm,150,2,"Residency");
  RadioButton(h3,v,0,0,"Resident",ResidencyType);
  RadioButton(h3,v+=16,1,0,"Not Resident",ResidencyType);  

  MatrixBegin(10,v+=vs+60,-55,-1,-,50);
  Flip(0);
  MatCol(1,20,"Period",0,Period,false,0);
  Flip(1);
  MatCol(1,80,"Industry",0,Industry,false,0);
  MatCol(1,-300,"Check. Month",0,MonthChecks,false,0);
  MatCol(1,-200,"Check. Quarter",0,QuarterChecks,false,0);
  MatCol(1,-100,"Check. Half Year",0,HalfYearChecks,false,0);
  Flip(2);
  MatCol(1,80,"Salary",0,Salary,false,0);
  MatCol(1,180,"Additional Salary",0,ExtraSalary,false,0);
  Flip(3);
  MatCol(1,80,"Asset",0,Asset,false,0);
  MatCol(1,200,"Asset Type",0,AssetType,false,0);
  MatCol(1,270,"Location",0,Location,false,0);
  MatCol(1,400,"Legal Status",0,LegalStatus,false,0);
  MatCol(1,-50,"Value",0,AssetValue,false,0);
  Flip(4);
  MatCol(1,80,"Obligations",0,Obligations,false,0);
  MatCol(1,150,"Value",0,ObligationsValue,false,0);
  MatCol(1,220,"Loans",0,Loans,false,0);
  MatCol(1,290,"Credit Cards",0,CreditCards,false,0);
  MatCol(1,360,"Credit Limits",0,CreditLimits,false,0);
  MatCol(1,430,"Leasing",0,Leasing,false,0);
  EndMatrix;

  VTab(-40,v,-6,v+=vs,ToolFlip,1,"A");
  VTab(-40,v,-6,v+=vs,ToolFlip,2,"B");
  VTab(-40,v,-6,v+=vs,ToolFlip,3,"C");
  VTab(-40,v,-6,v+=vs,ToolFlip,4,"D");

  EndWindow;
 
  WindowBegin("Paste Customer",B2BLoanApp_CUSClass,CGslist,-);
  SetWRect(20,80,700,298);
  Sizeable(-1,-1,0,0);
  UseView(CUVc);
  SpawnClass(CUDClass);
  
  HalPushButton(-300,v=7,-200,v+=20,"CustSwitchToContacts","Contact Persons");
 
  RecordList(4,20,-21,-39);
  RlColKey(4,4,"No.",Code,false,Code);
  pos = 96;
  if (HasCustomerSearchKey) then begin
    RlColKey(pos,pos,"Short",SearchKey,false,SearchKey);
    pos = pos + 50;
  end;
  
  if (HasCategories) then begin
    RlColKey(pos,pos,"C_at",CustCat,false,ActGroup);
    pos = pos + 50;
  end;
  if (IsStandardProduct) then begin
    if (HasLocalization("FIN,POL")) then begin
      RlColKey(pos,pos,"#VAT Reg. No.#",VATNr,false,VATNr);
      pos = pos + 120;
    end;
  end;
  RlColKey(pos,pos,"Name",Name,false,Name);  
  if (HasDepartments) then begin
    RlColKey(-230,-230,"Department",Department,false,Department);
  end;
  if (HasStandardCommunicator) then begin
    if (CUVATNrColumn) then begin
      RlColKey(-110,-110,"#VAT Reg. No.#",VATNr,false,VATNr);
    end else begin
      RlColKey(-110,-110,"#Reg. No.#",RegNr1,false,RegNr1);
    end;
  end;
  if (HasLimitedAccess) then begin
    BrowseSubsetButton(-40,-15);
  end;
  SearchField("Search");
  if (GuiType!=kGuiiPhone and GuiType!=kGuiAndroid) then begin
    if (HasCustomerStatusReport) then begin
      SpecialMenu("Customer Status",'e',0,"CUStatusCUSsm");
    end;
  end;
  SpecialMenu("Search",'F',1,"CUSearchLsm");
  EndWindow;

  WindowBegin("Order Class Colors",OrderClassColorTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(OrderClassColorBlock);
  MatrixBegin(10,20,-30,-10,-,50);
  MatCol(1,25,"Order Class",0,OrderClass,false,OrderClassSClass);
  MatCol(1,100,"Color",0,Color,false,SetSClass);
  EndMatrix;
  EndWindow;

  WindowBegin("Credit History",CredHistLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,800,298);
  SpawnClass(CredHistDClass);
  UseView(CredHistVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlColKey(101,101,"Date",TransDate,false,TransDate);
  RlColKey(181,181,"Record No.",RecordNr,false,RecordNr);
  RlCol   (260,260,"Type",RecordType,false);
  RlCol   (340,340,"Agreement",CredManNr,false);
  SearchField("Search");
  EndWindow;

  WindowBegin("Credit History",CredHistDClass,CGview,-);
  SetWRect(20,80,640,380);
  h = 150; h2 = 300; h3 = 440; v = 6; vs=20;
  UseView(CredHistVc);
  EditField(h,v,80,"Ser. No.",Normal,SerNr,false,0);
  EditField(h2,v,120,"Customer",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,120,"Record No.",Normal,RecordNr,false,0);
  EditField(h,v+=vs,120,"Previous Rec.",Normal,PreviousNr,false,0);
  EditField(h,v+=vs,120,"Date",Normal,TransDate,false,0);
  EditField(h,v+=vs,120,"Charge Type",Normal,ChargeType,false,0);
  EditField(h,v+=vs,120,"Record Type",Normal,RecordType,false,0);
  EditField(h,v+=vs,120,"Sum",Normal,Sum,false,0);
  EditField(h,v+=vs,120,"Due Date",Normal,PayDate,false,0);
  EditField(h,v+=vs,120,"Item",Normal,ArtCode,false,0);
  EditField(h,v+=vs,120,"CredManNr",Normal,CredManNr,false,0);
  EditField(h,v+=vs,120,"Start Date",Normal,CredFromDate,false,0);
  EditField(h,v+=vs,120,"End Date",Normal,CredToDate,false,0);
  EditField(h,v+=vs,120,"Invoices Sum",Normal,InvSum,false,0);
  EditField(h,v+=vs,120,"Paid Sum",Normal,PaidSum,false,0);
  EditField(h,v+=vs,120,"Balance",Normal,Balance,false,0);
  EditField(h,v+=vs,120,"Factoring Inv.",Normal,FactoringInvoice,false,0);
  CheckBox(h,v+=vs,0,"Main Record",MainRecord);
  EndWindow;

  WindowBegin("Specify Credit Agreement Invoices",GenLoanInvoicesVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EditFieldTL(h,v,120,"Date Until",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,153,"Credit Agreement",M4Long,Normal,0,long2,false,CredManSClass);
  EditFieldTL(h,v+=vs,153,"Customer",M4Code,Normal,20,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,153,"Manager",M4Code,Normal,10,f2,false,UserSClass);
  EndWindow;

  WindowBegin("Specify Mails from Schedules",SendScheduleEmailsVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  PeriodField(h=140,v=6,"Period");
  EditFieldTL(h,v+=vs,153,"Credit Agreement",M4Long,Normal,0,long1,false,CredManSClass);
  EditFieldTL(h,v+=vs,153,"Customer",M4Code,Normal,20,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,153,"Manager",M4Code,Normal,10,f2,false,UserSClass);
  EditFieldTL(h,v+=vs,153,"Agreement Type",M4Code,Normal,20,f3,false,CredManTypeSClass);
  CheckBox(h,v+=vs,0,"Re-generate Schedules",flags[1]);
  CheckBox(h,v+=vs,0,"Send E-mails Automatically",flags[2]);
  EndWindow;

  WindowBegin("Specify Recreate Invoices with Prolong months",CredManRecreateDocsVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EndWindow;

  WindowBegin("Specify Clear Attachements",ClearAttachmentsVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EndWindow;

  WindowBegin("Specify Payment Guarantee Invoices",PmtGrntInvoiceVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EditFieldTL(h,v,120,"Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EndWindow;

  WindowBegin("Specify Fix Credit History",CredManRedoCredHistVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EditFieldTL(h,v,120,"Agreement",M4Long,Normal,0,long1,false,CredManSClass);
  EndWindow;

  WindowBegin("Specify Create Agreement Test from Agreement",CredManCreateTestVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EditFieldTL(h,v,120,"Agreement",M4Long,Normal,0,long1,false,CredManSClass);
  EndWindow;

  WindowBegin("Specify Agreement Schedules",CreateCredManScheduleVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EndWindow;

  WindowBegin("Specify Agreement Changes",CreateCredManChangeVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  EndWindow;

  WindowBegin("Specify Agreement Changes",CMBalanceTransferVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 160; v = 6; vs = 20;
  EditFieldTL(h,v,120,"Date From",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"Date Until",M4Date,Normal,0,d2,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"Transaction Date",M4Date,Normal,0,RegDate,false,PasteCurDate);
  EndWindow;


  WindowBegin("Additional Bank Accounts",CUBankAccDClass,CGView,-);
  SetWRect(20,80,400,250);
  AutoSizeWindow(false);  
  UseView(CUBankAccVc);
  MatrixBegin(0,16,-1,-1,-,10);
  MatCol(1,25,"Bank Code",0,BankCode,false,BankSClass);
  MatCol(1,140,"Bank Account",0,BankAccount,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Check Buy-out Value",CheckBuyoutValueWClass,CGother,RcType);
  UseView(RcVc);
  h = 380;
  if (ShowBuyOutFee) then begin
    h = h + 20;
  end;
  if (UseBuyoutSummary) then begin
    h = h + 40;
  end;
  SetWRect(20,80,450,h);
  AutoSizeWindow(false);  
  h = 150; h2 = 250; v=450;
  EditFieldTL(h,v=6,120,"Buy-out Date",M4Date,Normal,0,d1,false,PasteCurDate);

  EditFieldTL(h,v+=vs,120,"Principle Amount",M4Str,ViewOnly,255,f13,true,0);
  EditFieldTL(h,v+=vs,120,"Interest Amount",M4Str,ViewOnly,255,f16,true,0);
  EditFieldTL(h,v+=vs,120,"Overdue Invoices",M4Str,ViewOnly,255,f17,true,0);
  EditFieldTL(h,v+=vs,120," of which Interest",M4Str,ViewOnly,255,f11,true,0);
  EditFieldTL(h,v+=vs,120," of which Principle",M4Str,ViewOnly,255,f10,true,0);
  EditFieldTL(h,v+=vs,120,"Credited Interest",M4Str,ViewOnly,255,f20,true,0);
  CheckBox(h+140,v,0,"Credit Interest",flags[1]);


  EditFieldTL(h,v+=vs,120,"Letter of Demand",M4Str,Normal,20,f18,true,0);
  EditFieldTL(h,v+=vs,120,"Insurance Cost",M4Str,Normal,20,f19,true,0);

  if (ShowBuyOutFee) then begin
    EditFieldTL(h,v+=vs,120,"Premature Term. Fee",M4Str,ViewOnly,255,f14,true,0);
  end;
  EditFieldTL(h,v+=vs,120,"Not invoiced Overdues",M4Str,ViewOnly,255,f12,true,0);
  EditFieldTL(h,v+=vs,120,"Total Dept",M4Val,ViewOnly,0,vals2,true,0);

//  EditFieldTL(h,v+=vs,120,"Last Invoice Value",M4Val,ViewOnly,0,vals1,true,0);
//  EditFieldTL(h,v+=vs,120,"Expected Payment",M4Val,ViewOnly,0,vals2,true,0);

  HalPushButton(h,v+=vs,h+120,v+20,"CalculateBuyOutValue","Calculate");
  if (UseBuyoutSummary) then begin
    HalPushButton(h,v+=30,h+120,v+20,"BuyOutSummaryEmail","Buyout Summary");
  end;
  EndWindow;

  WindowBegin("Create Invoice",CredManInvNoWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,150);
  h = 150; h2 = 250; v=450;
  EditFieldTL(h,v=6,120,"Invoice No.",M4Str,Normal,255,f1,false,0);

  HalPushButton(h,v+=vs,h+120,v+20,"CredManInvNoWClassProceed","Create");
  EndWindow;

  WindowBegin("Create Payment",CredManPaymentWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,150);
  h = 150; h2 = 250; v=450;
  EditFieldTL(h,v=6,120,"Amount",M4Val,Normal,0,vals1,false,0);

  HalPushButton(h,v+=vs,h+120,v+20,"CredManMakePaymentWithAmount","Create");
  EndWindow;



  WindowBegin("Specify Credit Agreement Schedule",CredManScheduleRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs=20;
  EditFieldTL(h=160,v=6,120,"Credit Agreement",M4Long,Normal,0,long1,false,CredManSClass);
  EndWindow;

  WindowBegin("Specify Loan Application Form",LoanAppRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs=20;
  EditFieldTL(h=160,v=6,120,"Loan Application",M4Long,Normal,0,long1,false,B2BLoanApplicationSClass);
  EndWindow;

  WindowBegin("Specify Surety Agreement Form",SuretyAgreementRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs=20;
  EditFieldTL(h=160,v=6,120,"Agreement",M4Long,Normal,0,long1,false,CredManSClass);
  EndWindow;

  WindowBegin("Specify Vekselis Form",VekselisRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs=20;
  EditFieldTL(h=160,v=6,120,"Agreement",M4Long,Normal,0,long1,false,CredManSClass);
  EndWindow;


  WindowBegin("Specify Surety Application Form",SuretyApplicationRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs=20;
  EditFieldTL(h=160,v=6,120,"Loan Application",M4Long,Normal,0,long1,false,B2BLoanApplicationSClass);
  EditFieldTL(h,v+=vs,120,"Surety (1,2,3)",M4Int,Normal,0,flags[0],false,0);
  EndWindow;

  WindowBegin("Register Agreement Changes",PauseCredManWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,280);
  AutoSizeWindow(false);  
  h = 150; h2 = 250; v=450;
  EditFieldTL(h,v=6,120,"Changes Start Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"Pause Months",M4Qty,Normal,0,vals0,false,0);
  EditFieldTL(h,v+=vs,120,"Prolong Months",M4Qty,Normal,0,vals1,false,0);
  EditFieldTL(h,v+=vs,120,"New Rate",M4Rate,Normal,0,vals3,false,0);
  EditFieldTL(h,v+=vs,120,"Extra Value",M4Rate,Normal,0,vals4,false,0);
  CheckBox(h,v+=vs,0,"Re-sign Schedule",flags[1]);
  CheckBox(h,v+=vs,0,"Issue Prolong Invoice",flags[2]);
  CheckBox(h,v+=vs,0,"Prolong only when Invoice is paid",flags[3]);
  HalPushButton(h,v+=vs,h+120,v+20,"PauseCredManWClassPause","Register Changes");
  EndWindow;

  WindowBegin("Create Extra Fee Invoice",ManualExtraFeeWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,200);
  AutoSizeWindow(false);  
  h = 150; h2 = 250; v=450;
  EditFieldTL(h,v=6,120,"Invoice Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"Item",M4Code,Normal,20,f1,false,INSClass);
  EditFieldTL(h,v+=vs,120,"Value",M4Val,Normal,0,vals0,false,0);
  HalPushButton(h,v+=vs,h+120,v+20,"ManualExtraFeeWClassCreate","Create");
  EndWindow;

  WindowBegin("Refinance Agreement",RefinCredManWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,240,235);
  AutoSizeWindow(false);  
  h = 20;
  HalPushButton(h,v=36,h+180,v+20,"RefinCredManWClassRefinance","Refinance");
//  HalPushButton(h,v+=30,h+180,v+20,"RefinCredManWClassProlong","Prolong");
  HalPushButton(h,v+=30,h+180,v+20,"RefinCredManWClassTransfer","Transfer to Surety Provider");
  HalPushButton(h,v+=30,h+180,v+20,"RefinCredManWClassPartial","Partial Buy-out");
  EndWindow;

  WindowBegin("Refinance Agreement",RefinCredMan2WClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,440);
  AutoSizeWindow(true);  
  h = 150; h2 = 250; v=350;
  EditFieldTL(h,v=6,120,"Total Dept",M4Val,ViewOnly,0,vals0,false,0);
  EditFieldTL(h,v+=vs,120,"Remaining Balance",M4Val,Normal,0,vals1,false,0);
  EditFieldTL(h,v+=vs,120,"Extra Value",M4Val,Normal,0,vals2,false,0);
  EditFieldTL(h,v+=vs,120,"Refinance value",M4Val,Normal,0,vals3,false,0);
  EditFieldTL(h,v+=vs,120,"Refinance Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"New Agreement Type",M4Code,Normal,20,f1,false,CredManTypeSClass);
  EditFieldTL(h,v+=vs,120,"Months",M4Int,Normal,0,flags[0],false,0);
  EditFieldTL(h,v+=vs,120,"New Customer",M4Code,Normal,20,f2,false,CUSClass);
  EditFieldTL(h,v+=vs,120,"New Payment Day",M4Int,Normal,0,flags[1],false,0);
  EditFieldTL(h,v+=vs,120,"New Monthly Rate %",M4Val,Normal,0,vals4,false,0);
  ButtonFrame(h,v=v+40,200,3,"Refinance Type");
  RadioButton(h,v,0,0,"Refinance",ArtMode);
  RadioButton(h,v+=16,1,0,"Prolong",ArtMode);
  RadioButton(h,v+=16,2,0,"Transfer to Surety Provider",ArtMode);  
  HalPushButton(h,v+=40,h+120,v+20,"RefinCredMan2WClassSubmit","Refinance");
  EndWindow;

  WindowBegin("Refinance Agreement - Partial Buy-out",RefinCredManPartialWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,400,440);
  AutoSizeWindow(true);  
  h = 150; h2 = 250; v=350;
  EditFieldTL(h,v=6,120,"Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,120,"Amount",M4Val,Normal,0,vals0,false,0);

  if (ShowPartialBuyoutOptions) then begin
    CheckBox(h,v+=30,0,"Generate Overdue Invoices",flags[1]);
    CheckBox(h,v+=vs,0,"Cover open Invoices",flags[2]);
  end;

  HalPushButton(h,v+=40,h+120,v+20,"RefinCredManPartialWClassSubmit","Confirm");
  EndWindow;

  WindowBegin("Refinance Agreement - Partial Buy-out",RefinCredManPartial2WClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,500,440);
  AutoSizeWindow(true);  
  h = 150; h2 = 250; v=350;
  StaticText(50,26,"Invoice in the Period already created, do you want to do Changes?",false);
  HalPushButton(100,-30,200,-10,"RefinCredManPartial2WClassSubmit","OK");
  HalPushButton(230,-30,330,-10,"SchedYesNoWClassClose","Cancel");
  EndWindow;

  WindowBegin("Register Agreement Changes",PauseCredManForceWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,500,440);
  AutoSizeWindow(true);  
  h = 150; h2 = 250; v=350;
  StaticText(50,26,"Invoice in the Period already created, do you want to do Changes?",false);
  HalPushButton(100,-30,200,-10,"PauseCredManForceWClassPause","OK");
  HalPushButton(230,-30,330,-10,"SchedYesNoWClassClose","Cancel");
  EndWindow;

  WindowBegin("Item Priority",ItemPriorityTClass,CGHBl,-);
  SetWRect(80,80,400,280);
  SetBlid(ItemPriorityBlock);
  MatrixBegin(10,20,-30,-10,-,99);
  MatCol(1,25,"Item",0,ArtCode,false,INSClass);
  MatCol(1,100,"Name",0,Name,false,0);
  MatCol(1,-50,"Priority",0,Priority,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Item Priorities",CMItemPriorityLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  SpawnClass(CMItemPriorityDClass);
  UseView(CMItemPriorityVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlColKey(101,101,"Comment",Comment,false,Comment);
  EndWindow;

  WindowBegin("Item Priorities",CMItemPrioritySClass,CGsList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  SpawnClass(CMItemPriorityDClass);
  UseView(CMItemPriorityVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlColKey(101,101,"Comment",Comment,false,Comment);
  EndWindow;

  WindowBegin("Item Priority",CMItemPriorityDClass,CGView,-);
  SetWRect(80,80,400,280);
  UseView(CMItemPriorityVc);
  EditField(h,v=6,120,"Code",Normal,Code,false,0);
  EditField(h,v+=vs,-40,"Comment",Normal,Comment,false,0);
  MatrixBegin(10,v+=40,-30,-10,-,99);
  MatCol(1,25,"Item",0,ArtCode,false,INSClass);
  MatCol(1,100,"Name",0,Name,false,0);
  MatCol(1,-50,"Priority",0,Priority,false,0);
  EndMatrix;
  EndWindow;

  WindowBegin("Reminders",SMSReminderLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  SpawnClass(SMSReminderDClass);
  UseView(SMSReminderVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol   (101,101,"Type",Type,false);
  RlCol   (201,201,"Name",Comment,false);
  RlColKeyTL(-30,-30,"Act.",M4Mark,ActiveFlag,false,ActiveFlag);
  EndWindow;

  WindowBegin("Reminder",SMSReminderDClass,CGview,-);
  SetWRect(20,80,760,380);
  h = 120; h2 = 300; h3 = 440; v = 6; vs=20;
  UseView(SMSReminderVc);
  EditField(h,v,80,"Ser. No.",Normal,SerNr,false,0);
  CheckBox(h2-50,v,0,"Active",ActiveFlag);
  EditField(h,v+=vs,180,"Comment",Normal,Comment,false,0);
  EditField(h,v+=vs,100,"Reminder Type",Normal,ReminderType,false,SetSClass);
  EditField(h2,v,70,"Type",Normal,Type,false,SetSClass);
  EditField(h,v+=vs,100,"Days",Normal,Days,false,0);
  EditField(h2,v,70,"Customer",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,100,"Last Sent",Normal,LastSentDate,false,0);
  EditField(h2,v,70,"Up to EUR",Normal,MinAmount,false,0);//Very confusing label
  EditField(h,v+=vs,100,"Language",Normal,LangCode,false,LangSClass);
  CheckBox(h,v+=vs,0,"Mondays",Day1);
  EditField(h2,v,70,"Time",Normal,Time1,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Tuesday",Day2);
  EditField(h2,v,70,"Time",Normal,Time2,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Wednesday",Day3);
  EditField(h2,v,70,"Time",Normal,Time3,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Thursday",Day4);
  EditField(h2,v,70,"Time",Normal,Time4,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Friday",Day5);
  EditField(h2,v,70,"Time",Normal,Time5,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Saturday",Day6);
  EditField(h2,v,70,"Time",Normal,Time6,false,PasteCurTime);
  CheckBox(h,v+=vs,0,"Sunday",Day7);
  EditField(h2,v,70,"Time",Normal,Time7,false,PasteCurTime);

  CheckBox(h,v+=vs,0,"Bank Holidays",BankHolidays);
  CheckBox(h,v+=30,0,"Send Reminder per Bank Account",PerBankAcc);
  CheckBox(h,v+=vs,0,"Include only overdue Invoices",OnlyOverdueInvoices);

  ButtonFrame(h,v=v+40,320,4,"Failed Reminders");
  CheckBox(h,v,0,"Create Activity if Reminder can not be sent",CreateActivity);
  EditField(h+50,v+=vs,70,"Person",Normal,ActPerson,false,UserSClass);
  EditField(h2,v,70,"Type",Normal,ActType,false,ActTypeSClass);
  EditField(h+50,v+=vs,250,"Text",Normal,ActText,false,0);

  

  EditField(h2=420,v=10,-20,"Email Subject",Normal,Subject,false,0);
  EditField(h2=420,v+=vs,-20,"Standard Text",Normal,StdText,false,LTxtSClass);
  
  StaticText(h2,v+=30,"Text",false);
  TextField(h2,v+=10,-20,190,Message,0);

  EndWindow;

  WindowBegin("Reminder Queues",SMSReminderQueueLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,740,298);
  UseView(SMSReminderQueueVc);
  SpawnClass(SMSReminderQueueDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol   (101,101,"Inv. Date",InvDate,false);
  RlCol   (201,201,"Invoice Nr.",InvoiceNr,false);
  RlCol   (321,321,"Invoice List",InvoiceList,false);
  RlCol   (440,440,"Reminder",ReminderNr,false);
  RlColKeyTL(-30,-30,"Sent",M4Mark,SentFlag,false,SentFlag);
  EndWindow;

  WindowBegin("Reminder Queue",SMSReminderQueueDClass,CGview,-);
  SetWRect(20,80,460,380);
  h = 120; h2 = 300; h3 = 440; v = 6; vs=20;
  UseView(SMSReminderQueueVc);
  EditField(h,v,120,"Ser. No.",ViewOnly,SerNr,false,0);
  EditField(h,v+=vs,120,"Inv. Date",ViewOnly,InvDate,false,0);
  EditField(h,v+=vs,120,"Invoice Nr.",ViewOnly,InvoiceNr,false,0);
  EditField(h,v+=vs,120,"Reminder Nr.",ViewOnly,ReminderNr,false,0);
  EditField(h,v+=vs,120,"Invoice List",ViewOnly,InvoiceList,false,0);
  EditField(h,v+=vs,120,"Check Days",ViewOnly,CheckDays,false,0);
  EditField(h,v+=vs,120,"Start Date",ViewOnly,StartDate,false,0);
  EditField(h,v+=vs,120,"End Date",ViewOnly,EndDate,false,0);

  ButtonFrame(h,v=v+40,150,4,"Status");
  RadioButton(h,v,0,0,"Created",SentFlag);
  RadioButton(h,v+=16,1,0,"Sent",SentFlag);
  RadioButton(h,v+=16,2,0,"Paid before sending",SentFlag);  
  RadioButton(h,v+=16,3,0,"Error",SentFlag);  
  EndWindow;
  
  return;
end;

window B2BLoanApp_ContactSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;

  WindowBegin("Paste Contact",B2BLoanApp_ContactSClass,CGother,RcType);
  SetWRect(64,80,500,298);
  HalPushButton(-120,v=8,-6,v+=20,"ContactsSwitchToCust","Contacts");
  DataList(9,v+10,-22,-6,"DLPasteContact");
  DataListColumn(1,6,250,AdjLeft,"DLContactName","Name",M4Str);
  DataListColumn(1,256,-32,AdjLeft,"DLContactTitle","Courtesy Title",M4Str);  
  EndWindow;
end;

window B2BLoanApplicationDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,h2,h3,t,tilenr,vm,pos;
  string 255 label1,label2,label3,label4,label5;
  record B2BLoanApplicationVc LAr;
  record CredManTypeVc CMTr;

  WindowBegin("Loan Application",B2BLoanApplicationDClass,CGview,-);
  SetWRect(64,80,859,300);
  UseView(B2BLoanApplicationVc);
  DynamicWindow;
  FormName(LoanAppForm);
  vs = 20; h=135; h2=375; h3=595;
  Tile(0,95,false,"",SerNr);
  EditField(h,v=6,100,"Ser. No.",Normal,SerNr,false,TSerSClass);
  EditField(h2,v,80,"Date",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,100,"Customer",Normal,CustCode,false,CUSClass);
  EditField(h2,v,130,"Name",Normal,CustName,false,0);
  EditField(h,v+=vs,100,"Contact",Normal,ContactName,false,B2BLoanApp_ContactSClass);
  EditField(h2,v,130,"Email",Normal,eMail,false,0);
  EditField(h3+30,v,-40,"Telephone",Normal,PhoneNo,false,0);
  EditField(h,v+=vs,100,"Contact Email",Normal,ContacteMail,false,0);
  EditField(h2,v,130,"Contact Telephone",Normal,ContactPhoneNo,false,0);
  EditField(h3+30,v,-40,"Contact Mobile",Normal,ContactMobile,false,0);
  //EditField(h2,v,-40,"Name",Normal,ManagerName,false,0);
  EditField(h,v+=vs,100,"Type",Normal,Type,false,CredManTypeSClass);
  EditField(h2,v,130,"Order Class",Normal,OrderClass,false,OrderClassSClass);
  EditField(h3+30,v,-40,"Monthly Payment Day",Normal,MonthlyPaymentDay,true,0);
  vm = v;
  EditField(h,v+=vs,100,"Total Sum",Normal,Sum,true,0);
  EditField(h2,v,100,"Monthly Repayment",Normal,MonthlyRepayment,true,0);
  EditField(h3,v,130,"Manager",Normal,Manager,false,UserSClass);
  EditField(h,v+=vs,100,"Months",Normal,Months,true,0);
  EditField(h,v+=vs,100,"Monthly Rate %",Normal,InterestRate,true,0);
  //EditField(h,v+=vs,100,"Start Date",Normal,StartDate,false,PasteCurDate);
  //EditField(h,v+=vs,100,"End Date",ViewOnly,EndDate,false,0);
  
  v=v-(vs);
  HalPushButton(h3-70,v,h3+30,v+25,"B2BLoanAppCalculate","Calculate");
  HalPushButton(h3+60,v,h3+160,v+25,"B2BLoanAppEvaluate","Evaluate");

  h3=h3-30;
  //ak_start
  if (GetWindowClass(CurWindow)=="B2BLoanApplicationDClass") then begin  
    GetWindowRecord(CurWindow,LAr);
  end;
  v=v+25;
  
  CMTr.Code=LAr.Type;
  if (ReadFirstMain(CMTr,1,true)) then begin
    switch (CMTr.LoanType) begin
	  case 2: //leasing
	    HalPushButton(h-50,v+=vs,h+70,v+20,"B2BLoanApplicationDClassOpenProperties","Assets");
    case 3: //Mortgage		
	    HalPushButton(h-50,v+=vs,h+70,v+20,"B2BLoanApplicationDClassOpenProperties","Pledges");
    otherwise
      
    end;
  end;
  
  //ak_end
  tilenr = 1;
  //TileButton(tilenr,"Contact"); tilenr = tilenr + 1;
  TileButton(tilenr,"Board Members"); tilenr = tilenr + 1;
  TileButton(tilenr,"Surety"); tilenr = tilenr + 1;  
  //TileButton(tilenr,"Evaluation"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Company Evaluation"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Person Evaluation"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Comments"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Shareholders"); tilenr = tilenr + 1;  
  tilenr = 1;
  /*
  Tile(tilenr,290,true,tilenr,Addr0); tilenr = tilenr + 1;
  v = 6;
  label1 = UserDefined("CUVc","InvAddr0");
  EditField(h,v,150,label1,Normal,Addr0,false,0);
  label2 = UserDefined("CUVc","InvAddr1");
  EditField(h,v+=vs,150,label2,Normal,Addr1,false,0);
  label3 = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs,150,label3,Normal,Addr2,false,0);
  label4 = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs,150,label4,Normal,Addr3,false,0);
  label5 = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs,150,label5,Normal,Addr4,false,0);
  vm = v;
  v = 6;
  EditField(h2=400,v,120,"Bank Code",Normal,BankCode,false,BankSClass);
  EditField(h2,v+=vs,120,"Bank Name",Normal,BankName,false,0);
  EditField(h2,v+=vs,120,"Bank Account",Normal,BankAccount,false,BankAccountSClass);
  EditField(h2,v+=vs,-40,"Comment",Normal,Comment,false,0);
  EditField(h2,v+=vs,-40,"Legal No.",Normal,OfficialSerNr,false,CredLegalNrSerNrSClass);
  
  CheckBox(h3,v=6,0,"Request Direct Debit",RequestDirectDebit);
  
  v = vm + v;
  ButtonFrame(h,v=v+40,500,3,"Owner");
  EditField(h+100,v+=5,100,"Contact Code",Normal,OwnerCustCode,false,B2BLoanApp_CUSClass);
  EditField(h2+50,v,100,"Owner Name",Normal,OwnerName,false,0);
  EditField(h+100,v+=25,100,"Owner Represent.",Normal,OwnerRep,false,0);
  CheckBox(h2+50,v,0,"Approved by CEO",CEOApprovedFlag);

  ButtonFrame(h,v=v+60,500,3,"CEO");
  EditField(h+100,v+=5,100,"Contact Code",Normal,CEOCustCode,false,B2BLoanApp_CUSClass);
  EditField(h2+50,v,100,"CEO Name",Normal,CEOName,false,0);
  EditField(h+100,v+=25,100,"CEO Represent.",Normal,CEORep,false,0);
  CheckBox(h2+50,v,0,"Approved by CFO",CFOApprovedFlag);
 */
  Tile(tilenr,290,true,tilenr,BoardMember1); tilenr = tilenr + 1;
  v = 6;
  StaticText(h=60,v=15,"Contact Code",false);
  StaticText(h+120,v,"Name",false);
  StaticText(h+450,v,"Debt",false);
  
  v = v + 30;
  EditField(h=70,v,60,"Member 1",Normal,BoardMember1,false,B2BLoanApp_CUSClass);
  EditField(h+110,v,200,"",Normal,BoardMember1Name,false,0);
  EditField(h+440,v,60,"",Normal,BMDebt1,true,0);
  v = v + 30;
  EditField(h=70,v,60,"Member 2",Normal,BoardMember2,false,B2BLoanApp_CUSClass);
  EditField(h+110,v,200,"",Normal,BoardMember2Name,false,0);
  EditField(h+440,v,60,"",Normal,BMDebt2,true,0);
  v = v + 30;
  EditField(h=70,v,60,"Member 3",Normal,BoardMember3,false,B2BLoanApp_CUSClass);
  EditField(h+110,v,200,"",Normal,BoardMember3Name,false,0);
  EditField(h+440,v,60,"",Normal,BMDebt3,true,0);
  v = v + 30;
  EditField(h=70,v,60,"Member 4",Normal,BoardMember4,false,B2BLoanApp_CUSClass);
  EditField(h+110,v,200,"",Normal,BoardMember4Name,false,0);
  EditField(h+440,v,60,"",Normal,BMDebt4,true,0);
  v = v + 30;
  EditField(h=70,v,60,"Member 5",Normal,BoardMember5,false,B2BLoanApp_CUSClass);
  EditField(h+110,v,200,"",Normal,BoardMember5Name,false,0);
  EditField(h+440,v,60,"",Normal,BMDebt5,true,0);
  v = v + 30;
  EditField(h=70,v,60,"Beneficiary",Normal,Beneficiary,false,B2BLoanApp_CUSClass);
  EditField(h+110,v,200,"", Normal,BeneficiaryName,false,0);
  
  Tile(tilenr,290,true,tilenr,MajorityOwner1); tilenr = tilenr + 1;  
  
  if (SimplifiedSureties) then begin

    StaticText(h=40,v=15,"Contact Code",false);
    StaticText(h+110,v,"Name",false);
    StaticText(h+220,v,"Phone",false);
    StaticText(h+330,v,"Email",false);
    StaticText(h+440,v,"Date",false);
    StaticText(h+510,v,"Amount",false);
    StaticText(h+590,v,"Signing Pers.",false);
    StaticText(h+680,v,"Position",false);
    v = v + 30;
    
    EditField(h=50,v,60,"Surety 1",Normal,SuretyProvider1,false,B2BLoanApp_CUSClass);
    EditField(h+70,v,100,"",Normal,Surety1Name,false,0);
    EditField(h+180,v,100,"",Normal,Surety1Phone,false,0);
    EditField(h+290,v,120,"",Normal,Surety1eMail,false,0);
    EditField(h+420,v,60,"",Normal,Surety1Date,false,PasteCurDate);
    EditField(h+490,v,60,"",Normal,Surety1Amount,true,0);
    EditField(h+560,v,100,"",Normal,Surety1Signer,false,B2BLoanApp_ContactSClass);
    EditField(h+670,v,70,"",Normal,Surety1Position,false,JobTitleSClass);
    v = v + 30;

    EditField(h=50,v,60,"Surety 2",Normal,SuretyProvider2,false,B2BLoanApp_CUSClass);
    EditField(h+70,v,100,"",Normal,Surety2Name,false,0);
    EditField(h+180,v,100,"",Normal,Surety2Phone,false,0);
    EditField(h+290,v,120,"",Normal,Surety2eMail,false,0);
    EditField(h+420,v,60,"",Normal,Surety2Date,false,PasteCurDate);
    EditField(h+490,v,60,"",Normal,Surety2Amount,true,0);
    EditField(h+560,v,100,"",Normal,Surety2Signer,false,B2BLoanApp_ContactSClass);
    EditField(h+670,v,70,"",Normal,Surety2Position,false,JobTitleSClass);
    v = v + 30;

    EditField(h=50,v,60,"Surety 3",Normal,SuretyProvider3,false,B2BLoanApp_CUSClass);
    EditField(h+70,v,100,"",Normal,Surety3Name,false,0);
    EditField(h+180,v,100,"",Normal,Surety3Phone,false,0);
    EditField(h+290,v,120,"",Normal,Surety3eMail,false,0);
    EditField(h+420,v,60,"",Normal,Surety3Date,false,PasteCurDate);
    EditField(h+490,v,60,"",Normal,Surety3Amount,true,0);
    EditField(h+560,v,100,"",Normal,Surety3Signer,false,B2BLoanApp_ContactSClass);
    EditField(h+670,v,70,"",Normal,Surety3Position,false,JobTitleSClass);
    v = v + 30;

    EditField(h=50,v,60,"Surety 4",Normal,SuretyProvider4,false,B2BLoanApp_CUSClass);
    EditField(h+70,v,100,"",Normal,Surety4Name,false,0);
    EditField(h+180,v,100,"",Normal,Surety4Phone,false,0);
    EditField(h+290,v,120,"",Normal,Surety4eMail,false,0);
    EditField(h+420,v,60,"",Normal,Surety4Date,false,PasteCurDate);
    EditField(h+490,v,60,"",Normal,Surety4Amount,true,0);
    EditField(h+560,v,100,"",Normal,Surety4Signer,false,B2BLoanApp_ContactSClass);
    EditField(h+670,v,70,"",Normal,Surety4Position,false,JobTitleSClass);
    v = v + 30;

    EditField(h=50,v,60,"Surety 5",Normal,SuretyProvider5,false,B2BLoanApp_CUSClass);
    EditField(h+70,v,100,"",Normal,Surety5Name,false,0);
    EditField(h+180,v,100,"",Normal,Surety5Phone,false,0);
    EditField(h+290,v,120,"",Normal,Surety5eMail,false,0);
    EditField(h+420,v,60,"",Normal,Surety5Date,false,PasteCurDate);
    EditField(h+490,v,60,"",Normal,Surety5Amount,true,0);
    EditField(h+560,v,100,"",Normal,Surety5Signer,false,B2BLoanApp_ContactSClass);
    EditField(h+670,v,70,"",Normal,Surety5Position,false,JobTitleSClass);
    v = v + 30;

    EditField(h=50,v,60,"Surety 6",Normal,SuretyProvider6,false,B2BLoanApp_CUSClass);
    EditField(h+70,v,100,"",Normal,Surety6Name,false,0);
    EditField(h+180,v,100,"",Normal,Surety6Phone,false,0);
    EditField(h+290,v,120,"",Normal,Surety6eMail,false,0);
    EditField(h+420,v,60,"",Normal,Surety6Date,false,PasteCurDate);
    EditField(h+490,v,60,"",Normal,Surety6Amount,true,0);
    EditField(h+560,v,100,"",Normal,Surety6Signer,false,B2BLoanApp_ContactSClass);
    EditField(h+670,v,70,"",Normal,Surety6Position,false,JobTitleSClass);
    v = v + 30;

  end else begin
    StaticText(h,v=26,"Surety Provider 1",false);
    CheckBox(h,v=v+vs,0,"Majority Owner",MajorityOwner1);
    EditField(h,v+=vs,100,"Contact Code 1",Normal,SuretyProvider1,false,B2BLoanApp_CUSClass);
    EditField(h,v+=vs,100,"Access to Data till",ViewOnly,Surety1AccessToDataUntil,false,PasteCurDate);
    vm = v;
    CheckBox(h,v=v+vs,0,"Asset Arrests",Surety1AssetArrests);
    CheckBox(h,v=v+vs,0,"Bankruptcy",Surety1Bankruptcy);
    CheckBox(h,v=v+vs,0,"Not Creditable",Surety1NotCreditable);
    CheckBox(h,v=v+vs,0,"Court Cases last Year",Surety1Courts);
    v = vm;
    ButtonFrame(h-100,v+=40,90,2,"Type");
    RadioButton(h-100,v,0,0,"Entrepreneur",Surety1Type);
    RadioButton(h-100,v+=16,1,0,"Specialist",Surety1Type);  
    HalPushButton(h-90,v+=25,h-10,v+25,"PrintSurety1Dm","Print");
    HalPushButton(h,v+=25,h+120,v+25,"ShowB2BAppScoring1","Scoring Rate");
    HalPushButton(h-90,v,h-10,v+25,"ShowB2BAppRemSur1","Remove"); v = v + 10;
    EditField(h,v+=vs,100,"Name",Normal,Surety1Name,false,0);
    EditField(h,v+=vs,100,"Position",Normal,Surety1Position,false,JobTitleSClass);
    EditField(h,v+=vs,100,"Phone",Normal,Surety1Phone,false,0);
    EditField(h,v+=vs,100,"Email",Normal,Surety1eMail,false,0);
    EditField(h,v+=vs,100,"ID",Normal,Surety1ID,false,0);

    EditField(h,v+=vs,130,label1,Normal,Surety1Addr0,false,0);
    EditField(h,v+=vs,130,label2,Normal,Surety1Addr1,false,0);
    EditField(h,v+=vs,130,label3,Normal,Surety1Addr2,false,0);
    EditField(h,v+=vs,130,label4,Normal,Surety1Addr3,false,0);
    EditField(h,v+=vs,130,label5,Normal,Surety1Addr4,false,0);
    ButtonFrame(h,v=v+40,150,4,"Age Group");
    RadioButton(h,v,0,0,"Under 21",Surety1AgeGroup);
    RadioButton(h,v+=16,1,0,"21-27",Surety1AgeGroup);  
    RadioButton(h,v+=16,2,0,"28-64",Surety1AgeGroup);  
    RadioButton(h,v+=16,3,0,"65+",Surety1AgeGroup);
    /*if (GetWindowClass(CurWindow)=="B2BLoanApplicationDClass") then begin  
      GetWindowRecord(CurWindow,LAr);
    end; moved up
	*/
    if (LAr.SuretyCnt>=2) then begin
      StaticText(h2=365,v=26,"Surety Provider 2",false);
      CheckBox(h2,v=v+vs,0,"Majority Owner",MajorityOwner2);
      EditField(h2,v+=vs,100,"Contact Code 2",Normal,SuretyProvider2,false,B2BLoanApp_CUSClass);
      EditField(h2,v+=vs,100,"Access to Data till",ViewOnly,Surety2AccessToDataUntil,false,PasteCurDate);
      vm = v;
      CheckBox(h2,v=v+vs,0,"Asset Arrests",Surety2AssetArrests);
      CheckBox(h2,v=v+vs,0,"Bankruptcy",Surety2Bankruptcy);
      CheckBox(h2,v=v+vs,0,"Not Creditable",Surety2NotCreditable);
      CheckBox(h2,v=v+vs,0,"Court Cases last Year",Surety2Courts);
      v = vm;
      ButtonFrame(h2-100,v=v+40,90,2,"Type");
      RadioButton(h2-100,v,0,0,"Entrepreneur",Surety2Type);
      RadioButton(h2-100,v+=16,1,0,"Specialist",Surety2Type);  
      HalPushButton(h2-90,v+=25,h2-10,v+25,"PrintSurety2Dm","Print");
      HalPushButton(h2,v+=25,h2+120,v+25,"ShowB2BAppScoring2","Scoring Rate");
      HalPushButton(h2-90,v,h2-10,v+25,"ShowB2BAppRemSur2","Remove"); v = v + 10;
      EditField(h2,v+=vs,100,"Name",Normal,Surety2Name,false,0);
      EditField(h2,v+=vs,100,"Position",Normal,Surety2Position,false,JobTitleSClass);
      EditField(h2,v+=vs,100,"Phone",Normal,Surety2Phone,false,0);
      EditField(h2,v+=vs,100,"Email",Normal,Surety2eMail,false,0);
      EditField(h2,v+=vs,100,"ID",Normal,Surety2ID,false,0);

      EditField(h2,v+=vs,130,label1,Normal,Surety2Addr0,false,0);
      EditField(h2,v+=vs,130,label2,Normal,Surety2Addr1,false,0);
      EditField(h2,v+=vs,130,label3,Normal,Surety2Addr2,false,0);
      EditField(h2,v+=vs,130,label4,Normal,Surety2Addr3,false,0);
      EditField(h2,v+=vs,130,label5,Normal,Surety2Addr4,false,0);
      ButtonFrame(h2,v=v+40,150,4,"Age Group");
      RadioButton(h2,v,0,0,"Under 21",Surety2AgeGroup);
      RadioButton(h2,v+=16,1,0,"21-27",Surety2AgeGroup);  
      RadioButton(h2,v+=16,2,0,"28-64",Surety2AgeGroup);  
      RadioButton(h2,v+=16,3,0,"65+",Surety2AgeGroup);  
    end;
    if (LAr.SuretyCnt>=3) then begin
      StaticText(h3,v=26,"Surety Provider 3",false);
      CheckBox(h3,v=v+vs,0,"Majority Owner",MajorityOwner3);
      EditField(h3,v+=vs,100,"Contact Code 3",Normal,SuretyProvider3,false,B2BLoanApp_CUSClass);
      EditField(h3,v+=vs,100,"Access to Data till",ViewOnly,Surety3AccessToDataUntil,false,PasteCurDate);
      vm = v;
      CheckBox(h3,v=v+vs,0,"Asset Arrests",Surety3AssetArrests);
      CheckBox(h3,v=v+vs,0,"Bankruptcy",Surety3Bankruptcy);
      CheckBox(h3,v=v+vs,0,"Not Creditable",Surety3NotCreditable);
      CheckBox(h2,v=v+vs,0,"Court Cases last Year",Surety3Courts);
      v = vm;
      ButtonFrame(h3-100,v=v+40,90,2,"Type");
      RadioButton(h3-100,v,0,0,"Entrepreneur",Surety3Type);
      RadioButton(h3-100,v+=16,1,0,"Specialist",Surety3Type);  
      HalPushButton(h3-90,v+=25,h3-10,v+25,"PrintSurety3Dm","Print");
      HalPushButton(h3,v+=25,h3+120,v+25,"ShowB2BAppScoring3","Scoring Rate");
      HalPushButton(h3-90,v,h3-10,v+25,"ShowB2BAppRemSur3","Remove"); v = v + 10;
      EditField(h3,v+=vs,100,"Name",Normal,Surety3Name,false,0);
      EditField(h3,v+=vs,100,"Position",Normal,Surety3Position,false,JobTitleSClass);
      EditField(h3,v+=vs,100,"Phone",Normal,Surety3Phone,false,0);
      EditField(h3,v+=vs,100,"Email",Normal,Surety3eMail,false,0);
      EditField(h3,v+=vs,100,"ID",Normal,Surety3ID,false,0);

      EditField(h3,v+=vs,130,label1,Normal,Surety3Addr0,false,0);
      EditField(h3,v+=vs,130,label2,Normal,Surety3Addr1,false,0);
      EditField(h3,v+=vs,130,label3,Normal,Surety3Addr2,false,0);
      EditField(h3,v+=vs,130,label4,Normal,Surety3Addr3,false,0);
      EditField(h3,v+=vs,130,label5,Normal,Surety3Addr4,false,0);
      ButtonFrame(h3,v=v+40,150,4,"Age Group");
      RadioButton(h3,v,0,0,"Under 21",Surety3AgeGroup);
      RadioButton(h3,v+=16,1,0,"21-27",Surety3AgeGroup);  
      RadioButton(h3,v+=16,2,0,"28-64",Surety3AgeGroup);  
      RadioButton(h3,v+=16,3,0,"65+",Surety3AgeGroup);  
    end;
    switch (LAr.SuretyCnt) begin
      case 0:  
        HalPushButton(h2,v=26,h2+120,v+25,"B2BLoanAppAddSurety","Add Surety"); v = v + 10;
      case 1:  
        HalPushButton(h2,v=26,h2+120,v+25,"B2BLoanAppAddSurety","Add Surety"); v = v + 10;
      case 2:
        HalPushButton(h3,v=26,h3+120,v+25,"B2BLoanAppAddSurety","Add Surety"); v = v + 10;
    end;
  end;

  Tile(tilenr,600,true,tilenr,Equity); tilenr = tilenr + 1;
  EditField(h=135,v=6,100,"Equity",Normal,Equity,true,0);
  EditField(h2=365,v,100,"Working Capital",Normal,WorkingCapital,true,0);
  EditField(h3=595,v,100,"Short Term Liabilities",Normal,ShortTermLiabilities,true,0);
  EditField(h,v+=vs,100,"Current Assets",Normal,CurrentAssets,true,0);
  EditField(h2,v,100,"Current Liabilities",Normal,CurrentLiabilities,true,0);
  EditField(h3,v,100,"Turnover",Normal,Turnover,true,0);
  EditField(h,v+=vs,100,"Net Profit",Normal,NetProfit,true,0);
  SoftEditField(h2,v,100,"Returns on Sales",ViewOnly,"returnsonsales",true,0,M4Val,0);
  SoftEditField(h3,v,100,"Curr. Liquidity Ratio",ViewOnly,"currliquidityratio",true,0,M4Val,0);
  
  EditField(h=135,v+=vs,100,"Late Rating",Normal,LateRating,true,0);
  EditField(h2=365,v,100,"Bankruptcy Rating",Normal,BankruptcyRating,true,0);
  EditField(h3=595,v,100,"Established",Normal,Established,false,PasteCurDate);
  EditField(h,v+=vs,100,"Monthly Loan Payment",Normal,MonthlyLoadPayment,true,0);
  EditField(h2,v,100,"Current Debts",Normal,CurrentDebts,true,0);
  EditField(h3,v,100,"Last Debt Repayment",Normal,LastRepaymentDate,false,PasteCurDate); 
  h3 = 565;
  CheckBox(h,v+=vs,0,"Ongoing Court Cases",OngoingCourtCases);
  CheckBox(h2,v,0,"Historical Court Cases",HistoricalCourtCases);
  CheckBox(h3,v,0,"Ongoing Asset Arrests",OngoingAssetArrests);
  CheckBox(h,v+=vs,0,"Historical Asset Arrests",HistoricalAssetArrests);
  CheckBox(h2,v,0,"Bankruptcy",BankruptcyFlag);
  CheckBox(h3,v,0,"Liquidation",LiquidationFlag);
  CheckBox(h,v+=vs,0,"Ownership Changes",OwnershipChanges);
  CheckBox(h2,v,0,"Publicity Information",Publicity);
  CheckBox(h3,v,0,"Being Sued",BeingSued);
  CheckBox(h,v+=vs,0,"Ongoing Debt Collections",DebtCollections);
  CheckBox(h2,v,0,"Unreliable Company",UnreliableComp);
  CheckBox(h3,v,0,"Available fin. statements",AvailableFinStatements);

//  EditField(h,v+=vs,100,"Long Term Asset Value",Normal,AssetValue,false,0);
  //EditField(h,v+=vs,100,"50% Rev. Customers",Normal,HalfRevenueCustomers,true,0);
  //EditField(h,v+=vs,100,"Equity",Normal,Equity,true,0);
  //EditField(h3=595,v,100,"50% Cost Suppliers",Normal,HalfCostSuppliers,true,0);
  //EditField(h,v+=vs,100,"Months",Normal,RevMonths,true,0);
  //EditField(h2,v,100,"Revenue",Normal,Revenue,true,0);
  //EditField(h3,v,100,"Annual Revenue",Normal,AnnualRevenue,true,0);
  h3 = 565;
/*
  ButtonFrame(h-50,v=v+40,640,1,"Current");
  EditField(h,v,80,"Profit",Normal,CurProfit,true,0);
  EditField(h2=320,v,80,"Receivables",Normal,CurReceivables,true,0);
  EditField(h3-100,v,80,"Payables",Normal,CurPayables,true,0);
  EditField(h3+40,v,80,"Total",Normal,CurTotal,true,0);

  ButtonFrame(h-50,v=v+40,640,1,"Previous");
  EditField(h,v,80,"Profit",Normal,PrevProfit,true,0);
  EditField(h2,v,80,"Receivables",Normal,PrevReceivables,true,0);
  EditField(h3-100,v,80,"Payables",Normal,PrevPayables,true,0);
  EditField(h3+40,v,80,"Total",Normal,PrevTotal,true,0);
*/
  Tile(tilenr,600,true,tilenr,Workplace); tilenr = tilenr + 1;//Person evaluation
  v=6;
  HalPushButton(h-50,v,h+70,v+20,"B2BLoanApplicationDClassOpenDebts","Debts");
  EditField(h,v+=vs+10,80,"Workplace",Normal,Workplace,true,B2BLoanApp_CUSClass);
  EditField(h2,v,300,"",Normal,WorkplaceName,false,0);
  
  EditField(h,v+=vs,80,"Average Income",Normal,AvgIncome,true,0);
  EditField(h2,v,80,"Other Obligations",Normal,OtherObligations,true,0);
  EditField(h3+30,v,80,"Curr. avg. loan expenses",Normal,CurrAvgLoanExp,true,0);
  
  SoftEditField(h,v+=vs,80,"Affordability",ViewOnly,"affordability",true,0,M4Val,0);
  SoftEditField(h3+30,v,80,"Monthly payment/Avg. income 6 m",ViewOnly,"monthpayperavgincome",true,0,M4Val,0);
  
  

  Tile(tilenr,560,false,tilenr,Math2); tilenr = tilenr + 1;
  StaticText(30,v=30,"Comments",false);
  TextField(100,v-5,-20,270,Math2,0);

  Tile(tilenr,600,false,tilenr,Math2); tilenr = tilenr + 1;

  MatrixBegin(10,v=20,-30,220,-,10);
  MatCol(1,25,"Contact",0,ShareHolderCode,false,CUSClass);
  MatCol(1,120,"Name",0,ShareHolderName,false,0);
  MatCol(1,-580,"ID",0,ShareHolderID,false,0);
  MatCol(1,-500,"Address",0,ShareHolderAddr0,false,0);
  MatCol(1,-380,"Phone",0,ShareHolderPhone,false,0);
  MatCol(1,-300,"Mobile",0,ShareHolderMobile,false,0);
  MatCol(1,-220,"Email",0,ShareHoldereMail,false,0);
  MatCol(1,-90,"Share Size",0,ShareHoldereVal,false,0);
  EndMatrix;

  SpecialMenu("Fill Data from rekvizitai.lt",' ',1,"");
  SpecialMenu("Fill Data from SoDra",' ',2,"");
  SpecialMenu("Get Company Credit Data",' ',3,"");
  SpecialMenu("Get Surety Provider Data",' ',4,"");
  SpecialMenu("Evaluation Report",' ',5,"DoEvalReportDsm");
  SpecialMenu("Customer Status",'e',6,"CUStatusB2BLoanAppDsm");
  SpecialMenu("Fill Data from Creditinfo.lt",'',6,"GetCreditinfoStatDsm");
  SpecialMenu("Invite additional Surety Provider",'',6,"InviteSuretyDsm");
  SpecialMenu("Get Property Data",'',6,"B2BAppGetPropertyDataDsm");
  
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0); 
  SpecialMenu("E-mail",' ',1,""); 
  SpecialMenu("Credit Agreement",' ',1,"B2BLoanAppCreateCredManDsm"); 
  if (HasB2BCreateOffer) then begin  
    SpecialMenu("Offer Email",' ',1,"B2BLoanApplicationMakeEmailOffer"); 
  end;

  EndWindow;
end;

window BankAccountSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;

  WindowBegin("Paste Bank Account",BankAccountSClass,CGother,RcType);
  SetWRect(64,80,500,298);
  DataList(0,0,-1,-1,"DLPasteBankAccount");
  DataListColumn(1,6,120,AdjLeft,"DLBankCode","Bank Code",M4Str);
  DataListColumn(1,256,-32,AdjLeft,"DLBankAccount","Bank Account",M4Str);  
  EndWindow;
end;

window CreditAgreementsRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Specify Credit Agreements report",CreditAgreementsRClass,CGRcW,RcType);
  SetWRect(20,80,440,150);
  PeriodField(h=140,v=6,"Period");
  EditFieldTL(h,v+=20,150,"Client",M4UStr,Normal,40,f1,false,CUSClass);
  EditFieldTL(h,v+=20,150,"Type",M4UStr,Normal,40,f2,false,CredManTypeSClass);
  EditFieldTL(h,v+=20,150,"Class",M4Code,Normal,40,f3,false,OrderClassSClass);
  EditFieldTL(h,v+=20,150,"Balance Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=20,150,"Classifications",M4UStr,Normal,255,f4,false,CredManClassSClass);
  EditFieldTL(h,v+=20,150,"Manager",M4UStr,Normal,255,f5,false,UserSClass);
  EditField(h,v+=20,150,"First Invoice Period",Normal,Period2Str2,false,PerSClass);
  CheckBox(h,v+=30,0,"Include unapproved",flags[3]);
  CheckBox(h,v+=30,0,"Not OK'ed",flags[4]);
  CheckBox(h,v+=30,0,"Only Not OK'ed",flags[7]);
  CheckBox(h,v+=30,0,"Include Completed",flags[5]);
  CheckBox(h,v+=30,0,"Show Email address",flags[6]);
  
  EndWindow;
end;

window LoanApplicationListRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Specify Application Overview Report",LoanApplicationListRClass,CGRcW,RcType);
  SetWRect(20,80,440,150);
  PeriodField(h=140,v=6,"Period");
  EditFieldTL(h,v+=20,150,"Customer",M4Code,Normal,40,f1,false,CUSClass);
  EditFieldTL(h,v+=20,150,"Agreement Type",M4Code,Normal,40,f2,false,CredManTypeSClass);
  EditFieldTL(h,v+=20,150,"Manager",M4Code,Normal,255,f3,false,UserSClass);
  EditFieldTL(h,v+=20,150,"Order Class",M4Code,Normal,40,f4,false,OrderClassSClass);
  EditFieldTL(h,v+=20,150,"Source",M4Str,Normal,255,f5,false,0);
  if (IsNovitiCustomer) then begin
    CheckBox(h,v+=30,0,"Show only who finished Second Step",flags[10]);
  end;
  EndWindow;
end;

window MailingListRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Specify Mailing List Report",MailingListRClass,CGRcW,RcType);
  SetWRect(20,80,440,150);
  PeriodField(h=140,v=6,"Period");
  EditFieldTL(h,v+=20,150,"Mailing List",M4Code,Normal,40,f1,false,PersColSClass);
  EndWindow;
end;

window CredManFactLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Factoring Limits",CredManFactLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManFactDClass);
  UseView(CredManFactVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Credit Agreement",CredManNr,false,CredManNr);
  SearchField("Search");
  EndWindow;
end;

window CredManFactDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;

  WindowBegin("Factoring Limits",CredManFactDClass,CGview,-);
  SetWRect(20,80,760,339);
  DynamicWindow;
  UseView(CredManFactVc);
  vs=20; h=120; vs2=16; hm=-100;
  MatrixBegin(0,16,-16,-50,-,30);
  MatCol(1,24,"Customer",0,CustCode,false,CUSClass);
  MatCol(1,120,"Name",0,CustName,false,0);
  MatCol(1,-360,"Type",0,Type,false,SetSClass);
  MatCol(1,-300,"Used",0,Used,true,0);
  MatCol(1,-240,"Open",0,OpenTotal,true,0);
  MatCol(1,-160,"Eval. Limit",0,EvalLimit,true,0);
  MatCol(1,-80,"Max Limit",0,MaxLimit,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  SoftEditField(-280,-30,80,"Limit Total",ViewOnly,"credmanlimit",true,0,M4Val,0);
  EditField(-120,-30,80,"Total",ViewOnly,Total,true,0);
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Contact",'',1,"CredManFactCreateContactDsm");

  EndWindow;
end;

window CredManPmtGrntLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Sellers",CredManPmtGrntLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManPmtGrntDClass);
  UseView(CredManPmtGrntVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Credit Agreement",CredManNr,false,CredManNr);
  SearchField("Search");
  EndWindow;
end;

window CredManPmtGrntDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;

  WindowBegin("Sellers",CredManPmtGrntDClass,CGview,-);
  SetWRect(20,80,760,339);
  DynamicWindow;
  UseView(CredManPmtGrntVc);
  vs=20; h=120; vs2=16; hm=-100;
  MatrixBegin(0,16,-16,-50,-,30);
  MatCol(1,24,"Supplier",0,CustCode,false,VESClass);
  MatCol(1,120,"Name",0,CustName,false,0);
  MatCol(1,-420,"Used",0,Used,true,0);
  MatCol(1,-360,"Open",0,OpenTotal,true,0);
  MatCol(1,-300,"Eval. Limit",0,EvalLimit,true,0);
  MatCol(1,-220,"Max Limit",0,MaxLimit,true,0);
  MatCol(1,-140,"Delay Days",0,DelayDays,true,0);
  MatCol(1,-70,"Delay Days",0,DelayMonths,true,0);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Sign Certificate",'','',0,"CredManPmtGrntOpenCertificateDsm");
  EndRowMenu;
  EndMatrix;
  SoftEditField(-280,-30,80,"Limit Total",ViewOnly,"credmanlimit",true,0,M4Val,0);
  EditField(-120,-30,80,"Total",ViewOnly,Total,true,0);
  //SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  //SpecialMenu("Contact",'',1,"CredManFactCreateContactDsm");

  EndWindow;
end;

window CredManFactInvoiceLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Factoring Invoices",CredManFactInvoiceLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManFactInvoiceDClass);
  UseView(CredManFactInvoiceVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"SerNr",SerNr,false,SerNr);
  RlCol(100,100,"Agreement",CredManNr,false);
  RlCol(196,196,"Customer",CustCode,false);
  RlCol(196,196,"Invoice Nr.",InvoiceNr,false);
  SearchField("Search");
  EndWindow;
end;

window CustCredManFactInvoiceWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Factoring Invoices",CustCredManFactInvoiceWClass,CGOther,RcType);
  SetWRect(20,80,760,298);
  UseView(RcVc);
  EditField(h=100,v=55,50,"Dummy",Normal,f1,false,0);
  if (GuiType==kGuiCocoa) then begin
    RecordList2(4,17,-21,-1,"CredManFactInvoiceVc");
  end else begin
    RecordList2(4,17,-21,-35,"CredManFactInvoiceVc");    
  end;
  RlColKey(4,4,"Ser Nr.",SerNr,false,SerNr);
  RlCol(170,170,"Customer",CustName,false);
  RlCol(290,290,"Invoice Nr.",InvoiceNr,false);
  RlCol(-360,-360,"Due Date",DueDate,false);
  RlCol(-270,-270,"Total",TotalSum,false);
  RlCol(-210,-210,"Received",ReceivedAmount,false);
  RlColTL(-150,-150,"SL",M4Mark,InitSLInvFlag,false);
  RlColTL(-120,-120,"Paid",M4Mark,CustPaidFlag,false);
  RlColTL(-90,-90,"PL",M4Mark,InitPLInvFlag,false);
  RlColTL(-60,-60,"Paid",M4Mark,CustPaid2Flag,false);
  RlColTL(-30,-30,"Fee",M4Mark,FeeGenFlag,false);
  //SpecialMenu("Regress",'',1,"CUStatusB2BLoanAppLsm");
  SpecialMenu("Add Invoice",'',1,"CustCredManFactInvoiceAddSm");
  SpecialMenu("Generate Fee Invoice",'',1,"CustCredManFactInvoiceCreateFeeInvSm");
  SpecialMenu("Open Sales Invoice",'',1,"CustCredManFactInvoiceOpenSLSm");
  SpecialMenu("Open Purchase Invoice",'',1,"CustCredManFactInvoiceOpenPLSm");
  SpecialMenu("Recreate Invoices",'',1,"CustCredManFactInvoiceRecreateSm");
  SpecialMenu("Delete Invoice",'',1,"CustCredManFactInvoiceDeleteSm");
  SpecialMenu("Upload Invoice",'',1,"FactInvoiceUploadFileSm");
  
  EndWindow;
end;

window CredManFactInvoiceDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Factoring Invoice",CredManFactInvoiceDClass,CGview,-);
  SetWRect(20,80,600,339);
  UseView(CredManFactInvoiceVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,50,"SerNr",Normal,SerNr,false,0);
  EditField(h,v+=vs,50,"Cred. Agr.",Normal,CredManNr,false,CredManSClass);
  EditField(h,v+=vs,50,"Customer",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,50,"InvoiceNr",Normal,InvoiceNr,false,0);
  EditField(h,v+=vs,50,"Inv. Date",Normal,InvDate,false,0);
  EditField(h,v+=vs,50,"Due Date",Normal,DueDate,false,0);
  EditField(h,v+=vs,50,"Total Sum",Normal,TotalSum,false,0);
  EditField(h,v+=vs,50,"Received Amount",Normal,ReceivedAmount,false,0);
  CheckBox(h,v+=20,0,"Buyer Invoice",InitSLInvFlag);
  CheckBox(h,v+=20,0,"Customer Invoice",InitPLInvFlag);
  CheckBox(h,v+=20,0,"Buyer has Paid",CustPaidFlag);
  CheckBox(h,v+=20,0,"Fee Invoice",FeeGenFlag);
  EndWindow;
end;

window NewCredManFactInvoiceWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  WindowBegin("Factoring Invoice",NewCredManFactInvoiceWClass,CGOther,RcType);
  SetWRect(20,80,600,259);
  UseView(RcVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v+=vs,100,"Customer",Normal,f1,false,FactoringBuyersSClass);
  EditField(h2=300,v,-40,"Name",Normal,searchstr,false,0);
  EditField(h,v+=vs,100,"Invoice Nr.",Normal,ObjStr,false,0);
  EditField(h,v+=vs,90,"Inv. Date",Normal,d1,false,PasteCurDate);
  EditField(h,v+=vs,90,"Due Date",Normal,d2,false,PasteCurDate);
  EditField(h,v+=vs,90,"Total Sum",Normal,vals0,false,0);
  HalPushButton(h,v+=vs,h+150,v+=20,"NewCredManFactInvoiceWClassProceed","Add and Create Invoices");
  EndWindow;
end;

/*pmt grnt report*/
window CredManGrntReportLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Payment Guarantee Reports",CredManGrntReportLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManGrntReportDClass);
  UseView(CredManGrntReportVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"SerNr",SerNr,false,SerNr);
  RlCol(100,100,"Agreement",CredManNr,false);
  RlCol(196,196,"Supplier",CustCode,false);
  SearchField("Search");
  EndWindow;
end;

window CredManGrntReportWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Payment Guarantee Reports",CredManGrntReportWClass,CGOther,RcType);
  SetWRect(20,80,760,298);
  UseView(RcVc);
  EditField(h=100,v=55,50,"Dummy",Normal,f1,false,0);
  if (GuiType==kGuiCocoa) then begin
    RecordList2(4,17,-21,-1,"CredManGrntReportVc");
  end else begin
    RecordList2(4,17,-21,-35,"CredManGrntReportVc");    
  end;
  RlColKey(4,4,"Ser Nr.",SerNr,false,SerNr);
  RlCol(100,100,"Supplier",CustName,false);
  RlCol(-450,-450,"Report Date",ReportDate,false);
  RlCol(-360,-360,"Due Date",DueDate,false);
  RlCol(-270,-270,"Total",TotalSum,false);
  RlCol(-210,-210,"Received",ReceivedAmount,false);
  RlColTL(-150,-150,"SL",M4Mark,InitSLInvFlag,false);
  RlColTL(-120,-120,"Paid",M4Mark,CustPaidFlag,false);
  RlColTL(-90,-90,"PL",M4Mark,InitPLInvFlag,false);
  RlColTL(-60,-60,"Paid",M4Mark,CustPaid2Flag,false);
  RlColTL(-30,-30,"Fee",M4Mark,FeeGenFlag,false);
  SpecialMenu("Add Amount",'',1,"CredManGrntReportAddSm");
  SpecialMenu("Open Sales Invoice",'',1,"CredManGrntReportOpenSLSm");
  SpecialMenu("Open Purchase Invoice",'',1,"CredManGrntReportOpenPLSm");
  SpecialMenu("Delete Total Amount",'',1,"CredManGrntReportDeleteSm");
  EndWindow;
end;

window CredManGrntReportDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Payment Guarantee Report",CredManGrntReportDClass,CGview,-);
  SetWRect(20,80,600,339);
  UseView(CredManGrntReportVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,50,"SerNr",Normal,SerNr,false,0);
  EditField(h,v+=vs,50,"Cred. Agr.",Normal,CredManNr,false,CredManSClass);
  EditField(h,v+=vs,50,"Customer",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,50,"Inv. Date",Normal,ReportDate,false,0);
  EditField(h,v+=vs,50,"Due Date",Normal,DueDate,false,0);
  EditField(h,v+=vs,50,"Total Sum",Normal,TotalSum,false,0);
  EditField(h,v+=vs,50,"Received Amount",Normal,ReceivedAmount,false,0);
  CheckBox(h,v+=20,0,"Buyer Invoice",InitSLInvFlag);
  CheckBox(h,v+=20,0,"Seller Invoice",InitPLInvFlag);
  CheckBox(h,v+=20,0,"Buyer has Paid",CustPaidFlag);
  CheckBox(h,v+=20,0,"Fee Invoice",FeeGenFlag);
  EndWindow;
end;

window NewCredManGrntReportWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  WindowBegin("Amount Report",NewCredManGrntReportWClass,CGOther,RcType);
  SetWRect(20,80,600,259);
  UseView(RcVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v+=vs,100,"Supplier",Normal,f1,false,PmtGrntSellerSClass);
  EditField(h2=300,v,-40,"Name",Normal,f3,false,0);
  EditField(h,v+=vs,90,"Report Date",Normal,d1,false,PasteCurDate);
  EditField(h,v+=vs,90,"Due Date",Normal,d2,false,PasteCurDate);
  EditField(h,v+=vs,90,"Total Sum",Normal,vals0,false,0);
  HalPushButton(h,v+=vs,h+150,v+=20,"NewCredManGrntReportWClassProceed","Add");
  EndWindow;
end;

window FactoringBuyersSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Paste Factoring Customer",FactoringBuyersSClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(40,80,350,298);
  Sizeable(-1,-1,-1,0);
  v=6;
  DataList(0,0,-1,-1,"customers");
  DataListColumn(1,6,120,AdjLeft,"custcode","Code",M4Str);
  DataListColumn(1,130,-1,AdjLeft,"custname","Name",M4Str);
  SearchField("Search");
  EndWindow;
end;

window PmtGrntSellerSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Paste Seller",PmtGrntSellerSClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(40,80,350,298);
  Sizeable(-1,-1,-1,0);
  v=6;
  DataList(0,0,-1,-1,"customers");
  DataListColumn(1,6,120,AdjLeft,"custcode","Code",M4Str);
  DataListColumn(1,130,-1,AdjLeft,"custname","Name",M4Str);
  SearchField("Search");
  EndWindow;
end;

window CredManCloseTaskTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Automatically Closed Tasks",CredManCloseTaskTClass,CGSbl,-);
  SetBlid(CredManCloseTaskBlock);
  SetWRect(20,80,500,298);
  vs=20; h=250; vs2=16; hm=-100;
  EditField(h,v=6,100,"Close Tasks for Applications with Classes",Normal,LoanAppOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Close Tasks for Agreements with Classes",Normal,CredManOrderClass,false,OrderClassSClass);
  EndWindow;
end;

window AgreementDocLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Documents",AgreementDocLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(AgreementDocDClass);
  UseView(AgreementDocVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Number",SerNr,false,SerNr);
  RlColKey(100,100,"Agreement",RecordNr,false,RecordNr);
  RlCol(196,196,"Date",TransDate,false);
  RlColKey(322,322,"Type",Type,false,Type);
  SearchField("Search");
  EndWindow;
end;

window AgreementDocDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs,v2,vs2,hm;
  WindowBegin("Agreement Document",AgreementDocDClass,CGview,-);
  SetWRect(20,80,600,459);
  UseView(AgreementDocVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,90,"Number",Normal,SerNr,false,0);
  EditField(h,v+=vs,90,"Agreement",Normal,RecordNr,false,0);
  EditField(h,v+=vs,90,"Date",ViewOnly,TransDate,false,0);
  EditField(h2=300,v,90,"Time",ViewOnly,TransTime,false,0);
  EditField(h,v+=vs,150,"Type",Normal,Type,false,SetSClass);
/*
  CheckBox(h,v+=vs,0,"Signed By Customer",SignedByCustomer,);
  EditField(h+180,v,90,"Date",ViewOnly,SignedByCustomerDate,false,0);
  EditField(h+280,v,90,"",ViewOnly,SignedByCustomerTime,false,0);
*/
  CheckBox(h,v+=vs,0,"Signed By Us",SignedByUs);
  EditField(h+180,v,90,"Date",ViewOnly,SignedByUsDate,false,0);
  EditField(h+280,v,90,"",ViewOnly,SignedByUsTime,false,0);
  CheckBox(h,v+=vs,0,"Reminder Sent",SentReminder);
  CheckBox(h+180,v,0,"Digital",DigitalFlag);

  HalPushButton(-300,7,-230,27,"AgreementDocDClassSign","Sign");
  HalPushButton(-220,7,-150,27,"AgreementDocDClassRegen","Regenerate");
  HalPushButton(-140,7,-10,27,"AgreementDocDClassRegen2","Regenerate and resign");

  MatrixBegin(10,v+=40,-30,220,-,10);
  MatCol(1,25,"Code",0,CustCode,false,B2BLoanApp_CUSClass);
  MatCol(1,120,"Name",0,CustName,false,0);
  MatCol(1,-270,"Status",0,Status,false,0);
  MatCol(1,-180,"Date",0,SignatureDate,false,0);
  MatCol(1,-90,"Time",0,SignatureTime,false,0);
  EndMatrix;

  EndWindow;
end;

window DocSigningWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  WindowBegin("Sign Document",DocSigningWClass,CGOther,RcType);
  SetWRect(20,80,800,700);
  AutoSizeWindow(false);
  UseView(RcVc);
  WebPage(0,0,-1,-1,"","$SIGNAREA");
  EndWindow;
end;

/*
window CreditalInvoiceTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2,tilenr;
  WindowBegin("Invoice Settings",CreditalInvoiceTClass,CGSbl,-);
  SetBlid(CreditalInvoiceBlock);
  h = 200;
  SetWRect(20,80,550,298);
  tilenr = 1;
  Tile(0,20,false,"",FBuyerPayDeal);
  TileButton(tilenr,"Factoring"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Payment Guarantee"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Payments"); tilenr = tilenr + 1;

  Tile(1,95,false,"1",FBuyerPayDeal);
  vs=20; h=160; vs2=16; hm=-100;
  ButtonFrame(h-100,v=30,250,5,"Buyer's Invoice");
  EditField(h,v,100,"Payment Terms",Normal,FBuyerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Object",Normal,FBuyerObject,false,ObjSClass);
  EditField(h,v+=vs,100,"Item",Normal,FBuyerItem,false,INSClass);
  EditField(h,v+=vs,100,"Payment Mode",Normal,FVIPaymentMode,false,PMSClass);

  ButtonFrame(h-100,v+=50,250,7,"Seller's Invoice");
  EditField(h,v,100,"Payment Terms",Normal,FSellerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Account",Normal,FSellerAccount,false,AccSClass);
  EditField(h,v+=vs,100,"Fee Account",Normal,FSellerFeeAccount,false,AccSClass);
  EditField(h,v+=vs,100,"VAT Code",Normal,FSellerVATCode,false,VATCodeSClass);
  EditField(h,v+=vs,100,"Object",Normal,FSellerObject,false,ObjSClass);
  EditField(h,v+=vs,100,"Payment Mode",Normal,FIVPaymentMode,false,PMSClass);
  
  Tile(2,95,false,"2",PGBuyerSecurityItem);
 
  ButtonFrame(h-100,v=30,250,5,"Buyer's Invoice");
  EditField(h,v,100,"Security Item",Normal,PGBuyerSecurityItem,false,INSClass);
  EditField(h,v+=vs,100,"Security Prc",Normal,PGBuyerSecurityPrc,false,0);
  EditField(h,v+=vs,100,"PayDeal",Normal,PGBuyerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Item",Normal,PGBuyerItem,false,INSClass);

  ButtonFrame(h-100,v+=50,250,2,"Seller's Invoice");
  EditField(h,v,100,"Account",Normal,PGSellerAccount,false,AccSClass);
  EditField(h,v+=vs,100,"VAT Code",Normal,PGSellerVATCode,false,VATCodeSClass);

  Tile(3,95,false,"3",PaymentPayDeal);

  EditField(h,v=6,100,"Payment Terms",Normal,PaymentPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Account",Normal,PaymentAccount,false,AccSClass);
  EditField(h,v+=vs,100,"VAT Code",Normal,PaymentVATCode,false,VATCodeSClass);
  EditField(h,v+=vs,100,"Object",Normal,PaymentObject,false,ObjSClass);
  EditField(h,v+=vs,100,"Payment Mode",Normal,PaymentMode,false,PMSClass);

  EndWindow;
end;
*/

window CredManAutoTaskTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Automatic Tasks",CredManAutoTaskTClass,CGHbl,HBlRecType);
  SetBlid(CredManAutoTaskBlock);
  SetWRect(20,80,900,351);
  Sizeable(-1,-1,0,0);
  if (GuiType==kGuiCocoa) then begin
    MatrixBegin(h,v,-31,-20,-,199);
  end else begin
    MatrixBegin(h,v+16,-18,-20,-,199);    
  end;
  MatCol(1,24,"Type",0,Type,false,SetSClass);
  MatCol(1,130,"Class",0,OrderClass,false,OrderClassSClass);
  MatCol(1,200,"Del. Hours",0,DelayHours,false,0);
  MatCol(1,260,"Del. Days",0,DelayDays,false,0);
  MatCol(1,340,"Time",0,AtTime,false,0);
  MatCol(1,400,"Person Type",0,PersonType,false,SetSClass);
  MatCol(1,540,"Manager",0,Manager,false,UserSClass);
  MatCol(1,620,"Act. Type",0,ActType,false,ActTypeSClass);
  MatCol(1,680,"Act. Text",0,ActText,false,0);
  EndMatrix;
  EndWindow;
end;

window InvitationRequestLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Invitation Requests",InvitationRequestLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(InvitationRequestDClass);
  UseView(InvitationRequestVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"UUID",UUID,false,MainKey);
  RlCol(74,74,"Date",TransDate,false);
  RlCol(204,204,"Time",TransTime,false);
  RlColKey(300,300,"Contact",ContactCode,false,ContactCode);
  RlCol(370,370,"Status",Status,false);
  SearchField("Search");
  EndWindow;
end;

window InvitationRequestDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Invitation Request",InvitationRequestDClass,CGview,-);
  SetWRect(20,80,600,339);
  Sizeable(-1,-1,0,0);
  UseView(InvitationRequestVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,50,"TransDate",Normal,TransDate,false,);
  EditField(h,v+=vs,50,"ContactCode",Normal,ContactCode,false,CUSClass);
  EditField(h,v+=vs,50,"Status",Normal,Status,false,0);
  EditField(h,v+=vs,50,"FillDate",Normal,FillDate,false,0);
  EditField(h,v+=vs,50,"FillTime",Normal,FillTime,false,0);
  EndWindow;
end;

window InviteSuretyWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  WindowBegin("Invite Additional Surety Provider",InviteSuretyWClass,CGOther,RcType);
  SetWRect(20,80,400,189);
  UseView(RcVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v+=vs,150,"Email Address",Normal,f1,false,0);
  HalPushButton(h,v+=vs,h+150,v+=20,"InviteSuretyWClassSend","Send");
  EndWindow;
end;

window DocumentReminderLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Document Signing Reminders",DocumentReminderLClass,CGmlist,-);
  SetWRect(20,80,560,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(DocumentReminderDClass);
  UseView(DocumentReminderVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Type",Type,false,Type);
  RlCol(134,134,"Text",Text,false);
  RlCol(260,260,"Delay",Delay,false);
  RlColTL (-70,-70,"Active",M4Mark,ActiveFlag,false);
  SearchField("Search");
  EndWindow;
end;

window DocumentReminderDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Document Signing Reminder",DocumentReminderDClass,CGview,-);
  SetWRect(20,80,500,339);
  UseView(DocumentReminderVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,150,"Type",Normal,Type,false,SetSClass);
  CheckBox(h+200,v,0,"Active",ActiveFlag);
  EditField(h,v+=vs,150,"Delay",Normal,Delay,false,0);
  EditField(h,v+=vs,150,"Text",Normal,Text,false,LTxtSClass);
  EndWindow;
end;

window CredManExtTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Agreement/Application Extensions",CredManExtTClass,CGHbl,HBlRecType);
  SetBlid(CredManExtBlock);
  SetWRect(20,80,500,351);
  Sizeable(-1,-1,0,0);
  if (GuiType==kGuiCocoa) then begin
    MatrixBegin(h,v,-31,-20,-,199);
  end else begin
    MatrixBegin(h,v+16,-18,-20,-,199);    
  end;
  MatCol(1,24,"Order Class",0,OrderClass,false,OrderClassSClass);
  MatCol(1,130,"Action",0,ShowFlag,false,SetSClass);
  EndMatrix;
  EndWindow;
end;

window CMOrderClassTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2,tilenr;
  WindowBegin("Automatic Order Classes",CMOrderClassTClass,CGSbl,-);
  SetBlid(CMOrderClassBlock);
  h = 200;
  SetWRect(20,80,550,298);
  tilenr = 1;
  Tile(0,20,false,"",DefOrderClass);
  TileButton(tilenr,"Applications"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Agreements"); tilenr = tilenr + 1;  

  Tile(1,95,false,"1",DefOrderClass);
  vs=20; h=160; vs2=16; hm=-100;
  EditField(h,v=6,100,"Default Class",Normal,DefOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Unfinished Appl. Class",Normal,WebAppClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Signed Appl. Class",Normal,VerWebAppClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Not signed Appl. Class",Normal,OtherWebAppClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Appl. Class to check Contacts",Normal,CheckWebAppClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Accepted Appl. Class",Normal,AcceptedAppOrderClass,false,OrderClassSClass);

  
  Tile(2,95,false,"2",CMDefOrderClass);
 
  EditField(h,v=6,100,"Default Class",Normal,CMDefOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Customer Signed Class",Normal,CMCustSignedOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Signed by Us Class",Normal,CMUsSignedOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Termination Class",Normal,TerminatedOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Refinance Class",Normal,RefinClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Active Class",Normal,ActiveCredOrderClass,false,OrderClassSClass);
  EditField(h,v+=vs,100,"Finished Class",Normal,FinishCredOrderClass,false,OrderClassSClass);

  EndWindow;
end;


window EBSIncomeAnalysisRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Specify Income Analysis",EBSIncomeAnalysisRClass,CGRcW,RcType);
  SetWRect(20,80,420,310);
  vs = 20;
  EditFieldTL(h=150,v=10,82,"To Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,150,"Customer",   M4UStr,Normal,41,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,50,"Customer Category",M4UStr,Normal,5,f7,false,CCatSClass);
  EditFieldTL(h,v+=vs,150,"Customer Classification",M4UStr,Normal,30,Stext,false,CClassSClass);
  EditFieldTL(h,v+=vs,150,"Item",M4Str,Normal,60,f5,false,INSClass);   
  EditFieldTL(h,v+=vs,82, "Item Group",   M4UStr,Normal,10,AccStr,false,ITSClass);
  EditFieldTL(h,v+=vs,150,"Item Classification",M4UStr,Normal,100,f6,false,DISClass);
  EditFieldTL(h,v+=vs,82,"Inv. Date",M4Date,Normal,0,RegDate,false,PasteCurDate);
  EditFieldTL(h,v+=vs,82,"Agreement Type",M4Str,Normal,60,f8,false,CredManTypeSClass);
  EditFieldTL(h,v+=vs,82,"Agreement Classification",M4Str,Normal,60,f9,false,CredManClassSClass);
  ButtonFrame(h=50,vm=(v+=41),123,2,"View");
  RadioButton(h,v,0,0,"Overview",ArtMode);
  RadioButton(h,v+=16,1,0,"Detailed",ArtMode);
  ButtonFrame(h=200,v=vm,123,3,"Months");
  RadioButton(h,v,3,0,"3",flags[0]);
  RadioButton(h,v+=16,6,0,"6",flags[0]);
  RadioButton(h,v+=16,12,0,"12",flags[0]);//Default value
  EndWindow;
end;

window CMIncomeForecastRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Specify Income Forecast",CMIncomeForecastRClass,CGRcW,RcType);
  SetWRect(20,80,420,310);
  vs = 20;
  PeriodField(h=140,v=6,"Period");
  EditFieldTL(h,v+=vs,150,"Customer",   M4UStr,Normal,41,f1,false,CUSClass);
  EditFieldTL(h,v+=vs,82,"Agreement Type",M4Str,Normal,60,f2,false,CredManTypeSClass);
  EditFieldTL(h,v+=vs,82,"Class",M4Str,Normal,60,f3,false,OrderClassSClass);
  EditFieldTL(h,v+=vs,82,"Agreement Classification",M4Str,Normal,60,f4,false,CredManClassSClass);
  EditFieldTL(h,v+=vs,82,"Manager",M4Str,Normal,60,f5,false,UserSClass);
  EndWindow;
end;

window CheckCMSchedRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Specify check Schedule Periods",CheckCMSchedRClass,CGRcW,RcType);
  SetWRect(20,80,420,310);
  vs = 20;
  EndWindow;
end;
window CredManTestRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Specify Test Credit Agreements",CredManTestRClass,CGRcW,RcType);
  SetWRect(20,80,420,310);
  vs = 20;
  EndWindow;
end;

window CMInvoiceableContractsRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("Specify Late to be invoiced Contracts",CMInvoiceableContractsRClass,CGRcW,RcType);
  SetWRect(20,80,420,310);
  vs = 20;
  EditFieldTL(h=140,v=6,150,"On Date", M4Date,Normal,41,d1,false,PasteCurDate);
  EndWindow;
end;

window ReceiptEntryWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,h2,h3,h4,h5;

  WindowBegin("Receipt Entry",ReceiptEntryWClass,CGother,-);
  UseView(SMVc);
  SetWRect(20,80,580,621);
  h = 120; v = 27; h2 = 300; h3 = 480;
  vs = 20;
	EditField(h,v=6,82,"Date",Normal,RegDate,false,PasteCurDate);
	EditField(h,v+=vs,50,"Payment Mode",Normal,Sign,false,PMSClass);

  MatrixBegin(10,v+=40,-30,-60,-,100);
  MatCol(1,34,"Customer",0,Objects,false,CUSClass);
  MatCol(1,124,"Name",0,Comment,false,0);
  MatCol(1,-180,"Amount",0,DebVal,false,0);
  MatCol(1,-70,"Currency",0,CurncyCode,false,CurncyCodeSClass);
  EndMatrix;

  HalPushButton(h,-40,h+130,-20,"ReceiptEntryWClassProceed","Generate Receipts");

  EndWindow;
  return;
end;

window CredManClassLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Classifications",CredManClassLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManClassDClass);
  UseView(CredManClassVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CredManClassSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Agreement Classification",CredManClassSClass,CGslist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManClassDClass);
  UseView(CredManClassVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CredManClassDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Agreement Classification",CredManClassDClass,CGview,-);
  SetWRect(20,80,400,239);
  UseView(CredManClassVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,100,"Code",Normal,Code,false,);
  EditField(h,v+=vs,-40,"Comment",Normal,Comment,false,0);
  EditField(h,v+=vs,140,"Type",Normal,Type,false,CredManClassTypeSClass);
  EndWindow;
end;

window CredManClassTypeLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Classification Types",CredManClassTypeLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManClassTypeDClass);
  UseView(CredManClassTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CredManClassTypeSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Agreement Classification Type",CredManClassTypeSClass,CGslist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManClassTypeDClass);
  UseView(CredManClassTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CredManClassTypeDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Agreement Classification Type",CredManClassTypeDClass,CGview,-);
  SetWRect(20,80,400,239);
  UseView(CredManClassTypeVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,100,"Code",Normal,Code,false,);
  EditField(h,v+=vs,-40,"Comment",Normal,Comment,false,0);
  EndWindow;
end;

window AgreementTypeSetSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Agreement Type",AgreementTypeSetSClass,CGother,HBlRecType);
  SetWRect(240,80,600,348);
  StringList(9,9,-19,-19);
  EndWindow;
end;


window CredManSchedLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Schedules",CredManSchedLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManSchedDClass);
  UseView(CredManSchedVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Agreement",CredManNr,false,CredManNr);
  RlCol(106,106,"Customer",CustCode,false);
  RlCol(176,176,"Name",CustName,false);
  RlCol(-200,-200,"Date",TransDate,false);
  RlCol(-80,-80,"Time",TransTime,false);
  SearchField("Search");
  EndWindow;
end;

window CredManSchedDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  WindowBegin("Agreement Schedule",CredManSchedDClass,CGview,-);
  SetWRect(20,80,930,639);
  UseView(CredManSchedVc);
  AutoSizeWindow(false);
  vs=20; h=120; vs2=16; hm=-100; h2 = 350;
  EditField(h,v=6,120,"Agreement",ViewOnly,CredManNr,false,0);
  EditField(h,v+=vs,90,"Customer",ViewOnly,CustCode,false,CUSClass);
  EditField(h2,v,-40,"Name",ViewOnly,CustName,false,0);
  EditField(h,v+=vs,90,"Date",ViewOnly,TransDate,false,0);
  EditField(h2,v,90,"Time",ViewOnly,TransTime,false,0);
  SoftEditField(350,v+=vs,60,"Total",ViewOnly,"totrealprinc",false,0,M4Val,0);
  MatrixBegin(10,v+=vs+20,-40,-40,-,999);
  MatCol(1,24,"Type",0,Type,false,SetSClass);
  MatCol(1,85,"Inv. Date",0,InvDate,false,0);
  MatCol(1,150,"Period From",0,FromDate,false,0);
  MatCol(1,215,"Period To",0,ToDate,false,0);
  MatCol(1,290,"Downpmnt",0,Deposit,true,0);
  MatCol(1,360,"Principle",0,Principle,true,0);
  MatCol(1,430,"Interest",0,Interest,true,0);
  MatColTL(1,500,"Fees",0,-1,ViewOnly,0,Fees,true,0);

  MatCol(1,574,"Total",0,Total,true,0);
  MatCol(1,-180,"Invoiced",0,Invoiced,false,SetSClass);
  MatCol(1,-120,"Balance",0,Balance,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  SoftEditField(90,-30,150,"Period",ViewOnly,"period",false,0,M4Str,255);
  SoftEditField(350,-30,60,"Diff.",ViewOnly,"diff",true,0,M4Str,255);
  SoftEditField(425,-30,60,"",ViewOnly,"totprinc",true,0,M4Val,0);
  SoftEditField(500,-30,60,"",ViewOnly,"totint",true,0,M4Val,0);
  SoftEditField(580,-30,60,"",ViewOnly,"totfees",true,0,M4Val,0);
  SoftEditField(700,-30,60,"",ViewOnly,"tot",true,0,M4Val,0);

  SpecialMenu("Open Fees Matrix",' ',1,"OpenCredFeesMatrixSchedDsm");
  SpecialMenu("Recalculate Interest",' ',1,"CredManSchedRecalcInterestDsm");

  
  EndWindow;
end;

window CMInvoicingTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,vs2,hm,h2,vm;
  Integer tilenr;
  vs = 20;
  WindowBegin("Invoicing Settings",CMInvoicingTClass,CGSbl,SRType);
  SetBlid(CMInvoicingBlock);
  SetWRect(20,80,670,298);
  Sizeable(-1,-1,0,0);
  
  tilenr = 1;
  Tile(0,20,false,"",DetailedInvoice);
  TileButton(tilenr,"General"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Overdue"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Factoring"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Payment Guarantee"); tilenr = tilenr + 1;  
  TileButton(tilenr,"Payments"); tilenr = tilenr + 1;

  Tile(1,700,false,"1",DetailedInvoice);
  CheckBox(h=180,v=6,0,"Details on Invoice",DetailedInvoice);
  CheckBox(h,v+=16,0,"Automatically connect Prepayments to Invoices",AddPrepayments);
  CheckBox(h,v+=16,0,"Interest on due Principle",IntDuePrinciple);
  CheckBox(h,v+=16,0,"Manual Contract Fee Invoice Number",ManualInvoiceNumber);
  CheckBox(h,v+=16,0,"Principle below hidden Line",HiddenPrinciple);
  CheckBox(h,v+=16,0,"Use Agreement Type Accounts",UseTypeAccounts);
  CheckBox(h,v+=16,0,"Interest including First Day",InterestFirstDay);

  CheckBox(h,v+=30,0,"Automatically issue Invoices",AutoInvoiceFlag);
  EditField(h,v+=20,100,"Time",Normal,AutoInvoiceTime,false,PasteCurTime);
  CheckBox(h,v+=20,0,"Automatically send issued Invoices",AutoInvoiceSend);
  CheckBox(h,v+=16,0,"Automatically send Invoices created from Contracts",AutoMailsFromInvoices);
  CheckBox(h,v+=16,0,"When creating Email, use precreated PDFs",UsePreCreatedInvoicePdf);

//  CheckBox(h,v+=16,0,"Remaining principle including Last Months Principle",LastPrincipleWithExtraMonth);
  

  EditField(h,v+=vs,100,"Additional Comment",Normal,InvoiceCommentStr,false,0);
  EditField(h,v+=vs,140,"Replace VAT Nr.",Normal,ReplaceVATNr,false,0);
  EditField(h+200,v,140,"with",Normal,ReplaceVATNrWith,false,0);
  EditField(h,v+=vs,100,"Prolong Item",Normal,ProlongItem,false,INSClass);
  EditField(h,v+=vs,100,"Compensation Item",Normal,CompensationItem,false,INSClass);
  EditField(h,v+=vs,100,"Selling Write-off Item",Normal,SellingItem,false,INSClass);
  EditField(h,v+=vs,100,"Letter of Demand Item",Normal,LetterOfDemand,false,INSClass);
  EditField(h,v+=vs,100,"Insurance Cost Item",Normal,InsuranceCost,false,INSClass);


  EditField(h,v+=vs,100,"Bad Debt Sales A/C",Normal,SellingSalesAccount,false,AccSClass);
  
    
  EditField(h,v+=vs,100,"Premature Term. Item",Normal,BuyOutItem,false,INSClass);  
  EditField(h,v+=vs,100,"Default Item Priority",Normal,ItemPriorityCode,false,CMItemPrioritySCLass);  
  EditField(h,v+=vs,100,"First Invoice Paym. Term",Normal,FirstInvPayDeal,false,PDSClass);  

  EditField(h,v+=vs,100,"Period Delimiter",Normal,PeriodDelimiter,false,0);  
  EditField(h,v+=vs,100,"Max overpaid Amount %",Normal,MaxOverpaidPrc,false,0);
  
  ButtonFrame(h,v+=40,400,4,"Interest Invoicing");
  RadioButton(h,v,0,0,"With Principle, same Invoice",InterestIVType);
  RadioButton(h,v+=16,1,0,"With Principle, separate Invoice",InterestIVType);  
  RadioButton(h,v+=16,2,0,"Separately for actual Period, on Day",InterestIVType);  
  RadioButton(h,v+=16,3,0,"Separately for previous Calendar Month, on Day",InterestIVType);  
  EditField(h+360,v,30,"Day of Month",Normal,InterestIVDay,false,0);

  v = v + 40;
  ButtonFrame(h,vm=v,200,5,"Invoice Recipients");
  Checkbox(h,v,0,"Primary Contact Email",SendToMainContact);
  Checkbox(h,v+=16,0,"Company Contact Email",SendToCompany);
  Checkbox(h+20,v+=16,0,"Only if no Contact Person",SendToCompNoContact);
  Checkbox(h,v+=16,0,"Additional Recipients",SendToAddRecip);
  EditField(h+100,v+=20,100,"Job Title",Normal,SendToJobDescr,false,JobTitleSClass);

  ButtonFrame(h2=400,v=vm,230,2,"Invoice Date");
  RadioButton(h2,v,0,0,"Payment Day",InvoiceDay);
  RadioButton(h2,v+=16,1,0,"Payment Day - Days of Payment Term",InvoiceDay);  

  Tile(2,500,false,"2",DetailedInvoice);
  CheckBox(h,v=6,0,"Overdue Calculation below hidden Line",AddOverdueDetails);

  EditField(h,v+=30,100,"Overdue Item Class",Normal,OverdueItemClass,false,DISClass);
  EditField(h,v+=vs,100,"Overdue Months",Normal,OverdueMonths,false,0);
  EditField(h,v+=vs,100,"Overdue Payment Terms",Normal,OverduePayTerm,false,PDSClass);
  EditField(h,v+=vs,100,"Overdue From",Normal,OverdueFrom,false,PasteCurDate);
  CheckBox(h+200,v,0,"New calculation for Grace periods",NewCalcForGrace);

  ButtonFrame(h,v+=40,400,3,"Overdue Invoicing");
  RadioButton(h,v,0,0,"With Principle, same Invoice",OverdueIVType);
  RadioButton(h,v+=16,1,0,"With Principle, separate Invoice",OverdueIVType);  
  RadioButton(h,v+=16,2,0,"Separately for previous Calendar Month, on Day",OverdueIVType);  
  EditField(h+360,v,30,"Day of Month",Normal,OverdueIVDay,false,0);

  ButtonFrame(h,v+=40,150,2,"Overdue Rate");
  RadioButton(h,v,0,0,"Daily",OverdueRateType);
  RadioButton(h,v+=16,1,0,"Monthly",OverdueRateType);  

  
  Tile(3,95,false,"3",FBuyerPayDeal);
  vs=20; h=160; vs2=16; hm=-100;
  ButtonFrame(h-100,v=30,250,5,"Buyer's Invoice");
  EditField(h,v,100,"Payment Terms",Normal,FBuyerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Object",Normal,FBuyerObject,false,ObjSClass);
  EditField(h,v+=vs,100,"Item",Normal,FBuyerItem,false,INSClass);
  EditField(h,v+=vs,100,"Payment Mode",Normal,FVIPaymentMode,false,PMSClass);

  ButtonFrame(h-100,v+=50,250,7,"Seller's Invoice");
  EditField(h,v,100,"Payment Terms",Normal,FSellerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Account",Normal,FSellerAccount,false,AccSClass);
  EditField(h,v+=vs,100,"Fee Account",Normal,FSellerFeeAccount,false,AccSClass);
  EditField(h,v+=vs,100,"VAT Code",Normal,FSellerVATCode,false,VATCodeSClass);
  EditField(h,v+=vs,100,"Object",Normal,FSellerObject,false,ObjSClass);
  EditField(h,v+=vs,100,"Payment Mode",Normal,FIVPaymentMode,false,PMSClass);
  
  Tile(4,305,false,"4",PGBuyerSecurityItem);
 
  ButtonFrame(h-100,v=30,250,5,"Buyer's Invoice");
  EditField(h,v,100,"Security Item",Normal,PGBuyerSecurityItem,false,INSClass);
  EditField(h,v+=vs,100,"Security Prc",Normal,PGBuyerSecurityPrc,false,0);
  EditField(h,v+=vs,100,"PayDeal",Normal,PGBuyerPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Item",Normal,PGBuyerItem,false,INSClass);

  ButtonFrame(h-100,v+=50,250,2,"Seller's Invoice");
  EditField(h,v,100,"Account",Normal,PGSellerAccount,false,AccSClass);
  EditField(h,v+=vs,100,"VAT Code",Normal,PGSellerVATCode,false,VATCodeSClass);

  Tile(5,305,true,"5",PaymentPayDeal);

  EditField(h,v=6,100,"Payment Terms",Normal,PaymentPayDeal,false,PDSClass);
  EditField(h,v+=vs,100,"Account",Normal,PaymentAccount,false,AccSClass);
  EditField(h,v+=vs,100,"VAT Code",Normal,PaymentVATCode,false,VATCodeSClass);
  EditField(h,v+=vs,100,"Object",Normal,PaymentObject,false,ObjSClass);
  EditField(h,v+=vs,100,"Payment Mode",Normal,PaymentMode,false,PMSClass);

  ButtonFrame(h,v+=50,200,2,"Money Transfer Date");
  Checkbox(h,v,0,"Update when creating Payment",MoneyTransferDateVI);
  Checkbox(h,v+=16,0,"Update when Invoices are paid",MoneyTransferDateOP);

  ButtonFrame(h,v+=40,200,3,"Interest based on");
  RadioButton(h,v,0,0,"Start Date",RealInterestFlag);
  RadioButton(h,v+=16,1,0,"Full Disbursement",RealInterestFlag);
  RadioButton(h,v+=16,2,0,"Each Disbursement",RealInterestFlag);

  EndWindow;
  return;
end;

window CredLegalInvNrTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,v,vs,hm;
  Integer f,flipnr;
  
  WindowBegin("Legal Record Numbers",CredLegalInvNrTClass,CGHbl,HBlRecType);
  SetBlid(CredLegalInvNrBlock);
  SetWRect(20,80,900,457);
  Sizeable(-1,-1,0,0);
  h = 8; v = 20; vs = 20;
  h1=24;
  MatrixBegin(h,v,-50,-20,-,499);
  Flip(0);
  MatCol(1,h1,"From Date",0,StartDate,false,PasteCurDate);
  MatCol(1,h1+=80,"To Date",0,EndDate,false,PasteCurDate);
  MatCol(1,h1+=80,"Serie",0,Serie,false,0);
  MatCol(1,h1+=80,"From",0,TSerStart,false,0);
  MatCol(1,h1+=85,"To",0,TSerEnd,false,0);
  Flip(1);
  hm = h1;
  MatCol(1,h1+=125,"Agr. Type",0,CredManType,false,CredManTypeSClass);
  MatCol(1,h1+=125,"Agr. Type Class",0,CredManClass,false,CredManClassSClass);
  MatCol(1,h1+=85,"Register",0,RegType,false,SetSClass);
  MatCol(1,h1+=85,"Selection",0,SelectionType,false,SetSClass);
  Flip(2);
  h1 = hm;
  MatCol(1,h1+=80,"First Inv. Serie",0,FirstInvSerie,false,0);//InvLegalInvSerieSClass
  MatCol(1,h1+=80,"Regular Inv. Serie",0,RegularInvSerie,false,0);
  MatCol(1,h1+=80,"Overdue Inv. Serie",0,OverdueInvSerie,false,0);
  if (UseCompensationInvoices) then begin
    MatCol(1,h1+=80,"Compens. Inv. Serie",0,CompensationInvSerie,false,0);
  end;
  EndMatrix;
  VTab(-35,v,-16,v+=vs,ToolFlip,1,"A");
  VTab(-35,v,-16,v+=vs,ToolFlip,2,"B");
  EndWindow;
end;



window CredFeesMatrixVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,v;
  WindowBegin("Tax Matrix",CredFeesMatrixVClass,CGother,-);
  UseView(CredFeesMatrixVc);
  SetWRect(20,80,400,357);
  Sizeable(-1,-1,0,0);
  AutoSizeWindow(false);
  h = 8; v = 20;
  h1=24;
  HalPushButton(-110,v=5,-10,v+=20,"CredFeesMatrixVClassSave","Save");

  MatrixBegin(8,v+20,-25,-10,-,20);
  Flip(0);
  MatCol(1,h1,"Item",0,ArtCode,false,INSClass);
  MatCol(1,-60,"Sum",0,Sum,false,0);
  EndMatrix;
  EndWindow;
end;


window ProlongSessionLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Prolong Sessions",ProlongSessionLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(ProlongSessionDClass);
  UseView(ProlongSessionVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"SerNr",SerNr,false,SerNr);
  RlCol(100,100,"TransDate",TransDate,false);
  RlCol(170,170,"TransTime",TransTime,false);
  RlCol(226,226,"SalesMan",SalesMan,false);
  RlCol(852,852,"PaidFlag",PaidFlag,false);
  RlCol(948,948,"CredManNr",CredManNr,false);
  SearchField("Search");
  EndWindow;
end;


window ProlongSessionDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Prolong Session",ProlongSessionDClass,CGview,-);
  SetWRect(20,80,600,339);
  Sizeable(-1,-1,0,0);
  UseView(ProlongSessionVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,50,"SerNr",Normal,SerNr,false,);
  EditField(h,v+=vs,50,"TransDate",Normal,TransDate,false,0);
  EditField(h,v+=vs,50,"TransTime",Normal,TransTime,false,0);
  EditField(h,v+=vs,50,"SalesMan",Normal,SalesMan,false,UserSClass);
  EditField(h,v+=vs,50,"PauseDate",Normal,PauseDate,false,0);
  EditField(h,v+=vs,50,"ProlongDate",Normal,ProlongDate,false,0);
  EditField(h,v+=vs,50,"PauseMonths",Normal,PauseMonths,false,0);
  EditField(h,v+=vs,50,"IntRate",Normal,IntRate,false,0);
  EditField(h,v+=vs,50,"ProlongMonths",Normal,ProlongMonths,false,0);
  EditField(h,v+=vs,50,"ProlongWhenPaid",Normal,ProlongWhenPaid,false,0);
  EditField(h,v+=vs,50,"PaidFlag",Normal,PaidFlag,false,0);
  EditField(h,v+=vs,50,"CredManNr",Normal,CredManNr,false,0);
  EditField(h,v+=vs,50,"RecalcSchedule",Normal,RecalcSchedule,false,0);
  EditField(h,v+=vs,50,"Extra Value",Normal,AddValue,false,0);
  EndWindow;
end;

window CredLegalNrSerNrSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v;

  WindowBegin("Paste Legal Serial Number",CredLegalNrSerNrSClass,CGother,RcType);
  SetWRect(64,80,400,298);
  DataList(0,0,-1,-1,"DLPasteCredSerNrAccount");
  DataListColumn(1,6,-1,AdjLeft,"DLSerNr","Nr",M4Str);
  EndWindow;
end;

window SchedYesNoWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v; 

  WindowBegin("Generate Schedule",SchedYesNoWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,300,220);
  AutoSizeWindow(false);  
  StaticText(50,26,"Already registered. Overwrite?",false);
  HalPushButton(-260,-30,-160,-10,"SchedYesNoWClassProceed","Yes");
  HalPushButton(-120,-30,-20,-10,"SchedYesNoWClassClose","No");
  EndWindow;

  return;
end;

window TerminateYesNoWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs; 

  vs = 20;
  WindowBegin("Terminate Agreement",TerminateYesNoWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,300,140);
  AutoSizeWindow(false);  
  EditFieldTL(100,v=6,90,"Date",M4Date,Normal,0,d1,false,PasteCurDate);
  HalPushButton(-260,v+=vs,-160,v+vs,"TerminateYesNoWClassProceed","Yes");
  HalPushButton(-120,v,-20,v+vs,"SchedYesNoWClassClose","No");
  EndWindow;

  return;
end;

window CredManBuyoutWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs; 

  vs = 20;
  WindowBegin("Buyout Agreement",CredManBuyoutWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,300,140);
  AutoSizeWindow(false);  
  EditFieldTL(100,v=6,90,"Date",M4Date,Normal,0,d1,false,PasteCurDate);
  HalPushButton(100,v+=vs,200,v+vs,"CredManBuyoutWClassProceed","Confirm");
  EndWindow;

  return;
end;


window SellAgreementWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v; 

  WindowBegin("Terminate Agreement",SellAgreementWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,300,180);
  AutoSizeWindow(false);  
  EditFieldTL(150,v=6,90,"Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(150,v+=20,90,"Buyer",M4Code,Normal,20,f1,false,CUSClass);
  EditFieldTL(150,v+=20,90,"Percentage of Loan",M4Val,Normal,0,vals0,false,0);
  HalPushButton(-260,-30,-160,-10,"SellAgreementWClassProceed","Sell");
  HalPushButton(-120,-30,-20,-10,"SchedYesNoWClassClose","No");
  EndWindow;

  return;
end;



window CMPropertyLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Propertys",CMPropertyLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CMPropertyDClass);
  UseView(CMPropertyVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol(100,100,"License Plate No.",OfficialSerNr,false);
  RlCol(230,230,"Name",Addr0,false);
  SearchField("Search");
  EndWindow;
end;

window CMPropertySClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Propertys",CMPropertySClass,CGslist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CMPropertyDClass);
  UseView(CMPropertyVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol(100,100,"Official No.",OfficialSerNr,false);
  RlCol(230,230,"Name",Addr0,false);
  SearchField("Search");
  EndWindow;
end;

window CMPropertyDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2,h3,vm;
  Integer type;
  record CMPropertyVc Propr;

  if (CurWindow>0) then begin
    GetWindowRecord(CurWindow,Propr);
    type = Propr.TypeFlag;
  end;
  WindowBegin("Property",CMPropertyDClass,CGview,-);
  if (type==2) then begin
    SetWRect(20,80,650,649);
  end else begin
    SetWRect(20,80,650,619);
  end;
  AutoSizeWindow(false);
  DynamicWindow;
  UseView(CMPropertyVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,100,"Ser. No.",Normal,SerNr,false,);
  if (type==1) then begin
    EditField(h2=350,v,150,"License Plate No.",Normal,OfficialSerNr,false,0);
  end else begin
    EditField(h2=350,v,150,"Official No.",Normal,OfficialSerNr,false,0);
  end;
  EditField(h,v+=vs,100,"Type",Normal,Type,false,CMPropertyTypeSClass);
  EditField(h2,v,150,"Type Name",Normal,TypeName,false,0);
  EditField(h,v+=vs,-40,"Name",Normal,Addr0,false,0);
  if (type==1) then begin
    EditField(h,v+=vs,-40,"VIN Number",Normal,SerialNo,false,0);
  end else begin
    EditField(h,v+=vs,-40,"Serial No.",Normal,SerialNo,false,0);
  end;
  if (type==2) then begin
    EditField(h,v+=vs,100,"Land Area",Normal,EstateAreaSize,false,0);
    EditField(h2,v,100,"Land Unit",Normal,EstateUnit,false,UnitSClass);
    EditField(h,v+=vs,100,"Living Area",Normal,LivingAreaSize,false,0);
    EditField(h2,v,100,"Living Unit",Normal,LivingUnit,false,UnitSClass);
    CheckBox(h2+120,v,0,"Usage Permission",UsagePermit);
  end;
  if (type==2) then begin
    EditField(h,v+=vs,150,"Country",Normal,Addr1,false,CountrySClass);
    EditField(h,v+=vs,150,"City",Normal,Addr2,false,0);
    EditField(h,v+=vs,150,"Address",Normal,Addr3,false,0);
    EditField(h,v+=vs,150,"ZIP",Normal,Addr4,false,0);
    EditField(h,v+=vs,100,"Reported Value",Normal,RepVal,false,0);
  end else begin
    if (type==0) then begin
      EditField(h,v+=vs,100,"Manufacturer",Normal,ProducerName,false,0);
      EditField(h,v+=vs,100,"Manufacture Date",Normal,ProductionDate,false,PasteCurDate);
    end else begin
      EditField(h,v+=vs,100,"First Reg. Date",Normal,CarFirstRegDate,false,0);
    end;
    EditField(h,v+=vs,100,"Reported Val. wo VAT",Normal,RepVal,false,0);
    EditField(h2,v,100,"VAT",Normal,RepValVAT,false,0);
    EditField(h3=h2+150,v,-40,"Total",Normal,RepValTot,false,0);
  end;
  EditField(h,v+=vs,100,"Evaluator",Normal,Evaluator,false,CUSClass);
  EditField(h2,v,-40,"Evaluator Name",Normal,EvaluatorName,false,0);
  EditField(h,v+=vs,100,"Evaluated Value",Normal,EvalVal,false,0);
  EditField(h2,v,100,"Evaluation Date",Normal,EvalDate,false,PasteCurDate);
  EditField(h,v+=vs,100,"Insurance Company",Normal,InsuranceCompany,false,CUSClass);
  EditField(h2,v,-40,"Name",Normal,InsuranceName,false,0);
  EditField(h,v+=vs,100,"Insurance Type",Normal,InsuranceType,false,CMInsuranceTypeSClass);
  vm = v;
  if (type!=2) then begin
    ButtonFrame(h2,v+=20,150,2,"Age");
    RadioButton(h2,v,0,0,"New",AgeType);
    RadioButton(h2,v+=16,1,0,"Used",AgeType); 
  end;
  EditField(h,v=vm+vs,100,"Insured Value",Normal,InsuredVal,false,0);
  EditField(h,v+=vs,100,"Insured Until",Normal,InsuredUntil,false,PasteCurDate);
  StaticText(10,v+=vs+vs,"Comments",false);
  TextField(10,v+=10,-20,60,Math2,0);
  v = v + vs+50;
  StaticText(10,v+=vs,"Owners",false);
  if (type==2) then begin
    MatrixBegin(10,v+=vs,-40,560,-,99);
  end else begin
    MatrixBegin(10,v+=vs,-40,490,-,99);
  end;
  MatCol(1,24,"Contact",0,OwnerCode,false,ContactCUSClass);
  MatCol(1,104,"Name",0,OwnerName,false,0);
  MatCol(1,-154,"Shares %",0,SharesPrc,false,0);
  MatCol(1,-84,"Shares Part",0,SharesVal,false,0);
  EndMatrix;
  EndWindow;
end;


window CMPropertyTypeLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Classifications",CMPropertyTypeLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CMPropertyTypeDClass);
  UseView(CMPropertyTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CMPropertyTypeSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Agreement Classification",CMPropertyTypeSClass,CGslist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CMPropertyTypeDClass);
  UseView(CMPropertyTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CMPropertyTypeDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Agreement Classification",CMPropertyTypeDClass,CGview,-);
  SetWRect(20,80,400,239);
  UseView(CMPropertyTypeVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,100,"Code",Normal,Code,false,);
  EditField(h,v+=vs,-40,"Comment",Normal,Comment,false,0);
  ButtonFrame(h,v+=40,150,3,"Type");
  RadioButton(h,v,1,0,"Vehicles",TypeFlag);
  RadioButton(h,v+=16,2,0,"Real Estate",TypeFlag); 
  RadioButton(h,v+=16,0,0,"Other",TypeFlag); 

  ButtonFrame(h,v+=40,150,2,"Unique Serial No");
  RadioButton(h,v,1,0,"Yes",UniqueSerNr);
  RadioButton(h,v+=16,0,0,"No",UniqueSerNr); 
  EndWindow;
end;

window CMInsuranceTypeLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Classifications",CMInsuranceTypeLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CMInsuranceTypeDClass);
  UseView(CMInsuranceTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CMInsuranceTypeSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Agreement Classification",CMInsuranceTypeSClass,CGslist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CMInsuranceTypeDClass);
  UseView(CMInsuranceTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Code",Code,false,Code);
  RlCol(134,134,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window CMInsuranceTypeDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Agreement Classification",CMInsuranceTypeDClass,CGview,-);
  SetWRect(20,80,400,239);
  UseView(CMInsuranceTypeVc);
  vs=20; h=120; vs2=16; hm=-100;
  EditField(h,v=6,100,"Code",Normal,Code,false,);
  EditField(h,v+=vs,-40,"Comment",Normal,Comment,false,0);
  EndWindow;
end;


window CredManPropertiesDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  Boolean pledge;
  Integer type;
  string 255 title;

  if (CurWindow>0) then begin
    type = StringToInt(GetWindowString(CurWindow,"type"));
  end;
      
  switch (type) begin
    case 2: title = "Assets";
    case 3: title = "Pledges";
    otherwise
      title = "Properties";
  end;
  WindowBegin(title,CredManPropertiesDClass,CGview,-);
  SetWRect(20,80,900,339);
  DynamicWindow;
  UseView(CredManPropertiesVc);
  vs=20; h=120; vs2=16; hm=-100;
  MatrixBegin(10,20,-40,-20,-,99);
  MatCol(1,24,"Property",0,Property,false,CMPropertySClass);
  MatCol(1,104,"Name",0,Addr0,false,0);
  if (type==3) then begin
    MatCol(1,-530,"ID",0,OfficialSerNr,false,0);
    MatCol(1,-440,"Reported Value",0,RepVal,true,0);
    MatCol(1,-350,"Evaluated Value",0,EvalVal,true,0);
    MatCol(1,-260,"Pledge Type",0,PledgeType,false,SetSClass);
    MatCol(1,-170,"Pledge Val",0,PledgeVal,true,0);
    MatCol(1,-80,"Pledge Date",0,PledgeDate,false,PasteCurDate);
  end else begin
    if (type==2) then begin
      MatCol(1,-380,"VIN Number",0,SerialNo,false,0);
      MatCol(1,-270,"License Plate No.",0,OfficialSerNr,false,0);
    end else begin
      MatCol(1,-260,"ID",0,OfficialSerNr,false,0);
    end;
    MatCol(1,-170,"Reported Value",0,RepVal,true,0);
    MatCol(1,-80,"Evaluated Value",0,EvalVal,true,0);
  end;
  EndMatrix;
  EndWindow;
end;


window LoanAppDebtsDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  
  WindowBegin("Debts",LoanAppDebtsDClass,CGview,-);
  SetWRect(20,80,900,339);
  DynamicWindow;
  UseView(LoanAppDebtsVc);
  vs=20; h=120; vs2=16; hm=-100;
  MatrixBegin(10,20,-40,-20,-,99);
  MatCol(1,24,"Lender",0,LenderCode,false,B2BLoanApp_CUSClass);
  MatCol(1,104,"Name",0,Addr0,false,0);
  MatCol(1,-530,"Monthly Rate",0,MonthlyRate,true,0);
  MatCol(1,-440,"Monthly Payment",0,MonthlyPayment,true,0);
  MatCol(1,-350,"End Date",0,EndDate,true,PasteCurDate);
  MatCol(1,-280,"Amount",0,Amount,true,0);
  MatCol(1,-200,"Debt Type",0,DebtType,false,0);//SetSClass???
  MatCol(1,-80,"Source",0,Source,false,SourceSClass);//
  EndMatrix;
  EndWindow;
end;

window IVSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real pos;
  Boolean acptf;
  
  WindowBegin("Invoices",IVSClass,CGslist,-);
  pos = 820;
  SetWRect(20,80,pos,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(IVDClass);
  UseView(IVVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"No.",SerNr,false,SerNr);
  RlColKey(79,79,"OK",OKFlag,false,OKFlag);
  RlColKey(111,111,"Invoice Date",InvDate,false,InvDate);
  RlColKey(191,191,"Official No.",OfficialSerNr,false,OfficialSerNr);
  RlColKey(301,301,"Order No.",OrderNr,false,OrderNr);
  pos = 381;
  RlColKey(pos,pos,"Customer",CustCode,false,CustCode); pos = pos + 60;
  RlColKey(pos,pos,"Name",Addr0,false,Name);
  RlColKey(-130,-130,"Total",Sum4,true,Sum4);
  RlCol(-60,-60,"",CredMark,true);
  RlCol(-40,-40,"Cur.",CurncyCode,true);
  SearchField("Search");
  EndWindow;
end;


window CredMan1LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Loan Agreements",CredMan1LClass,CGmlist,-);
  ShowCredManLClassWindow(1);
  EndWindow;
end;

window CredMan2LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Leasing Agreements",CredMan2LClass,CGmlist,-);
  ShowCredManLClassWindow(2);
  EndWindow;
end;

window CredMan3LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Martgage Agreements",CredMan3LClass,CGmlist,-);
  ShowCredManLClassWindow(3);
  EndWindow;
end;

window CredMan4LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Factoring Agreements",CredMan4LClass,CGmlist,-);
  ShowCredManLClassWindow(4);
  EndWindow;
end;

window CredMan5LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Payment Guarantee Agreements",CredMan5LClass,CGmlist,-);
  ShowCredManLClassWindow(5);
  EndWindow;
end;

window CredMan6LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Balloon Agreements",CredMan6LClass,CGmlist,-);
  ShowCredManLClassWindow(6);
  EndWindow;
end;

window CredMan7LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Credit Line Agreements",CredMan7LClass,CGmlist,-);
  ShowCredManLClassWindow(7);
  EndWindow;
end;

window CredMan8LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Credit Limit Agreements",CredMan8LClass,CGmlist,-);
  ShowCredManLClassWindow(8);
  EndWindow;
end;

window CredManLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Credit Agreements",CredManLClass,CGmlist,-);
  ShowCredManLClassWindow(0);
  EndWindow;
end;


window RecalcInterestWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v; 

  WindowBegin("Recalculate Interest",RecalcInterestWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,300,220);
  AutoSizeWindow(false);  
  StaticText(50,26,"Interest not recalculated",false);
  HalPushButton(-260,-30,-160,-10,"RecalcInterestWClassProceed","Recalculate");
  HalPushButton(-120,-30,-20,-10,"RecalcInterestWClassSave","OK");
  EndWindow;

  return;
end;


window InvLegalInvSerieSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Paste Serie",InvLegalInvSerieSClass,CGother,HBlRecType);
  SetWRect(240,80,600,348);
  StringList(9,9,-19,-19);
  EndWindow;
end;


window InvegaReportTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Invega Report Settings",InvegaReportTClass,CGSbl,-);
  SetBlid(InvegaReportBlock);
  SetWRect(20,80,500,298);
  vs=20; h=250; vs2=16; hm=-100;
  EditField(h,v=6,100,"Company Type Classification Type",Normal,CompTypeClass,false,CTypeSClas);
  EditField(h,v+=vs,100,"EVRK Code Classification Type",Normal,EVKRClassType,false,CTypeSClas);
  EndWindow;
end;

window CMDateTextTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Date in Text",CMDateTextTClass,CGSbl,-);
  SetBlid(CMDateTextBlock);
  SetWRect(20,80,700,298);
  vs=20; h=150; vs2=16; hm=-100;
  ButtonFrame(h-130,v=30,250,8,"Date 1");
  EditField(h,v,100,"Year Language",Normal,YearLang1,false,LangSClass);
  EditField(h,v+=vs,100,"Year Min. Language",Normal,YearLangMin1,false,LangSClass);
  EditField(h,v+=vs,100,"Year Currency",Normal,YearCur1,false,CurncyCodeSClass);
  EditField(h,v+=vs,100,"Month Language",Normal,MonthLang1,false,LangSClass);
  EditField(h,v+=vs,100,"Month Currency",Normal,MonthCur1,false,CurncyCodeSClass);
  EditField(h,v+=vs,100,"Day Language",Normal,DayLang1,false,LangSClass);
  EditField(h,v+=vs,100,"Year Currency",Normal,DayCur1,false,CurncyCodeSClass);
  h=450;
  ButtonFrame(h-130,v=30,250,8,"Date 2");
  EditField(h,v,100,"Year Language",Normal,YearLang2,false,LangSClass);
  EditField(h,v+=vs,100,"Year Min. Language",Normal,YearLangMin2,false,LangSClass);
  EditField(h,v+=vs,100,"Year Currency",Normal,YearCur2,false,CurncyCodeSClass);
  EditField(h,v+=vs,100,"Month Language",Normal,MonthLang2,false,LangSClass);
  EditField(h,v+=vs,100,"Month Currency",Normal,MonthCur2,false,CurncyCodeSClass);
  EditField(h,v+=vs,100,"Day Language",Normal,DayLang2,false,LangSClass);
  EditField(h,v+=vs,100,"Year Currency",Normal,DayCur2,false,CurncyCodeSClass);
  EndWindow;
end;

window CMPrintConstantsTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Printout Constants",CMPrintConstantsTClass,CGSbl,-);
  SetBlid(CMPrintConstantsBlock);
  SetWRect(20,80,700,298);
  vs=20; h=170; vs2=16; hm=-100;
  
  Tile(0,20,false,"",SuretyYes);
  TileButton(1,"Surety");  
  TileButton(2,"BOE");  
  TileButton(3,"Properties");  
  TileButton(4,"Schedule");  
  TileButton(5,"Invoices");  
  TileButton(6,"Subordination");  
  TileButton(7,"Agreements");  

  Tile(1,700,false,"1",SuretyYes);
  EditField(h,v=6,140,"Yes",Normal,SuretyYes,false,0);
  EditField(h,v+=vs,140,"No",Normal,SuretyNo,false,0);
  EditField(h,v+=vs,140,"If Yes, then",Normal,SuretyYes2,false,0);
  Tile(2,700,false,"2",BOEYes);
  EditField(h,v=6,140,"Yes",Normal,BOEYes,false,0);
  EditField(h,v+=vs,140,"No",Normal,BOENo,false,0);
  EditField(h,v+=vs,140,"If Yes, then",Normal,BOEYes2,false,0);
  EditField(h,v+=vs,140,"Amount Value in Text",Normal,BOEValueLangCode,false,LangNrSClass);
  
  Tile(3,700,false,"3",PropertyYes);
  EditField(h,v=6,140,"Yes (Mortgage)",Normal,PropertyYes,false,0);
  EditField(h,v+=vs,140,"No",Normal,PropertyNo,false,0);
  EditField(h,v+=vs,140,"If Yes, then",Normal,PropertyYes2,false,0);
  EditField(h,v+=30,140,"Yes (Insurance)",Normal,InsuranceYes,false,0);
  EditField(h,v+=vs,140,"No",Normal,InsuranceNo,false,0);
  EditField(h,v+=vs,140,"If Yes, then",Normal,InsuranceYes2,false,0);


  Tile(4,700,false,"4",ScheduleYes);
  EditField(h,v=6,140,"Yes",Normal,ScheduleYes,false,0);
  EditField(h,v+=vs,140,"No",Normal,ScheduleNo,false,0);
  EditField(h,v+=vs,140,"If Yes, then",Normal,ScheduleYes2,false,0);
  EditField(h,v+=vs,140,"Reimburs. Items",Normal,ReimbItems,false,INSClass);
  EditField(h+280,v,140,"Reimburs. Lang.",Normal,ReimbLanguages,false,LangSClass);
  Tile(5,50,false,"5",InvoiceText);
  EditField(h,v=6,140,"Netting Text",Normal,InvoiceText,false,0);
  EditField(h,v+=vs,140,"Company Reg. No. Comment",Normal,RegNrComment,false,0);

  Tile(6,60,false,"6",SubordinationYes);
  EditField(h,v=6,140,"Yes",Normal,SubordinationYes,false,0);
  EditField(h,v+=vs,140,"No",Normal,SubordinationNo,false,0);

  Tile(7,60,false,"7",FullValText);
  EditField(h,v=6,140,"Full Value Text",Normal,FullValText,false,LangNrSClass);
//  EditField(h,v+=vs,140,"Separator",Normal,Separator,false,LangNrSClass);
  EditField(h,v+=vs,140,"Decimal Value Text",Normal,DecValText,false,LangNrSClass);
  EditField(h,v+=vs,140,"Currency",Normal,ValCrncyCode,false,CurncyCodeSClass);

  EditField(h,v+=vs,140,"Company Prefix",Normal,CompPrefix,false,0);
  EditField(h,v+=vs,140,"Person Prefix",Normal,PersPrefix,false,0);
	EditField(h,v+=vs,140,"Digital",Normal,AgrDigital,false,0);
	EditField(h,v+=vs,140,"Not Digital",Normal,AgrNotDigital,false,0);

  EndWindow;
end;


window InvegaFundRClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("Specify Governmental Fund Report",InvegaFundRClass,CGRcW,RcType);
  SetWRect(20,80,440,150);
  PeriodField(h=140,v=6,"Period");
  EditFieldTL(h,v+=20,150,"Type",M4UStr,Normal,90,f1,false,CredManTypeSClass);
  EditFieldTL(h,v+=20,150,"Customer",M4UStr,Normal,40,f2,false,CUSClass);
  EditFieldTL(h,v+=20,150,"Classifications",M4UStr,Normal,255,f3,false,CredManClassSClass);
  EditFieldTL(h,v+=20,150,"Manager",M4Code,Normal,255,f4,false,UserSClass);
  EditFieldTL(h,v+=20,150,"Type Classifications",M4UStr,Normal,255,f5,false,CredManClassSClass);
  ButtonFrame(h,v+=40,150,2,"Type");
  RadioButton(h,v,0,0,"Invega Fund Report",ArtMode);
  RadioButton(h,v+=16,1,0,"Garfondas Fund Report",ArtMode); 
  
  EndWindow;
end;

window BOESuretyDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;

  WindowBegin("Surety",BOESuretyDClass,CGview,-);
  SetWRect(20,80,850,359);
  AutoSizeWindow(false);
  UseView(BOESuretyVc);

  StaticText(h=70,v=15,"Contact Code",false);
  StaticText(h+110,v,"Name",false);
  StaticText(h+220,v,"Date",false);
  StaticText(h+300,v,"Amount",false);
  StaticText(h+390,v,"Signing Pers.",false);
  StaticText(h+510,v,"Position",false);
  v = v + 30;
  
  EditField(h=80,v,60,"Surety 1",Normal,SuretyProvider1,false,B2BLoanApp_CUSClass);
  EditField(h+70,v,100,"",Normal,Surety1Name,false,0);
  EditField(h+180,v,80,"",Normal,Surety1Date,false,PasteCurDate);
  EditField(h+270,v,80,"",Normal,Surety1Amount,true,0);
  EditField(h+360,v,100,"",Normal,Surety1Signer,false,B2BLoanApp_ContactSClass);
  EditField(h+470,v,100,"",Normal,Surety1Position,false,JobTitleSClass);
  HalPushButtonTag(h+600,v,h+700,v+20,"BOESuretyDClassOpenConditions","Conditions","1");
  v = v + 30;

  EditField(h,v,60,"Surety 2",Normal,SuretyProvider2,false,B2BLoanApp_CUSClass);
  EditField(h+70,v,100,"",Normal,Surety2Name,false,0);
  EditField(h+180,v,80,"",Normal,Surety2Date,false,PasteCurDate);
  EditField(h+270,v,80,"",Normal,Surety2Amount,true,0);
  EditField(h+360,v,100,"",Normal,Surety2Signer,false,B2BLoanApp_ContactSClass);
  EditField(h+470,v,100,"",Normal,Surety2Position,false,JobTitleSClass);
  HalPushButtonTag(h+600,v,h+700,v+20,"BOESuretyDClassOpenConditions","Conditions","2");
  v = v + 30;

  EditField(h,v,60,"Surety 3",Normal,SuretyProvider3,false,B2BLoanApp_CUSClass);
  EditField(h+70,v,100,"",Normal,Surety3Name,false,0);
  EditField(h+180,v,80,"",Normal,Surety3Date,false,PasteCurDate);
  EditField(h+270,v,80,"",Normal,Surety3Amount,true,0);
  EditField(h+360,v,100,"",Normal,Surety3Signer,false,B2BLoanApp_ContactSClass);
  EditField(h+470,v,100,"",Normal,Surety3Position,false,JobTitleSClass);
  HalPushButtonTag(h+600,v,h+700,v+20,"BOESuretyDClassOpenConditions","Conditions","3");
  v = v + 30;

  EditField(h,v,60,"Surety 4",Normal,SuretyProvider4,false,B2BLoanApp_CUSClass);
  EditField(h+70,v,100,"",Normal,Surety4Name,false,0);
  EditField(h+180,v,80,"",Normal,Surety4Date,false,PasteCurDate);
  EditField(h+270,v,80,"",Normal,Surety4Amount,true,0);
  EditField(h+360,v,100,"",Normal,Surety4Signer,false,B2BLoanApp_ContactSClass);
  EditField(h+470,v,100,"",Normal,Surety4Position,false,JobTitleSClass);
  HalPushButtonTag(h+600,v,h+700,v+20,"BOESuretyDClassOpenConditions","Conditions","4");
  v = v + 30;

  EditField(h,v,60,"Surety 5",Normal,SuretyProvider5,false,B2BLoanApp_CUSClass);
  EditField(h+70,v,100,"",Normal,Surety5Name,false,0);
  EditField(h+180,v,80,"",Normal,Surety5Date,false,PasteCurDate);
  EditField(h+270,v,80,"",Normal,Surety5Amount,true,0);
  EditField(h+360,v,100,"",Normal,Surety5Signer,false,B2BLoanApp_ContactSClass);
  EditField(h+470,v,100,"",Normal,Surety5Position,false,JobTitleSClass);
  HalPushButtonTag(h+600,v,h+700,v+20,"BOESuretyDClassOpenConditions","Conditions","5");
  v = v + 30;

  EditField(h,v,60,"Surety 6",Normal,SuretyProvider6,false,B2BLoanApp_CUSClass);
  EditField(h+70,v,100,"",Normal,Surety6Name,false,0);
  EditField(h+180,v,80,"",Normal,Surety6Date,false,PasteCurDate);
  EditField(h+270,v,80,"",Normal,Surety6Amount,true,0);
  EditField(h+360,v,100,"",Normal,Surety6Signer,false,B2BLoanApp_ContactSClass);
  EditField(h+470,v,100,"",Normal,Surety6Position,false,JobTitleSClass);
  HalPushButtonTag(h+600,v,h+700,v+20,"BOESuretyDClassOpenConditions","Conditions","6");
  v = v + 30;

  EndWindow;

  return;
end;

window GenOverdueInvVClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  record RcVc RepSpec;
  WindowBegin("Specify Overdue Invoices",GenOverdueInvVClass,CGMnt,RcType);
  SetWRect(64,80,445,95);
  h = 150; v = 6; vs = 20;
  DynamicWindow;
  
  if (CurWindow>0) then begin
    GetWindowRecord(CurWindow,RepSpec);
  end;
  if (RepSpec.ArtMode==0) then begin
    PeriodField(h,v,"Period"); 
  end else begin
    EditFieldTL(h,v,120,"Until Date",M4Date,Normal,0,d1,false,PasteCurDate);
  end;
  EditFieldTL(h,v+=vs,120,"Agreement",M4Long,Normal,0,long1,false,CredManSClass);
  EditFieldTL(h,v+=vs,120,"Classification",M4Code,Normal,20,f1,false,CredManClassSClass);
  EditFieldTL(h,v+=vs,120,"Agreement Type",M4Code,Normal,20,f2,false,CredManTypeSClass);
  ButtonFrame(h,v+=40,150,2,"Calculation");
  RadioButton(h,v,0,0,"Based on Period",ArtMode);
  RadioButton(h,v+=16,1,0,"Since Last Overdue Invoice",ArtMode); 
  EndWindow;

end;

window CredManTestLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Testss",CredManTestLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManTestDClass);
  UseView(CredManTestVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Comment",Comment,false,Comment);
  RlCol(74,74,"Type",Type,false);
  RlCol(204,204,"Rate",IntRate,false);
  RlCol(334,334,"Months",Months,false);
  RlCol(430,430,"Start Date",startDate,false);
  SearchField("Search");
  EndWindow;
end;

window CredManTestDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2,vm,vm2;
  WindowBegin("Agreement Tests",CredManTestDClass,CGview,-);
  SetWRect(20,80,840,339);
  Sizeable(-1,-1,0,0);
  UseView(CredManTestVc);
  vs=20; h=160; vs2=16; hm=-100;h2 = 430;
  EditField(h,v=6,-40,"Comment",Normal,Comment,false,);
  EditField(h,v+=vs,120,"Based On",Normal,BasedOn,false,CredManSClass);
  EditField(h,v+=vs,120,"Customer",Normal,CustCode,false,CUSClass);
  EditField(h,v+=vs,120,"Type",Normal,Type,false,CredManTypeSClass);vm = v;
  EditField(h,v+=vs,90,"Date",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,50,"Rate",Normal,IntRate,false,0);
  CheckBox(h+65,v,0,"Annual",AnnualRate);
  EditField(h,v+=vs,50,"Months",Normal,Months,false,0);
  EditField(h,v+=vs,50,"Sum",Normal,InvSum4,false,0);
  EditField(h,v+=vs,50,"Pay Deal",Normal,PayDeal,false,PDSClass);
  EditField(h,v+=vs,90,"Start Date",Normal,startDate,false,PasteCurDate);
  EditField(h,v+=vs,90,"Money Transfer Date",Normal,MoneyTransferDate,false,PasteCurDate);
  
  EditField(h,v+=vs,50,"Deposit Sum",Normal,DepositSum,false,0);
  EditField(h,v+=vs,50,"Additional Downp. Months",Normal,ExtraDepositMonths,false,0);
  EditField(h,v+=vs,50,"Additional Downp. Sum",Normal,ExtraDepositSum,true,0);
  vm2 = v;
  EditField(h2,v=vm,50,"Principle Delay Months",Normal,PrincipleDelayMonths,false,0);
  EditField(h2,v+=vs,50,"Principle Delay Interest",Normal,PrincipleDelayInterest,false,0);
  EditField(h2,v+=vs,50,"Max Monthly Payment",Normal,MaxMonthlyPayment,false,0);
  EditField(h2,v+=vs,50,"Last Month Principle",Normal,LastMonthPrinc,false,0);
  EditField(h2,v+=vs,50,"Monthly Payment Day",Normal,MonthlyPaymentDay,false,0);
  EditField(h2,v+=vs,50,"Prolong Months",Normal,ProlongMonths,false,0);
  EditField(h2,v+=vs,90,"Prolong Date",Normal,ProlongDate,false,0);
  EditField(h2,v+=vs,90,"Pause Date",Normal,PauseDate,false,0);
  EditField(h2,v+=vs,50,"Pause Months",Normal,PauseMonths,false,0);
  if (vm2<v) then begin
    vm2 = v;
  end;
  MatrixBegin(10,v=vm2+40,-40,-40,-,999);
  MatCol(1,24,"Inv. Date",0,InvDate,false,0);
  MatCol(1,100,"Period From",0,FromDate,false,0);
  MatCol(1,165,"Period To",0,ToDate,false,0);
  MatCol(1,240,"Downpmnt",0,Deposit,true,0);
  MatCol(1,310,"Principle",0,Principle,true,0);
  MatCol(1,380,"Interest",0,Interest,true,0);
  MatCol(1,450,"Fees",0,Fees,true,0);
  MatCol(1,524,"VAT",0,VATVal,true,0);
  MatCol(1,-180,"Total",0,Total,true,0);
  MatCol(1,-90,"Balance",0,Balance,true,0);
  InsertRowTest;
  EndWindow;
end;

window CredManAccLCLass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Testss",CredManAccLCLass,CGmlist,-);
  SetWRect(20,80,560,298);
  SpawnClass(CredManAccDCLass);
  UseView(CredManAccVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Type",CredManType,false,CredManType);
  RlCol(124,124,"Category",CustCat,false);
  RlCol(224,224,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;


window CredManAccDCLass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vs,vm;
  vs = 20;
  WindowBegin("Account",CredManAccDCLass,CGview,-);
  UseView(CredManAccVc);
  SetWRect(64,80,599,475);
  EditField(h=145,v=6,100, "Type",Normal,CredManType,false,CredManTypeSClass);
  EditField(h,v+=vs,100, "Object",Normal,Objects,false,ObjSClass);
  EditField(h,v+=vs,100, "Customer Category",Normal,CustCat,false,CCatSClass);
  EditField(h,v+=vs,-40,"Name",Normal,Comment,false,0);
  EditField(h,v+=vs,100,"P/L Debit Account",Normal,PLDebitAcc,false,AccSClass);
  EditField(h,v+=vs,100,"P/L Credit Account",Normal,PLCreditAcc,false,AccSClass);
  EditField(h,v+=vs,100,"Control Account - short",Normal,ControlAccShort,false,AccSClass);
  EditField(h,v+=vs,100,"Control Account - long",Normal,ControlAccLong,false,AccSClass);
  EditField(h,v+=vs,100,"Debtors Account",Normal,DebtorsAcc,false,AccSClass);

  MatrixBegin(4,v=v+40,-32,420,-,99);
  MatCol(1,24,"Item",0,ArtCode,false,INSClass);
  MatCol(1,134,"Debit Account",0,DebitAcc,false,AccSClass);
  MatCol(1,284,"Credit Account",0,CreditAcc,false,AccSClass);
  MatCol(1,-100,"N/L Accrual",0,PeriodCode,false,AutSimPerSClass);
  EndMatrix;

  EndWindow;
end;

window CredManMoneyRecDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;

  WindowBegin("Money Receivers",CredManMoneyRecDClass,CGview,-);
  SetWRect(20,80,760,339);
  DynamicWindow;
  UseView(CredManMoneyRecVc);
  vs=20; h=120; vs2=16; hm=-100;
  MatrixBegin(0,16,-16,-50,-,20);
  MatCol(1,24,"Customer",0,CustCode,false,CUSClass);
  MatCol(1,120,"Name",0,CustName,false,0);
  MatCol(1,-160,"Amount %",0,AmountPrc,true,0);
  MatCol(1,-80,"Amount",0,AmountVal,true,0);
  InsertRowTest;
  DeleteRowTest;
  EndMatrix;
  EditField(-90,-30,80,"Total",ViewOnly,Total,true,0);
  EndWindow;
end;

window CMInterfaceSetTClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;

  WindowBegin("Credit Management Settings",CMInterfaceSetTClass,CGSbl,-);
  SetBlid(CMInterfaceSetBlock);
  SetWRect(20,80,670,298);
  Sizeable(-1,-1,0,0);
  h = 100;
  vs = 20;
  if (HasBalloonLoanType) then begin//stupid workaround because EndFrame doens't work here
    ButtonFrame(h,v=40,150,9,"Default Loan Type");
  end else begin
    ButtonFrame(h,v=40,150,8,"Default Loan Type");
  end;
  RadioButton(h,v,0,0,"Not set",DefCredManLoanType);
  RadioButton(h,v+=16,1,0,"Loan",DefCredManLoanType); 
  RadioButton(h,v+=16,2,0,"Leasing",DefCredManLoanType); 
  RadioButton(h,v+=16,3,0,"Mortgage",DefCredManLoanType); 
  RadioButton(h,v+=16,4,0,"Factoring",DefCredManLoanType); 
  RadioButton(h,v+=16,5,0,"Payment Grnt.",DefCredManLoanType); 
  if (HasBalloonLoanType) then begin
    RadioButton(h,v+=16,6,0,"Balloon",DefCredManLoanType); 
  end;
  RadioButton(h,v+=16,7,0,"Credit Line",DefCredManLoanType); 
  RadioButton(h,v+=16,8,0,"Credit Limit",DefCredManLoanType); 

  CheckBox(h,v+=30,0,"Display Loan",ShowLoanType1);
  CheckBox(h,v+=16,0,"Display Leasing",ShowLoanType2);
  CheckBox(h,v+=16,0,"Display Mortgage",ShowLoanType3);
  CheckBox(h,v+=16,0,"Display Factoring",ShowLoanType4);
  CheckBox(h,v+=16,0,"Display Payment Grnt.",ShowLoanType5);
  if (HasBalloonLoanType) then begin
    CheckBox(h,v+=16,0,"Display Balloon",ShowLoanType6);
  end;
  CheckBox(h,v+=16,0,"Display Credit Line",ShowLoanType7);
  CheckBox(h,v+=16,0,"Display Credit Limit",ShowLoanType8);

  CheckBox(h,v+=30,0,"Show VAT Data",ShowVAT);
  CheckBox(h,v+=vs,0,"Show 'Int. based on Money Transfer'",ShowRealInterestFlag);
  CheckBox(h,v+=vs,0,"Use Days In Month in Agreement",UseCredManDaysInMonth);
  
  
  EndWindow;
end;

window CredManChangeLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Changes",CredManChangeLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManChangeDClass);
  UseView(CredManChangeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlCol(70,70,"Agr. No.",CredManNr,false);
  RlCol(146,146,"Date",TransDate,false);
  RlCol(222,222,"Prol. Months",ProlongMonths,false);
  RlCol(300,300,"Pause Months",PauseMonths,false);
  RlCol(-180,-180,"Rate",IntRate,false);
  RlCol(-130,-130,"Ovrd. Prc.",OverduePercentage,false);
  RlCol(-90,-90,"Pmt Day",MonthlyPaymentDay,false);
  RlColTL(-30,-30,"OK",M4Mark,OKFlag,false);
  SearchField("Search");
  EndWindow;
end;

window CredManChange2LClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Agreement Changes",CredManChange2LClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManChangeDClass);
  UseView(CredManChangeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,CredSerNr);
  RlCol(70,70,"Agr. No.",CredManNr,false);
  RlCol(146,146,"Date",TransDate,false);
  RlCol(222,222,"Prol. Months",ProlongMonths,false);
  RlCol(300,300,"Pause Months",PauseMonths,false);
  RlCol(-180,-180,"Rate",IntRate,false);
  RlCol(-130,-130,"Ovrd. Prc.",OverduePercentage,false);
  //RlCol(-90,-90,"Pmt Day",MonthlyPaymentDay,false);
  RlColTL(-30,-30,"OK",M4Mark,OKFlag,false);
  SearchField("Search");
  EndWindow;
end;

window CredManChangeDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  h2 = 260;
  WindowBegin("Agreement Change",CredManChangeDClass,CGview,-);
  SetWRect(20,80,600,339);
  UseView(CredManChangeVc);
  vs=20; h=150; vs2=16; hm=-100;
  EditField(h,v=6,100,"SerNr",Normal,SerNr,false,);
  Checkbox(h2,v,0,"Approved",OKFlag);
  EditField(h,v+=vs,100,"Agreement No.",Normal,CredManNr,false,CredManSClass);
  EditField(h,v+=vs,100,"Date",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=vs,100,"End Date",Normal,EndDate,false,PasteCurDate);
  EditField(h,v+=vs,100,"Prolong Months",Normal,ProlongMonths,false,0);
  EditField(h,v+=vs,100,"Pause Months",Normal,PauseMonths,false,0);
  EditField(h,v+=vs,100,"Extra Value",Normal,AddValue,false,0);
  EditField(h,v+=vs,100,"Rate",Normal,IntRate,false,0);
  Checkbox(h2,v,0,"Annual Rate",AnnualRate);
  EditField(h,v+=vs,100,"Overdue Percentage",Normal,OverduePercentage,false,0);
  EditField(h,v+=vs,100,"Max Late Days",Normal,LateFeeDays,false,0);
  //EditField(h,v+=vs,100,"Monthly Payment Day",Normal,MonthlyPaymentDay,false,0);
  EndWindow;
end;

window PaymentConditionTextWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  
  WindowBegin("Payment Conditions",PaymentConditionTextWClass,CGOther,-);
  UseView(CUVc);
  SetWRect(20,80,450,300);
  AutoSizeWindow(false);
  ToolBar;
  HalPushButton(-140,5,-80,22,"PaymentConditionTextWClassSave","Save");
  EndToolBar;
  h = 150;
  TextField(20,v=6,-20,-20,Math2,0);
  EndWindow;
	
	return;
end;

window OtherConditionTextWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  
  WindowBegin("Other Conditions",OtherConditionTextWClass,CGOther,-);
  UseView(CUVc);
  SetWRect(20,80,450,300);
  AutoSizeWindow(false);
  ToolBar;
  HalPushButton(-140,5,-80,22,"OtherConditionTextWClassSave","Save");
  EndToolBar;
  h = 150;
  TextField(20,v=6,-20,-20,Math2,0);
  EndWindow;
	
	return;
end;

window ConditionTextDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("Conditions",ConditionTextDClass,CGview,-);
  SetWRect(20,80,400,239);
  UseView(ConditionTextVc);
  vs=20; h=120; vs2=16; hm=-100;
  TextField(20,v=6,-20,-20,Text,0);
  EndWindow;
end;

window LangNrSClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Values in Text",LangNrSClass,CGslist,LangNrView);
  SetWRect(64,80,509,298);
  SpawnClass(LangNrDClass);
  Sizeable(-1,-1,0,0);
  UseView(LangNrVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Language",LangCode,false,LangCode);
  RlCol(121,121,"Comment",Comment,false);
  SearchField("Search");
  EndWindow;
end;

window ManagerWorkloadLClass:1
  wtag("language","ENG,EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Manager Workload",ManagerWorkloadLClass,CGmList,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,800,298);
  SpawnClass(ManagerWorkloadDClass);
  UseView(ManagerWorkloadVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Ser. No.",SerNr,false,SerNr);
  RlColKey(101,101,"Act. Type",ActType,false,ActType);
  RlColKey(181,181,"Type",CredManType,false,CredManType);
  RlColKey(260,260,"Agreement Class",CredManClass,false,CredManClass);
  RlColKey(-240,-240,"Sales Group",SalesGroup,false,SalesGroup);
EndWindow;
end;

window ManagerWorkloadDClass:1
  wtag("language","ENG,EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,h2,h3;
  
  WindowBegin("Manager Workload",ManagerWorkloadDClass,CGView,-);
  Sizeable(-1,-1,0,0);
  SetWRect(64,80,600,298);
  UseView(ManagerWorkloadVc);
  vs = 20; h=135; h2=375; h3=595;
  EditField(h,v=6,100,"Ser. No.",Normal,SerNr,false,TSerSClass);
  EditField(h2,v,80,"Activity Type",Normal,ActType,false,ActTypeSClass);
  EditField(h3,v,80,"Agreement Type",Normal,CredManType,false,CredManTypeSClass);
  EditField(h,v+=vs,80,"Agreement Type Class",Normal,CredManClass,false,CredManClassSClass);
  EditField(h2,v,80,"Sales Group",Normal,SalesGroup,false,SalesGroupSClass);
  ButtonFrame(h,v+=40,150,3,"Evaluation");
  RadioButton(h,v,0,0,"Total Booked Time",EvaluationType);
  RadioButton(h,v+=16,1,0,"Today Task Quantity",EvaluationType); 
  RadioButton(h,v+=16,2,0,"Total Task Quantity",EvaluationType); 
  EndWindow;
end;

window CredManTypeSClass:1
  wtag("language","ENG,EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Credit Agreement Types",CredManTypeSClass,CGslist,-);
  SetWRect(20,80,500,300);
  Sizeable(-1,-1,0,0);
  SpawnClass(CredManTypeDClass);
  UseView(CredManTypeVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,20,"Code",Code,false,ActCode);//CUST Code>>ActCode
  RlColKey(100,100,"Comment",Comment,false,ActComment);//CUST Comment>>ActComment
  SearchField("Search");
  EndWindow;
end;


window ManagerReplacementLClass:1
  wtag("language","ENG,EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Manager Replacements",ManagerReplacementLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  //Sizeable(-1,-1,0,0);
  UseView(ManagerReplacementVc);
  SpawnClass(ManagerReplacementDClass);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Nr",SerNr,false,SerNr);
  RlColKey(124,124,"Manager From",ManagerFrom,false,ManagerFrom);
  RlColKey(228,228,"Manager To",ManagerTo,false,ManagerTo);
  RlColKey(348,348,"Date From",DateFrom,false,DateFrom);
  RlColKey(468,468,"Date To",DateTo,false,DateTo);
  SearchField("Search");
  EndWindow;
end;

window ManagerReplacementDClass:1
  wtag("language","ENG,EST"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,h2,h3,h4,h5;
  
  WindowBegin("Manager Replacement",ManagerReplacementDClass,CGView,-);
  SetWRect(20,80,800,539);
  UseView(ManagerReplacementVc);
  vs = 20; h=60; h2=200; h3=380; h4 = 540; h5 = 680;
  EditField(h,v=6,50,"Nr.",Normal,SerNr,false,0);
  EditField(h2,v,80,"Manager From",Normal,ManagerFrom,false,UserSClass);
  EditField(h3,v,80,"Manager To",Normal,ManagerTo,false,UserSClass);
  EditField(h4,v,80,"Date From",Normal,DateFrom,false,PasteCurDate);
  EditField(h5,v,80,"Date To",Normal,DateTo,false,PasteCurDate);
  EndWindow;
end;

window CredManGracePeriodWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs; 

  vs = 20;
  WindowBegin("Register Extended Grace Period",CredManGracePeriodWClass,CGother,RcType);
  UseView(RcVc);
  SetWRect(20,80,300,180);
  AutoSizeWindow(false);  
  EditFieldTL(100,v=6,90,"From Date",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(100,v+=vs,90,"To Date",M4Date,Normal,0,d2,false,PasteCurDate);
  EditFieldTL(100,v+=vs,90,"Max late Days",M4Long,Normal,0,long1,false,0);
  HalPushButton(-260,v+=vs,-160,v+vs,"CredManGracePeriodWClassProceed","Confirm");
  HalPushButton(-120,v,-20,v+vs,"SchedYesNoWClassClose","No");
  EndWindow;

  return;
end;

window UserNameSClass:8
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer,android,iPad,iPhone")
begin
  real h,v;
  WindowBegin("Paste Person",UserNameSClass,CGslist,UserView);
  Sizeable(-1,-1,0,0);
  UseView(UserVc);
//  SpawnClass(USDClass);
  Modality(kModalityAboveParent);
  SetWRect(64,80,509,298);
  if (GuiType==kGuiiPhone) then begin
    RecordList(0,0,-1,-1);
    RLCellKey(10,6,280,19,Name,false,12,patM4blue,Name);
    RLCellKey(10,26,280,39,Code,false,12,patM4black,Code);
  end else begin    
		RecordList(4,17,-21,-39);
    RlColKey(4,4,  "Sign.",Name,false,ActName);
    RlColKey(81,81,"Name",Code,false,ActCode);
  end;
  SearchField("Search");
  EndWindow;
end;

window EuriborRatesDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm,h2;
  WindowBegin("Euribor Rates",EuriborRatesDClass,CGview,-);
  SetWRect(20,80,400,239);
  UseView(EuriborRatesVc);
  vs=20; h=70; h2=220; vs2=16; hm=-100;
  EditField(h,v=6,80,"Date",Normal,Date,false,PasteCurDate);
  EditField(h2,v,70,"Rate",Normal,Rate,false,0);
  EndWindow;
end;

window EuriborRatesLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Euribor Rates",EuriborRatesLClass,CGmlist,-);
  SetWRect(20,80,100,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(EuriborRatesDClass);
  UseView(EuriborRatesVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"Date",Date,false,Date);
  RlCol(-134,-134,"Rate",Rate,false);
  SearchField("Search");
  EndWindow;
end;

window OverdueCalcTextWClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,h2;
  WindowBegin("Overdue calculations text",OverdueCalcTextWClass,CGOther,-);
  UseView(CUVc);
  SetWRect(64,80,900,300);
  AutoSizeWindow(false);
  ToolBar;
  HalPushButton(-140,5,-80,22,"OverdueCalcTextWClassSave","Save");
  EndToolBar;
  h = 20; v = 27; vs = 20; h2 = 120;
  
  Checkbox(-170,v=15,0,"Use new text",blockedFlag);
  StaticText(h,v=15,"Invoice no.",false);
  StaticText(h,v+=vs,"Value",false);
  StaticText(h,v+=vs,"Period",false);
  StaticText(h,v+=vs,"Days",false);
  StaticText(h,v+=vs,"Overdue Percent",false);
  StaticText(h,v+=vs,"Row Sum",false);
  
  StaticText(h2,v=15,"?InvNo?",false);
  StaticText(h2,v+=vs,"?Value?",false);
  StaticText(h2,v+=vs,"?Period?",false);
  StaticText(h2,v+=vs,"?Days?",false);
  StaticText(h2,v+=vs,"?Rate?",false);
  StaticText(h2,v+=vs,"?RowSum?",false);
  
  TextField(h,v+=vs,-20,-24,Math2,0);
  EndWindow;
end;
