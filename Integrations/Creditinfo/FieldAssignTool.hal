external inner function Date DateFromString(string,string);
external inner function val ValFromString(string,string,string);
external inner function Integer CountObjects(string);
external inner procedure ExtractObj(string,var Integer,var string);
external inner function string 60 AddObjectToObjectList(string,string);


function string 255 extractValueFromString(string refstr)
begin
  string 255 res;
  string 2 ch;
  integer i,l;
  
  l = Len(refstr);
  for (i=0;i<l;i=i+1) begin
    ch = Mid(refstr,i,1);
    if(asc(ch)>47 and asc(ch)<58)then begin
      res = res & ch;
    end;
    if(asc(ch)==44 or asc(ch)==46)then begin
      res = res & ch;
    end;
    
  end;
  
  extractValueFromString = res;
  return;
end;

function string 2 ReplaceStrings(string tstr,string realstr,var integer movep)
begin
  string 2 res;

  res = realstr;
  movep = 1;

  if left(tstr,4)=="&lt;" then begin
    res = "<";
    movep = 4;
  end;
  if left(tstr,4)=="&gt;" then begin
    res = ">";
    movep = 4;
  end;
  if left(tstr,6)=="&apos;" then begin
    res = "'";
    movep = 6;
  end;
  if left(tstr,6)=="&quot;" then begin
    res = """";
    movep = 6;
  end;

  ReplaceStrings = res;
  return;
end;

function string 255 ReplaceWebStrings(string rstr)
begin
  longint ln,i;
  string 10 tstr,tmp;
  integer movep;
  string 255 res;

  i = 0;
  while (i < len(rstr)) begin
    tmp = mid(rstr,i,1);
    tstr = mid(rstr,i,6);
    tmp = ReplaceStrings(tstr,tmp,movep);
    res = res & tmp;
    i = i + movep;
  end;

  ReplaceWebStrings = res;
  return;
end;

function string 255 XmlGetFrom(xml axml,string node,string attributestr)
begin
  string 255 res;
  
  if(blank(attributestr))then begin
    res = XmlGet(axml,node);
  end else begin
    res = XmlGetAttribute(axml,node,attributestr);
  end;
  
  XmlGetFrom = res;
return;
end;

global procedure CreditInfoFileAsignB2BLoanApplicationVc(var record B2BLoanApplicationVc LAr,xml axml)
begin
record CreditinfoFieldAssignBlock CABb;
row CreditinfoFieldAssignBlock CABrw;
integer i,rwcnt,pos,pos1;
string 255 lang,params,url,path,root,tstr,fn,name,surname,datestr,datestr1,datestr2,attr,fieldtopaste,importnode;
integer ckbox,countfields,countattributes,index;
boolean attribfill;

  //root = "root/BasicInfo";
  
  blockload(CABb);
  rwcnt = matrowcnt(CABb);
  for(i=0;i<rwcnt;i=i+1)begin
    matrowget(CABb,i,CABrw);
    if(nonblank(CABrw.FieldName))then begin
      fieldtopaste = CABrw.FieldName;
      countfields = CountObjects(CABrw.FieldName);
      countattributes = CountObjects(CABrw.XMLAtribute);
      if(CABrw.Register=="B2BLoanApplicationVc")then begin
        if(nonblank(CABrw.ImportNode))then begin
          attribfill = false;
          pos = 0;
          ExtractObj(CABrw.XMLAtribute,pos,attr);
          while(nonblank(attr))begin
            if(nonblank(attr))then begin
              if(nonblank(AddObjectToObjectList(tstr,XmlGetFrom(axml,root & CABrw.ImportNode,attr))))then begin
                attribfill = true;
              end;
            end;
            ExtractObj(CABrw.XMLAtribute,pos,attr);
          end;
          pos1 = 0;
          ExtractObj(CABrw.FieldName,pos1,fieldtopaste);
          index = 0;
          while(nonblank(fieldtopaste))begin
            if(nonblank(fieldtopaste))then begin
              importnode = CABrw.ImportNode & "["& index & "]";
              if(nonblank(XmlGet(axml,root & importnode)) or attribfill)then begin
                switch(CABrw.DataType)begin
                  case M4Str:   if(countattributes>1)then begin
                                  pos = 0;
                                  ExtractObj(CABrw.XMLAtribute,pos,attr);
                                  while(nonblank(attr))begin
                                    if(nonblank(attr))then begin
                                      if(nonblank(XmlGetFrom(axml,root & importnode,attr)))then begin
                                        if(nonblank(tstr))then begin
                                          tstr = tstr & ", ";
                                        end;
                                        tstr = tstr & XmlGetFrom(axml,root & importnode,attr);
                                      end;
                                    end;
                                    ExtractObj(CABrw.XMLAtribute,pos,attr);
                                  end;
                                end else begin
                                  tstr = XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute);
                                end;
                                SetFieldValueByName(LAr,fieldtopaste,tstr,-1);
                  case M4Date: SetFieldValueByName(LAr,fieldtopaste,DateFromString(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute),"YYYY.MM.DD"),-1);
                  case M4Chk: ckbox = 0;
                              if (XmlNodeExists(axml,root & importnode)) then begin
                                ckbox = 1;
                                if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="false")then begin ckbox = 0; end;
                                if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="true")then begin ckbox = 1; end;
                                if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="0")then begin ckbox = 0; end;
                                if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="1")then begin ckbox = 1; end;
                            
                              end;
                              if(CABrw.Invert==1)then begin
                                if(ckbox==0)then begin
                                  ckbox = 1;
                                end else begin
                                  ckbox = 0;
                                end;
                              end;
                              SetFieldValueByName(LAr,fieldtopaste,ckbox,-1);
                   case M4Val:tstr = extractValueFromString(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute));
                              SetFieldValueByName(LAr,fieldtopaste,ValFromString(tstr,","," "),-1);
                end;
              end;
            end;
            index = index + 1;
            ExtractObj(CABrw.FieldName,pos1,fieldtopaste);
          end;
        end;
      end;
    end;
  end;

return;
end;

global procedure CreditInfoFileAsignCUVc(var record CUVc CUr,xml axml)
begin
record CreditinfoFieldAssignBlock CABb;
row CreditinfoFieldAssignBlock CABrw;
integer i,rwcnt,pos,pos1;
string 255 lang,params,url,path,root,tstr,fn,name,surname,datestr,datestr1,datestr2,attr,fieldtopaste,importnode;
integer ckbox,countfields,countattributes,index;
boolean attribfill;

  //root = "root/BasicInfo";
  
  blockload(CABb);
  rwcnt = matrowcnt(CABb);
  for(i=0;i<rwcnt;i=i+1)begin
    matrowget(CABb,i,CABrw);
    if(CABrw.Register=="CUVc")then begin
      if(nonblank(CABrw.ImportNode))then begin
        attribfill = false;
        pos = 0;
        ExtractObj(CABrw.XMLAtribute,pos,attr);
        while(nonblank(attr))begin
          if(nonblank(attr))then begin
            if(nonblank(AddObjectToObjectList(tstr,XmlGetFrom(axml,root & CABrw.ImportNode,attr))))then begin
              attribfill = true;
            end;
          end;
          ExtractObj(CABrw.XMLAtribute,pos,attr);
        end;
        countfields = CountObjects(CABrw.FieldName);
        countattributes = CountObjects(CABrw.XMLAtribute);
        fieldtopaste = CABrw.FieldName;
        index = 0;
        pos1 = 0;
        ExtractObj(CABrw.FieldName,pos1,fieldtopaste);
        while(nonblank(fieldtopaste))begin
          if(nonblank(fieldtopaste))then begin
            importnode = CABrw.ImportNode & "["& index & "]";
            if(nonblank(XmlGet(axml,root & importnode)) or attribfill)then begin
              switch(CABrw.DataType)begin
                case M4Str: if(countattributes>1)then begin
                              pos = 0;
                              ExtractObj(CABrw.XMLAtribute,pos,attr);
                              while(nonblank(attr))begin
                                if(nonblank(attr))then begin
                                  if(nonblank(XmlGetFrom(axml,root & importnode,attr)))then begin
                                    if(nonblank(tstr))then begin
                                      tstr = tstr & ", ";
                                    end;
                                    tstr = tstr & XmlGetFrom(axml,root & importnode,attr);
                                  end;
                                end;
                                ExtractObj(CABrw.XMLAtribute,pos,attr);
                              end;
                            end else begin
                              tstr = XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute);
                            end;
                            SetFieldValueByName(CUr,fieldtopaste,tstr,-1);
                case M4Date: SetFieldValueByName(CUr,fieldtopaste,DateFromString(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute),"YYYY.MM.DD"),-1);
                case M4Chk: ckbox = 0;
                            if (XmlNodeExists(axml,root & importnode)) then begin
                              ckbox = 1;
                              if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="false")then begin ckbox = 0; end;
                              if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="true")then begin ckbox = 1; end;
                              if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="0")then begin ckbox = 0; end;
                              if(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute)=="1")then begin ckbox = 1; end;
                            end;
                            if(CABrw.Invert==1)then begin
                              if(ckbox==0)then begin
                                ckbox = 1;
                              end else begin
                                ckbox = 0;
                              end;
                            end;
                            SetFieldValueByName(CUr,fieldtopaste,ckbox,-1);
                 case M4Val:SetFieldValueByName(CUr,fieldtopaste,ValFromString(XmlGetFrom(axml,root & importnode,CABrw.XMLAtribute),","," "),-1);
              end;
            end;
          end;
          ExtractObj(CABrw.FieldName,pos1,fieldtopaste);
        end;
      end;
    end;
  end;

return
end;