//defining here fallback functions
external function Integer GetInterestPaymentType(record CredManVc);

global
function Boolean CheckForActiveAgreement(record CredManVc CredManr)
begin
  

  CheckForActiveAgreement = true;
  return;
end;

global
function Boolean CanCredManMakePayment(record CredManVc CredManr,var string errstr)
begin
  Boolean res;

  if (CredManr.OKFlag==1 and CredManr.Approved==1) then begin
    res = true;
  end;

  CanCredManMakePayment = res;
  return;
end;

global
function Boolean CanCreateSingleAgreementInvoice(record CredManVc CredManr,var Date ed)
begin
  Boolean res;

  if (CredManr.OKFlag==1 and CredManr.Approved==1) then begin
    res = true;
  end else begin
    if (CredManr.Approved==1 and GetInterestPaymentType(CredManr)==2) then begin
      res = true;
    end;
  end;

  CanCreateSingleAgreementInvoice = res;
  return;
end;

global
function Boolean IsNovitiCustomer()
begin
  IsNovitiCustomer = false;
  return;
end;

global
function Boolean CheckCredManSchedule()
begin
  
  CheckCredManSchedule = false;
  return;
end;

global
function Boolean HasSuretyPerson()
begin
  HasSuretyPerson = false;
  return;
end;

global
function string 255 NovitiGetEmailSender()
begin
  string 255 res;
  record MailSettingsBlock MSb;

  BlockLoad(MSb);
  res = MSb.FromSystem;

  NovitiGetEmailSender = res;
  return;
end;

global
function Boolean UseDisburseUntil()
begin
  UseDisburseUntil = false;
  return;
end;


global
function Boolean UseFullBuyoutProcedure()
begin
  UseFullBuyoutProcedure = true;
  return;
end;

global
function Boolean PartiaBuyoutShortensPeriod()
begin
  PartiaBuyoutShortensPeriod = true;
  return;
end;

global
function Boolean UseBuyoutSummary()
begin
  UseBuyoutSummary = false;
  return;
end;

global
function Boolean HasMoneyTransferDate()
begin
  
  HasMoneyTransferDate = false;
  return;
end;

global
function Boolean CredManCanInvoiceOverdues(record CredManVc CredManr)
begin
  CredManCanInvoiceOverdues = true;
  return;
end;