//<halrule>server-only</halrule>
external procedure ExternalPrintLoanAppForm(record B2BLoanApplicationVc,var vector string);
external procedure ExternalPrintSuretyAppForm(record B2BLoanApplicationVc,var vector string);
external procedure ExternalPrintCredManForm(record CredManVc,var vector string);
external procedure ExternalPrintCredManScheduleForm(record CredManVc,var vector string);
external procedure ExternalPrintVekselisForm(record CredManVc,var vector string);
external procedure ExternalPrintSuretyAgreementForm(record CredManVc,var vector string);
external inner function string 255 CredManOwnBankAccount(Longint);

global
procedure OuterPrintEBSDocument(string docname,string id,var Boolean printf,record RcVc RepSpec,var vector string vVals)
begin
  record CredManVc CredManr;
  record B2BLoanApplicationVc LAr;

  switch (docname) begin
    case "LoanAppForm":
      LAr.SerNr = StringToLongint(id);
      printf = (ReadFirstMain(LAr,1,true) or id=="-2");
      if (printf) then begin
        vVals["SPEC_CUSTCODE"] = RepSpec.f10;
        ExternalPrintLoanAppForm(LAr,vVals);
      end;
    case "SuretyApplicationForm":
      LAr.SerNr = StringToLongint(id);
      printf = (ReadFirstMain(LAr,1,true) or id=="-2");
      if (id=="-2") then begin
        LAr.SuretyCnt = 1;
      end;
      if (printf) then begin
        ExternalPrintSuretyAppForm(LAr,vVals);
      end;
    case "CredManForm":
      CredManr.SerNr = StringToLongint(id);
      printf = (ReadFirstMain(CredManr,1,true) or id=="-2");
      if (printf) then begin
        ExternalPrintCredManForm(CredManr,vVals);
      end;
    case "CredManScheduleForm":
      CredManr.SerNr = StringToLongint(id);
      printf = (ReadFirstMain(CredManr,1,true) or id=="-2");
      if (printf) then begin
        ExternalPrintCredManScheduleForm(CredManr,vVals);
      end;
    case "SuretyAgreementForm":
      CredManr.SerNr = StringToLongint(id);
      printf = (ReadFirstMain(CredManr,1,true) or id=="-2");
      if (printf) then begin
        ExternalPrintSuretyAgreementForm(CredManr,vVals)
      end;
    case "VekselisForm":
      CredManr.SerNr = StringToLongint(id);
      printf = (ReadFirstMain(CredManr,1,true) or id=="-2");
      if (printf) then begin
        ExternalPrintVekselisForm(CredManr,vVals);
      end;

  end;

  return;
end;

global
procedure Ext_PrintDocumentSigner(var vector string vVals)
begin
  record CMApplicationSetBlock ASb;
  record UserVc Userr;
  
  BlockLoad(ASb);
  Userr.Code = ASb.DocumentSigner;
  if (ReadFIrstMain(Userr,1,true)) then begin
    vVals["F_DOCUMENTSIGNERNAME"] = Userr.Name;
    vVals["F_DOCUMENTSIGNERPOSITION"] = ASb.DocumentSignerPosition;
    vVals["F_DOCUMENTSIGNERCODE"] = Userr.Code;
    vVals["F_DOCUMENTSIGNEREMAIL"] = Userr.emailAddr;
    vVals["F_DOCUMENTSIGNERPHONE"] = Userr.Phone1;
  end;

  return;
end;


global
procedure Ext_PrintInvoiceSigner(var vector string vVals)
begin
  record CMApplicationSetBlock ASb;
  record UserVc Userr;
  
  BlockLoad(ASb);
  Userr.Code = ASb.InvoiceSigner;
  if (ReadFIrstMain(Userr,1,true)) then begin
    vVals["F_INVOICESIGNERNAME"] = Userr.Name;
    vVals["F_INVOICESIGNERPOSITION"] = ASb.DocumentSignerPosition;
    vVals["F_INVOICESIGNERCODE"] = Userr.Code;
  end;

  return;
end;

function string 255 AddToList(string tstr,string astr)
begin
  string 255 res;
  
  res = tstr;
  if (nonblank(astr)) then begin
    if (nonblank(tstr)) then begin
      res = res & ",";
    end;
    res = res & astr;
  end;

  AddToList = res;
  return;
end;

function string 255 GetDelAddr(record IVVc IVr)
begin
  record CUVc CUr;
  string 255 res;
  
  Cur.Code = IVr.CustCode;
  if (ReadFirstMain(CUr,1,true)) then begin
    if (blank(CUr.DelAddr0)) then begin
      res = AddToList(res,CUr.InvAddr0);
      res = AddToList(res,CUr.InvAddr1);
      res = AddToList(res,CUr.InvAddr2);
      res = AddToList(res,CUr.InvAddr3);
      res = AddToList(res,CUr.InvAddr4);
    end else begin
      res = AddToList(res,CUr.DelAddr0);
      res = AddToList(res,CUr.DelAddr1);
      res = AddToList(res,CUr.DelAddr2);
      res = AddToList(res,CUr.DelAddr3);
      res = AddToList(res,CUr.DelAddr4);
    end;
  end;

  GetDelAddr = res;
  return;
end;

global
procedure Ext_PrintCustomInvoiceFields(var vector string vVals,record IVVc IVr)
begin
  string 255 deladdr;

  Ext_PrintInvoiceSigner(vVals);

  vVals["F_CUSTOWNBANKACC"] = CredManOwnBankAccount(IVr.CustCredManNr);

  deladdr = GetDelAddr(IVr);
  vVals["F_DELADDRESS"] = deladdr;
  return;
end;