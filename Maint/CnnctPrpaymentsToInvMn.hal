external inner procedure IPVc_PasteCUPNr(var record IPVc,Integer);
external inner procedure IPSumup(var record IPVc);
external inner function Boolean PasteInvIn2IPr(var record IPVc,Integer,Date,var val,Boolean,var Boolean);
external updating procedure BankFillIProws(var record IPVc,string,var string,var val,string,boolean,string,string,Boolean,longint);
external inner function Boolean IPVc_PasteCustCode(var record IPVc,Integer,var LongInt);
external inner function Boolean PasteInvIn2IPr(var record IPVc,Integer,Date,var val,Boolean,var Boolean);
external inner procedure IPVc_PasteRecVal(var record IPVc,Integer);
external procedure DistributeCredHistValues(var record IPVc,Integer);
external inner procedure IPPastePayMode(var record IPVc);


global updating procedure CnnctPrpaymentsToInvMn(record RcVc RepSpec)
begin
  record IPVc IPr,oldIPr;
  row IPVc IPrw;
  record CUVc CUr;
  boolean TrHs,testf;
  boolean TrHs1,testf1;
  boolean TrHs2,testf2;
  record ARPayHistVc ARPayHistr;
  record ARPayVc ARPayr,ARPay2r;
  record ARVc ARr;
  record IVVc IVr;
  date ipdate;
  integer k,i,rwcnt;
  val resval;
  longint error;
  boolean installmentf;
	val chk,totalsum;
	boolean added;
	date bd;
	record CMInvoicingBlock CMIb;
	
	blockload(CMIb);
  
  logtext(0,"CnnctPrpaymentsToInvMn start");
  
  CUr.Code = RepSpec.f1;
  TrHs = true;
  while(loopmain(CUr,1,TrHs))begin
    testf = true;
    if(nonblank(RepSpec.f1) and CUr.Code!=RepSpec.f1)then begin TrHs = false; testf = false; end;
    
    if(testf)then begin
      TrHs1 = true;
     // ARPayHistr.CustCode = CUr.Code;
     // ARPayHistr.TransDate = RepSpec.sStartDate;
      ARPayr.CustCode = CUr.Code;
      while(loopkey("CustPay",ARPayr,1,TrHs1))begin
        testf1 = true;
        if(ARPayr.CustCode!=CUr.Code)then begin TrHs1 = false; testf1 = false; end;
        if(ARPayr.PayDate>RepSpec.sEndDate)then begin TrHs1 = false; testf1 = false; end;
        //if(ARPayHistr.FileName!="IPVc")then begin testf1 = false; end;
        if(ARPayr.BookRVal<=0)then begin testf1 = false; end;
        
        /*if(testf1)then begin
          ARPayr.CUPNr = ARPayHistr.CUPNr;
          if (ReadFirstMain(ARPayr,1,true)) then begin
            if(ARPayr.RVal<=0)then begin
              testf1 = false;
            end;
          end else begin
            testf1 = false;
          end;
        end;*/
        recordnew(IPr);
        
        if(nonblank(CMIb.PaymentMode))then begin
          IPr.PayMode = CMIb.PaymentMode;
          IPPastePayMode(IPr);
        end;
        
        k = 0;
        ipdate = ARPayr.PayDate;
        
        IPr.RegDate = currentdate;
        clearrow(IPr,IPrw,1);
        IPrw.CustCode = CUr.Code;
        MatRowPut(IPr,k,IPrw);
        IPVc_PasteCustCode(IPr,k,error);
        MatRowGet(IPr,k,IPrw);
        IPrw.CUPNr = ARPayr.CUPNr;
        MatRowPut(IPr,k,IPrw);
        IPVc_PasteCUPNr(IPr,k);
        MatRowGet(IPr,k,IPrw);
        IPrw.BankCurncy = IPrw.InvCurncy;
        IPrw.InvVal = -ARPayr.RVal;
        IPrw.BankVal = -ARPayr.RVal;
        IPrw.RecVal = -ARPayr.RVal;
        MatRowPut(IPr,k,IPrw);
        IPSumup(IPr);
        MatRowGet(IPr,k,IPrw);
        IPrw.PayDate = ipdate;
        MatRowPut(IPr,k,IPrw);
        k=k+1;

        added = false;        
        resval = ARPayr.RVal;
                logtext(0,"--------Prepayment " & ARPayr.CUPNr & " ====Val= " & ARPayr.RVal & " ====BookVal= " & ARPayr.BookRVal & "==PayDate==" & ARPayr.PayDate & " ===resval=== " & resval);

        if(testf1)then begin
          //logtext(0,"--------Prepayment " & ARPayHistr.CUPNr & " ====Val= " & ARPayHistr.Val & " ====BookVal= " & ARPayr.RVal & " ========FileName== " & ARPayHistr.FileName & "==PayDate==" & ARPayr.PayDate);
          
          TrHs2 = true;
          ARr.CustCode = CUr.Code;
          ARr.InvDate = RepSpec.sStartDate;
          while(loopkey("CustInv",ARr,2,TrHs2))begin
            logtext(0,"+-----------======Invoice " & ARr.InvoiceNr & " ==Date== " & ARr.InvDate);
            testf2 = true;
            if(ARr.CustCode!=CUr.Code)then begin TrHs2 = false; testf2 = false; end;
            if(ARr.InvDate>RepSpec.sEndDate)then begin TrHs2 = false; testf2 = false; end;
            if(resval<=0)then begin testf2 = false; TrHs2 = false; end;
            if(ARr.RVal<=0)then begin testf2 = false; end;
            
            if(testf2)then begin
              logtext(0,"------------======Invoice " & ARr.InvoiceNr & " ==Date== " & ARr.InvDate);
              
              if(ARr.InvDate>ipdate)then begin
                ipdate = ARr.InvDate;
                matrowget(IPr,0,IPrw);
                IPrw.PayDate = ipdate;
                matrowput(IPr,0,IPrw);
              end;
              
              
              Clearrow(IPr,IPrw,1);
              IPrw.InvoiceNr = ARr.InvoiceNr;
              MatRowPut(IPr,k,IPrw);
              PasteInvIn2IPr(IPr,k,IPr.TransDate,chk,false,installmentf);
              MatRowGet(IPr,k,IPrw);
              if(IPrw.RecVal>=resval)then begin
                IPrw.BankVal = resval;
                IPrw.RecVal = resval;
                IPrw.RecCurncy = ARPayr.CurncyCode;
                IPrw.BankCurncy = ARPayr.CurncyCode;
                IPrw.PayDate = IPr.TransDate;
                IPrw.PayDate =IPr.TransDate;
                matrowput(IPr,k,IPrw);
                IPVc_PasteRecVal(IPr,k);
                matrowget(IPr,k,IPrw);
                resval = 0;
              end;
              if(IPrw.RecVal<resval)then begin
                IPrw.BankVal = IPrw.RecVal;
                IPrw.RecVal = IPrw.RecVal;
                IPrw.RecCurncy = ARPayr.CurncyCode;
                IPrw.BankCurncy = ARPayr.CurncyCode;
                IPrw.PayDate = IPr.TransDate;
                IPrw.PayDate =IPr.TransDate;
                matrowput(IPr,k,IPrw);
                IPVc_PasteRecVal(IPr,k);
                matrowget(IPr,k,IPrw);
                resval = resval - IPrw.RecVal;
              end;
              
              DistributeCredHistValues(IPr,k);
              //resval = ARPayr.RVal;
              //BankFillIProws(IPr,CUr.Name,ARPayr.CurncyCode,resval,CUr.Code,nonblank(CUr.Code),"","",true);
              k = matrowcnt(IPr);
              added = true;
              
            end;
          end;
          resetloop(ARr);
          
          if(added)then begin
            totalsum = 0;
            IPr.SerNr = NextSerNr("IPVc",IPr.TransDate,-1,false,"");
            rwcnt = matrowcnt(IPr);
            for(i=0;i<rwcnt;i=i+1)begin
              matrowget(IPr,i,IPrw);
              IPrw.PayDate = ipdate;
              IPr.TransDate = ipdate;
              totalsum = totalsum + IPrw.RecVal;
              matrowput(IPr,i,IPrw);
            end;
            if(totalsum<0)then begin
              matrowget(IPr,0,IPrw);
                IPrw.InvVal = IPrw.InvVal - totalsum;
                IPrw.BankVal = IPrw.BankVal - totalsum;
                IPrw.RecVal = IPrw.RecVal - totalsum;
                MatRowPut(IPr,0,IPrw);
                IPSumup(IPr);
            end;
            recordinsert(IPr,true);
            recordcopy(oldIPr,IPr);
            IPr.OKFlag = 1;
            recordupdate(oldIPr,IPr,true);
            
          end;
          
        end;
        ARPay2r.CUPNr = ARPayr.CUPNr;
        if(!readfirstmain(ARPay2r,1,true))then begin
          stepback(ARPayr);
        end;
      end;
      resetloop(ARPayr);
      
    end;
  end;
  
  logtext(0,"CnnctPrpaymentsToInvMn end");
return;
end;