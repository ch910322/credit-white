//<halrule>server-only</halrule>
external procedure GetCredManOverdueInvoices(record CredManVc,record CredManSetBlock,Date,Date,var Integer,var val,var array string,Boolean,Boolean);
external procedure SetupLoanInvoice(record CredManVc,record CredManSetBlock,var record IVVc,Date,Date,Date,Boolean,Boolean,string,Integer);
external procedure AddLateFees(record CredManVc,record CredManSetBlock,var record IVVc,Integer,val,array string);
external updating procedure StoreLoanInvoice(var record IVVc,record CredManVc);
external function Date GetLastInvoiceDate(record CredManVc,Date);
external procedure SetupOverdueLangCode(var record IVVc,string);
external procedure CM_AddPrepayments(var record IVVc,record CMInvoicingBlock);

/*
function Date GetLastInvoiceDate(record CredManVc CredManr,Date ed)
begin
  Date res;

  res = ed;
  res.day = GetDay(CredManr.FirstInvDate);
  if (res>ed) then begin
    res = AddMonth(res,-1);
  end;

  GetLastInvoiceDate = res;
  return;
end;
*/

global
updating procedure GenOverdueInvMn(record RcVc RepSpec)
begin
  record CredManVc CredManr;
  Date sd,ed;
  record CredManSetBlock CMb;
  val lateamount;
  Integer latedays;
  record IVVc IVr,oldIVr;
  array string 255 lateformula;
  Boolean ignoref;
  record CMInvoicingBlock CIb;

  if (RepSpec.ArtMode==1 and blank(RepSpec.d1)) then begin
    goto LGenOverdueInvMn;
  end;
  BlockLoad(CMb);
  BlockLoad(CIb);
  while (LoopMain(CredManr,1,true)) begin
    if (CredManr.OKFlag==1) then begin
      
      if (RepSpec.ArtMode==1) then begin
        sd = CredManr.FirstInvDate;
        ed = RepSpec.d1;
        ignoref = false;
      end else begin
        sd = RepSpec.sStartDate;
        ed = RepSpec.sEndDate;
        ignoref = true;
      end;
      GetCredManOverdueInvoices(CredManr,CMb,ed,AddDay(sd,-1),latedays,lateamount,lateformula,false,ignoref);
      if (lateamount>0) then begin
        RecordClear(IVr);
        SetupLoanInvoice(CredManr,CMb,IVr,CurrentDate,sd,ed,true,false,"",2);
        AddLateFees(CredManr,CMb,IVr,latedays,lateamount,lateformula);
        SetupOverdueLangCode(IVr,CredManr.Type);
        CM_AddPrepayments(IVr,CIb);
        StoreLoanInvoice(IVr,CredManr);
      end;
    end;
  end;

LGenOverdueInvMn:;
  return;
end;