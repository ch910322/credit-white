external inner function Boolean SetInSet2(string,string);
external function Boolean BuildCredManInfoMatrixOnSchedule2(record CredManVc,record CredManSetBlock,var record SMVc,Date);
external procedure BuildCredManPayPlanCust(record CredManVc,var record CredManPayPlanVc,record CredManSetBlock,Boolean,Boolean);
external procedure BuildCredManInfoMatrix(record CredManVc,record CredManPayPlanVc,record CredManSetBlock,var record SMVc);
external function Boolean CMShowVATColumn();
external function Boolean IsNovitiCustomer;

procedure GetInvoiceValuesFromMatrix(record SMVc SMr,record RcVc RepSpec,var val bal1,var val principle,var val interest,var val fees,var val vat,var val total,var val fees,var val bal2,var Date lastduedate,var val penalties)
begin
  row IVVc IVrw;
  Integer i,rwcnt;
  val calcbal;
  record CredHistVc CredHistr;
  row SMVc SMrw;
  
  bal1 = 0;
  principle = 0;
  interest = 0;
  fees = 0;
  vat = 0;
  total = 0;
  fees = 0;
  bal2 = 0;
  penalties = 0;

  rwcnt = MatRowCnt(SMr);
  for (i=0;i<rwcnt;i=i+1) begin
    MatRowGet(SMr,i,SMrw);
    if (SMrw.DueDate>=RepSpec.sStartDate and SMrw.DueDate<=RepSpec.sEndDate) then begin 
      if (bal1==0) then begin
        bal1 = SMrw.CurCredVal;
      end;
      principle = principle + SMrw.DebVal; 
      interest = interest + SMrw.CredVal;
      fees = fees + SMrw.DebVal2;
      if (bal2==0) then begin
        bal2 = SMrw.CurCredVal;
      end;
      vat = vat + SMrw.FrRate;
      total = total + SMrw.CurDebVal;
      lastduedate = SMrw.DueDate;
      penalties = penalties + SMrw.CredVal2;
    end else begin
      if (SMrw.DueDate>RepSpec.sEndDate) then begin
        i = rwcnt;
      end;
    end;
  end;

  return;
end;

global
procedure CMIncomeForecastRn(record RcVc RepSpec)
begin
  Integer c10,c11,c12,c13,c14,c15,c16,c17,c18;
  record IVVc IVr;
  Boolean TrHs,testf;
  record CredManVc CredManr;
  val bal1,principle,interest,vat,total,fees,bal2,penalties;
  val rate;
  record CUVc CUr;
  val totprinc,totint,totfees,totvat,tot;
  record CredManSetBlock CredManSetb;
  record CredManPayPlanVc CredManPayPlanr;
  row CredManPayPlanVc CredManPayPlanrw;
  record SMVc SMr;
  Boolean showvatf,notivif;
  Date lastduedate;
  record CredManTypeVc CMTr;
  
  StartReportJob(USetStr(200256));

  EndHeader;

  SetRepCol(2,50);//type
  SetRepCol(3,120);//customer code
  SetRepCol(4,190);//reg no
  SetRepCol(5,270);//interest
  SetRepCol(6,330);//sd
  SetRepCol(7,390);//ed
  SetRepCol(8,510);//agreement value
  c10 = 570;//balance
  c11 = 630;//principle
  c12 = 690;//interest
  c13 = 740;//fees
  c14 = 800;//penalties
  c15 = 860;//vat
  c16 = 920;//total
  c17 = 940;//due date
  c18 = 1100;//remaining

  notivif = IsNovitiCustomer;
  showvatf = CMShowVATColumn;
  StartFormat(15);
  OutString(0,0,USetStr(200240),false);
  OutString(2,0,USetStr(200241),false);
  OutString(3,0,USetStr(200242),false);
  OutString(4,0,USetStr(200243),false);
  OutString(5,0,USetStr(200244),false);
  OutString(6,0,USetStr(200245),false);
  OutString(7,0,USetStr(200246),false);
  OutString(8,0,USetStr(200247),true);
  OutString(c10,0,USetStr(200248),true);
  OutString(c11,0,USetStr(200249),true);
  OutString(c12,0,USetStr(200250),true);
  OutString(c13,0,USetStr(200251),true);
  OutString(c14,0,USetStr(200257),true);
  if (showvatf) then begin
    OutString(c15,0,USetStr(200252),true);
  end;
  OutString(c16,0,USetStr(200253),true);
  OutString(c17,0,USetStr(200254),false);
  OutString(c18,0,USetStr(200255),true);
  EndFormat;
  StartFormat(1);
  Gray_Divider(0,c18);
  EndFormat;

  BlockLoad(CredManSetb);

  TrHs = true;
  while (LoopMain(CredManr,1,true)) begin
    testf = true;
    if (nonblank(RepSpec.f1) and RepSpec.f1!=CredManr.CustCode) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f2) and RepSpec.f2!=CredManr.Type) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f3) and RepSpec.f3!=CredManr.OrderClass) then begin
      testf = false;
    end;
    if (nonblank(RepSpec.f4)) then begin
      if (notivif) then begin
        testf = false;
        CMTr.Code = CredManr.Type;
        if (ReadFirstMain(CMTr,1,true)) then begin
          if (SetInSet2(RepSpec.f4,CMTr.Classifications)) then begin
            testf = true;
          end;
        end;
      end else begin
        if (SetInSet2(RepSpec.f4,CredManr.Classifications)==false) then begin
          testf = false;
        end;
      end;
    end;
    if (nonblank(RepSpec.f5) and RepSpec.f5!=CredManr.SalesMan) then begin
      testf = false;
    end;
    if (CredManr.OKFlag==0) then begin
      testf = false;
    end;
    if (CredManr.startDate>RepSpec.sEndDate or CredManr.endDate<RepSpec.sStartDate) then begin
      testf = false;
    end;
    if (testf) then begin
      StartFormat(15);
      rate = CredManr.IntRate;
      if (CredManr.AnnualRate==0) then begin
        rate = rate*12;
      end;
      RecordClear(SMr);
      RecordClear(CredManPayPlanr);
      if (BuildCredManInfoMatrixOnSchedule2(CredManr,CredManSetb,SMr,RepSpec.sEndDate)==false) then begin
        BuildCredManPayPlanCust(CredManr,CredManPayPlanr,CredManSetb,true,true);
        BuildCredManInfoMatrix(CredManr,CredManPayPlanr,CredManSetb,SMr);
      end;
      CUr.Code = CredManr.CustCode;
      ReadFirstMain(CUr,1,true);
      OutString(0,"DblCredManVc",CredManr.SerNr,false);
      OutString(2,"DblCredManTypeVc",CredManr.Type,false);
      OutString(3,"DblCUVc",CredManr.CustCode,false);
      OutString(4,0,CUr.RegNr1,false);
      OutString(5,0,rate,false);
      OutString(6,0,CredManr.startDate,false);
      OutString(7,0,CredManr.endDate,false);
      OutString(8,0,CredManr.InvSum4,true);
      /*
      GetInvoiceValues(IVr,bal1,principle,interest,fees,vat,total,fees,bal2);
      if (blank(bal2)) then begin
        bal1 = CredManr.InvSum4;
        bal2 = CredManr.InvSum4;
      end;*/
      GetInvoiceValuesFromMatrix(SMr,RepSpec,bal1,principle,interest,fees,vat,total,fees,bal2,lastduedate,penalties);

      OutString(c10,0,bal1,true);
      OutString(c11,0,principle,true);
      OutString(c12,0,interest,true);
      OutString(c13,0,fees,true);
      OutString(c14,0,penalties,true);
      if (showvatf) then begin
        OutString(c15,0,vat,true);
      end;
      OutString(c16,0,total,true);
      OutString(c17,0,lastduedate,false);
      OutString(c18,0,bal2,true);
      totprinc = totprinc + principle;
      totint = totint + interest;
      totfees = totfees + fees;
      totvat = totvat + vat;
      tot = tot + total;
      EndFormat;
    end;
  end;

  Gray_Divider(0,c18);
  StartFormat(15);
  OutString(c11,0,totprinc,true);
  OutString(c12,0,totint,true);
  OutString(c13,0,totfees,true);
  OutString(c14,0,totvat,true);
  OutString(c15,0,tot,true);
  EndFormat;

  EndJob;


  return;
end;