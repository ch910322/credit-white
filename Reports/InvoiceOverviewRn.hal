//<halrule>server-only</halrule>
external inner function Boolean SetInSet2(string,string);
external inner function Boolean ReadFirstItem(string,var record INVc,Boolean,Boolean);
external inner procedure HTItemClass(string,var string);
external inner procedure HTArtGroup(string, var string);    
external inner procedure HTCustCat(string,var string);
external inner procedure HTCustClass(string,var string);
external inner procedure HTItem(string,var string);
external inner procedure HT2Per(Date, Date , var string);
external inner procedure InvVat(Integer,Integer,Integer,Integer,string,val,var val,var val,var val,var val,var val);
external inner function Boolean FindCustomerRelation(string,string,var record CUVc);


function string 255 AddCredManInvoiceMailRecipients(record CUVc CUr,var string mobile)
begin
  record CMInvoicingBlock CIb;
  record CUVc ContactCUr;
  string 255 res;
  vector boolean vmails;
  array string 100 amails;
  record ContactRelVc CRr;
  record EmailRecipVc EmailRecipr;
  row EmailRecipVc EmailReciprw;
  Integer i,rwcnt,mailrow;
  record CUVc CU2r;

  mobile = "";
  res = "";
  
  BlockLoad(CIb);
  if (CIb.SendToMainContact==1) then begin
    if (nonblank(CUr.Person)) then begin
      if (FindCustomerRelation(CUr.Code,CUr.Person,ContactCUr)) then begin
        if (nonblank(ContactCUr.eMail)) then begin
          vmails[ContactCUr.eMail] = true;
        end;
      end;
    end;
  end;
  if (CIb.SendToCompany==1) then begin
    if ((CIb.SendToCompNoContact==0) or (blank(CUr.Person))) then begin
     vmails[CUr.eMail] = true;
    end;
  end;
  if (CIb.SendToAddRecip==1) then begin
    EmailRecipr.MainContactCode = Cur.Code;
    if ReadFirstMain(EmailRecipr,1,true) then begin 
      rwcnt = MatRowCnt(EmailRecipr);
      for (i=0;i<rwcnt;i=i+1) begin
        MatRowGet(EmailRecipr,i,EmailReciprw);
        if (nonblank(EmailReciprw.ContactCode) and (EmailReciprw.DocType==kMailInvoice)) then begin 
          CU2r.Code = EmailReciprw.ContactCode;
          if (ReadFirstMain(CU2r,1,true)) then begin 
            if (nonblank(CU2r.eMail)) then begin 
              vmails[CU2r.eMail] = true;
            end;   
          end;
        end;
      end;  
    end;
  end;
  if (nonblank(CIb.SendToJobDescr)) then begin
    while (LoopKey("CustContactCode:" & CUr.Code,CRr,1,true)) begin
      if (CRr.Invalid==0) then begin
        ContactCUr.Code = CRr.ContactCode;
        if (ReadFirstMain(ContactCUr,1,true)) then begin
          if(nonblank(ContactCUr.Mobile))then begin
            mobile = ContactCUr.Mobile;
          end;
          if(nonblank(ContactCUr.JobDesc))then begin
            if (SetInSet(ContactCUr.JobDesc,CIb.SendToJobDescr)) then begin
              vmails[ContactCUr.eMail] = true;
            end;
          end;
        end;
      end;
    end;
  end;
  
  if(nonblank(CUr.Mobile))then begin
    mobile = CUr.Mobile;
  end;
  
  getvectortags(vmails,amails);
  for(i=0;i<amails.length;i=i+1)begin
    if(i>0 and nonblank(res) and nonblank(amails[i]))then begin
      res = res & ",";
    end;
    res = res & amails[i];
  end;
  
  AddCredManInvoiceMailRecipients = res;
  return;
end;

global procedure InvoiceOverviewRn(record RcVc RepSpec)
begin
  string 255 tstr,mail,mobile,periodfields,sdate,edate;
  integer rw,pos;
  record IVVc IVr;
  row IVVc IVrw;
  integer i,rwcnt,cred;
  boolean TrHs,testf;
  record CredManVc CredManr;
  record INVc INr;
  record CUVc CUr;
  
  StartReportJob("Invoice Overview");
  rw = 1;
  HT2Per(RepSpec.sStartDate,RepSpec.sEndDate,tstr);
  Header(rw,tstr,1);
  rw = rw + 1;
 
  EndHeader;
  
  pos = 0;
  startformat(15);
    outstring(pos,0,"Invoice Id",false);pos = pos+50;
    outstring(pos,0,"Customer Id",false);pos = pos+50;
    outstring(pos,0,"Invoice Nr",false);pos = pos+50;
    outstring(pos,0,"Channel Id",false);pos = pos+50;
    outstring(pos,0,"Invoice Date",false);pos = pos+50;
    outstring(pos,0,"Periodstart Date",false);pos = pos+50;
    outstring(pos,0,"Period End Date",false);pos = pos+50;
    outstring(pos,0,"Total Vat Sum",false);pos = pos+50;
    outstring(pos,0,"Total Sum",false);pos = pos+50;
    outstring(pos,0,"Currency",false);pos = pos+50;
    outstring(pos,0,"Item Type",false);pos = pos+50;
    outstring(pos,0,"Item Description",false);pos = pos+50;
    outstring(pos,0,"Item Amount",false);pos = pos+50;
    outstring(pos,0,"Item Price",false);pos = pos+50;
    outstring(pos,0,"Item Sum",false);pos = pos+50;
    outstring(pos,0,"Contract Id",false);pos = pos+50;
    outstring(pos,0,"Pay Due Date",false);pos = pos+50;
    outstring(pos,0,"Pay To Account",false);pos = pos+50;
    outstring(pos,0,"Company Name",false);pos = pos+50;
    outstring(pos,0,"Reg Number",false);pos = pos+50;
    outstring(pos,0,"Vat Reg Number",false);pos = pos+50;
    outstring(pos,0,"Phone Number",false);pos = pos+50;
    outstring(pos,0,"Email Address",false);pos = pos+50;
    outstring(pos,0,"Postal Address",false);pos = pos+50;
    outstring(pos,0,"City",false);pos = pos+50;
    outstring(pos,0,"Postal Code",false);pos = pos+50;
  endformat;
  
  IVr.InvDate = RepSpec.sStartDate;
  TrHs = true;
  while(loopkey("InvDate",IVr,1,TrHs))begin
    testf = true;
    if(IVr.InvDate>RepSpec.sEndDate)then begin TrHs = false; testf = false; end;
    if(nonblank(RepSpec.f1) and IVr.CustCode!=RepSpec.f1)then begin testf = false; end;
    if(nonblank(RepSpec.f2) and IVr.CustCat!=RepSpec.f2)then begin testf = false; end;
    if(RepSpec.long1>-1 and IVr.CustCredManNr!=RepSpec.long1)then begin testf = false; end;
    if(nonblank(RepSpec.f3))then begin
      if(IVr.CustCredManNr>-1)then begin
        CredManr.SerNr = IVr.CustCredManNr;
        readfirstmain(CredManr,1,true);
        if(!setinset(RepSpec.f3,CredManr.Classifications))then begin testf = false; end;
      end else begin
        testf = false;
      end;
    end;
    if(IVr.OKFlag==0)then begin testf = false; end;
    if(IVr.Invalid==1)then begin testf = false; end;
    
    if(testf)then begin
      CUr.Code = IVr.CustCode;
      readfirstmain(CUr,1,true);
      cred = 1;
      if(IVr.InvType==3)then begin
        cred = -1;
      end;
      
      mobile = "";
      mail = AddCredManInvoiceMailRecipients(CUr,mobile);
      rwcnt = matrowcnt(IVr);

      sdate = "";
      edate = "";
      for(i=0;i<rwcnt;i=i+1)begin
        matrowget(IVr,i,IVrw);
        if(IVrw.stp==kInvoiceRowTypeNormal and blank(IVrw.ArtCode))then begin
          if(left(IVrw.Spec,8)=="Periodas")then begin
            periodfields = right(IVrw.Spec,23);
            sdate = left(periodfields,10);
            edate = right(periodfields,10);
            i=rwcnt;
          end;
        end;
      end;
      

      for(i=0;i<rwcnt;i=i+1)begin
        matrowget(IVr,i,IVrw);
        if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin
          startformat(15);
            outstring(pos,0,IVr.SerNr/*Invoice Id*/,false);pos = pos+50;
            outstring(pos,0,IVr.CustCode/*Customer Id*/,false);pos = pos+50;
            outstring(pos,0,IVr.OfficialSerNr/*Invoice Nr*/,false);pos = pos+50;
            outstring(pos,0,""/*Channel Id*/,false);pos = pos+50;
            outstring(pos,0,IVr.InvDate/*Invoice Date*/,false);pos = pos+50;
            outstring(pos,0,sdate/*Periodstart Date*/,false);pos = pos+50;
            outstring(pos,0,edate/*Period End Date*/,false);pos = pos+50;
            outstring(pos,0,IVr.Sum3/*Total Vat Sum*/,false);pos = pos+50;
            outstring(pos,0,IVr.Sum4/*Total Sum*/,false);pos = pos+50;
            outstring(pos,0,IVr.CurncyCode/*Currency*/,false);pos = pos+50;
            outstring(pos,0,IVrw.ArtCode/*Item Type*/,false);pos = pos+50;
            outstring(pos,0,IVrw.Spec/*Item Description*/,false);pos = pos+50;
            outstring(pos,0,IVrw.Quant/*Item Amount*/,false);pos = pos+50;
            outstring(pos,0,IVrw.Price/*Item Price*/,false);pos = pos+50;
            outstring(pos,0,IVrw.Sum/*Item Sum*/,false);pos = pos+50;
            if(IVr.CustCredManNr>-1)then begin
              outstring(pos,0,IVr.CustCredManNr/*Contract Id*/,false);pos = pos+50;
            end else begin
              outstring(pos,0,""/*Contract Id*/,false);pos = pos+50;
            end;
            outstring(pos,0,IVr.PayDate/*Pay Due Date*/,false);pos = pos+50;
            outstring(pos,0,CUr.BankAccount/*Pay To Account*/,false);pos = pos+50;
            outstring(pos,0,IVr.Addr0/*Company Name*/,false);pos = pos+50;
            outstring(pos,0,Cur.RegNr1/*Reg Number*/,false);pos = pos+50;
            outstring(pos,0,CUr.VATNr/*Vat Reg Number*/,false);pos = pos+50;
            outstring(pos,0,mobile/*Phone Number*/,false);pos = pos+50;
            outstring(pos,0,mail/*Email Address*/,false);pos = pos+50;
            outstring(pos,0,CUr.InvAddr0/*Postal Address*/,false);pos = pos+50;
            outstring(pos,0,CUr.InvAddr3/*City*/,false);pos = pos+50;
            outstring(pos,0,CUr.InvAddr2/*Postal Code*/,false);pos = pos+50;
          endformat;
        end;
        if(IVrw.stp==kInvoiceRowTypePrepayment)then begin
          startformat(15);
            outstring(pos,0,IVr.SerNr/*Invoice Id*/,false);pos = pos+50;
            outstring(pos,0,IVr.CustCode/*Customer Id*/,false);pos = pos+50;
            outstring(pos,0,IVr.OfficialSerNr/*Invoice Nr*/,false);pos = pos+50;
            outstring(pos,0,""/*Channel Id*/,false);pos = pos+50;
            outstring(pos,0,IVr.InvDate/*Invoice Date*/,false);pos = pos+50;
            outstring(pos,0,sdate/*Periodstart Date*/,false);pos = pos+50;
            outstring(pos,0,edate/*Period End Date*/,false);pos = pos+50;
            outstring(pos,0,IVr.Sum3/*Total Vat Sum*/,false);pos = pos+50;
            outstring(pos,0,IVr.Sum4/*Total Sum*/,false);pos = pos+50;
            outstring(pos,0,IVr.CurncyCode/*Currency*/,false);pos = pos+50;
            outstring(pos,0,""/*Item Type*/,false);pos = pos+50;
            outstring(pos,0,"Iäankstiniai mok˜jimai"/*Item Description*/,false);pos = pos+50;
            outstring(pos,0,1/*Item Amount*/,false);pos = pos+50;
            outstring(pos,0,-IVrw.Sum/*Item Price*/,false);pos = pos+50;
            outstring(pos,0,-IVrw.Sum/*Item Sum*/,false);pos = pos+50;
            if(IVr.CustCredManNr>-1)then begin
              outstring(pos,0,IVr.CustCredManNr/*Contract Id*/,false);pos = pos+50;
            end else begin
              outstring(pos,0,""/*Contract Id*/,false);pos = pos+50;
            end;
            outstring(pos,0,IVr.PayDate/*Pay Due Date*/,false);pos = pos+50;
            outstring(pos,0,CUr.BankAccount/*Pay To Account*/,false);pos = pos+50;
            outstring(pos,0,IVr.Addr0/*Company Name*/,false);pos = pos+50;
            outstring(pos,0,Cur.RegNr1/*Reg Number*/,false);pos = pos+50;
            outstring(pos,0,CUr.VATNr/*Vat Reg Number*/,false);pos = pos+50;
            outstring(pos,0,mobile/*Phone Number*/,false);pos = pos+50;
            outstring(pos,0,mail/*Email Address*/,false);pos = pos+50;
            outstring(pos,0,CUr.InvAddr0/*Postal Address*/,false);pos = pos+50;
            outstring(pos,0,CUr.InvAddr3/*City*/,false);pos = pos+50;
            outstring(pos,0,CUr.InvAddr2/*Postal Code*/,false);pos = pos+50;
          endformat;
        end;
      end;
    end;
  end;
  
  EndJob;
  
return;
end;